// source: product/product_collection.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var product_base_pb = require('../product/base_pb.js');
goog.object.extend(proto, product_base_pb);
goog.exportSymbol('proto.product.GetMyProductCollectionByOrderIdReq', null, global);
goog.exportSymbol('proto.product.GetMyProductCollectionByOrderIdRes', null, global);
goog.exportSymbol('proto.product.GetMyProductCollectionReq', null, global);
goog.exportSymbol('proto.product.GetMyProductCollectionRes', null, global);
goog.exportSymbol('proto.product.InternalCheckProductCollectionReq', null, global);
goog.exportSymbol('proto.product.InternalCheckProductCollectionRes', null, global);
goog.exportSymbol('proto.product.InternalCheckProductIsBoughtReq', null, global);
goog.exportSymbol('proto.product.InternalCheckProductIsBoughtRes', null, global);
goog.exportSymbol('proto.product.ListMyProductCollectionReq', null, global);
goog.exportSymbol('proto.product.ListMyProductCollectionsRes', null, global);
goog.exportSymbol('proto.product.ProductCollectionInfo', null, global);
goog.exportSymbol('proto.product.ProductCollectionOrderSimpleInfo', null, global);
goog.exportSymbol('proto.product.ProductCollectionProductCurrencyInfo', null, global);
goog.exportSymbol('proto.product.ProductCollectionProductInfo', null, global);
goog.exportSymbol('proto.product.ProductCollectionUserInfo', null, global);
goog.exportSymbol('proto.product.ProductOrderPaymentMethod', null, global);
goog.exportSymbol('proto.product.ProductOrderPaymentMethodInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.ProductCollectionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.ProductCollectionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.ProductCollectionInfo.displayName = 'proto.product.ProductCollectionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.ProductCollectionProductInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.ProductCollectionProductInfo.repeatedFields_, null);
};
goog.inherits(proto.product.ProductCollectionProductInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.ProductCollectionProductInfo.displayName = 'proto.product.ProductCollectionProductInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.ProductCollectionUserInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.ProductCollectionUserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.ProductCollectionUserInfo.displayName = 'proto.product.ProductCollectionUserInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.ProductCollectionOrderSimpleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.ProductCollectionOrderSimpleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.ProductCollectionOrderSimpleInfo.displayName = 'proto.product.ProductCollectionOrderSimpleInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.ProductOrderPaymentMethodInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.ProductOrderPaymentMethodInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.ProductOrderPaymentMethodInfo.displayName = 'proto.product.ProductOrderPaymentMethodInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.ProductCollectionProductCurrencyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.ProductCollectionProductCurrencyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.ProductCollectionProductCurrencyInfo.displayName = 'proto.product.ProductCollectionProductCurrencyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.GetMyProductCollectionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.GetMyProductCollectionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.GetMyProductCollectionReq.displayName = 'proto.product.GetMyProductCollectionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.GetMyProductCollectionByOrderIdReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.GetMyProductCollectionByOrderIdReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.GetMyProductCollectionByOrderIdReq.displayName = 'proto.product.GetMyProductCollectionByOrderIdReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.ListMyProductCollectionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.ListMyProductCollectionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.ListMyProductCollectionReq.displayName = 'proto.product.ListMyProductCollectionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.InternalCheckProductCollectionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.InternalCheckProductCollectionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.InternalCheckProductCollectionReq.displayName = 'proto.product.InternalCheckProductCollectionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.InternalCheckProductIsBoughtReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.InternalCheckProductIsBoughtReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.InternalCheckProductIsBoughtReq.displayName = 'proto.product.InternalCheckProductIsBoughtReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.GetMyProductCollectionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.GetMyProductCollectionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.GetMyProductCollectionRes.displayName = 'proto.product.GetMyProductCollectionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.GetMyProductCollectionByOrderIdRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.GetMyProductCollectionByOrderIdRes.repeatedFields_, null);
};
goog.inherits(proto.product.GetMyProductCollectionByOrderIdRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.GetMyProductCollectionByOrderIdRes.displayName = 'proto.product.GetMyProductCollectionByOrderIdRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.ListMyProductCollectionsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.ListMyProductCollectionsRes.repeatedFields_, null);
};
goog.inherits(proto.product.ListMyProductCollectionsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.ListMyProductCollectionsRes.displayName = 'proto.product.ListMyProductCollectionsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.InternalCheckProductCollectionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.InternalCheckProductCollectionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.InternalCheckProductCollectionRes.displayName = 'proto.product.InternalCheckProductCollectionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.InternalCheckProductIsBoughtRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.InternalCheckProductIsBoughtRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.InternalCheckProductIsBoughtRes.displayName = 'proto.product.InternalCheckProductIsBoughtRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.ProductCollectionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.product.ProductCollectionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.ProductCollectionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    productInfo: (f = msg.getProductInfo()) && proto.product.ProductCollectionProductInfo.toObject(includeInstance, f),
    userInfo: (f = msg.getUserInfo()) && proto.product.ProductCollectionUserInfo.toObject(includeInstance, f),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    orderInfo: (f = msg.getOrderInfo()) && proto.product.ProductCollectionOrderSimpleInfo.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    expiredTime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    remainingTime: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.ProductCollectionInfo}
 */
proto.product.ProductCollectionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.ProductCollectionInfo;
  return proto.product.ProductCollectionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.ProductCollectionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.ProductCollectionInfo}
 */
proto.product.ProductCollectionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = new proto.product.ProductCollectionProductInfo;
      reader.readMessage(value,proto.product.ProductCollectionProductInfo.deserializeBinaryFromReader);
      msg.setProductInfo(value);
      break;
    case 5:
      var value = new proto.product.ProductCollectionUserInfo;
      reader.readMessage(value,proto.product.ProductCollectionUserInfo.deserializeBinaryFromReader);
      msg.setUserInfo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 7:
      var value = new proto.product.ProductCollectionOrderSimpleInfo;
      reader.readMessage(value,proto.product.ProductCollectionOrderSimpleInfo.deserializeBinaryFromReader);
      msg.setOrderInfo(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiredTime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRemainingTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.ProductCollectionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.ProductCollectionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.ProductCollectionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getProductInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.product.ProductCollectionProductInfo.serializeBinaryToWriter
    );
  }
  f = message.getUserInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.product.ProductCollectionUserInfo.serializeBinaryToWriter
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOrderInfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.product.ProductCollectionOrderSimpleInfo.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getExpiredTime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getRemainingTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.product.ProductCollectionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.product.ProductCollectionInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.product.ProductCollectionInfo.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional ProductCollectionProductInfo product_info = 4;
 * @return {?proto.product.ProductCollectionProductInfo}
 */
proto.product.ProductCollectionInfo.prototype.getProductInfo = function() {
  return /** @type{?proto.product.ProductCollectionProductInfo} */ (
    jspb.Message.getWrapperField(this, proto.product.ProductCollectionProductInfo, 4));
};


/**
 * @param {?proto.product.ProductCollectionProductInfo|undefined} value
 * @return {!proto.product.ProductCollectionInfo} returns this
*/
proto.product.ProductCollectionInfo.prototype.setProductInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.clearProductInfo = function() {
  return this.setProductInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.ProductCollectionInfo.prototype.hasProductInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProductCollectionUserInfo user_info = 5;
 * @return {?proto.product.ProductCollectionUserInfo}
 */
proto.product.ProductCollectionInfo.prototype.getUserInfo = function() {
  return /** @type{?proto.product.ProductCollectionUserInfo} */ (
    jspb.Message.getWrapperField(this, proto.product.ProductCollectionUserInfo, 5));
};


/**
 * @param {?proto.product.ProductCollectionUserInfo|undefined} value
 * @return {!proto.product.ProductCollectionInfo} returns this
*/
proto.product.ProductCollectionInfo.prototype.setUserInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.clearUserInfo = function() {
  return this.setUserInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.ProductCollectionInfo.prototype.hasUserInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string partnership_id = 6;
 * @return {string}
 */
proto.product.ProductCollectionInfo.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ProductCollectionOrderSimpleInfo order_info = 7;
 * @return {?proto.product.ProductCollectionOrderSimpleInfo}
 */
proto.product.ProductCollectionInfo.prototype.getOrderInfo = function() {
  return /** @type{?proto.product.ProductCollectionOrderSimpleInfo} */ (
    jspb.Message.getWrapperField(this, proto.product.ProductCollectionOrderSimpleInfo, 7));
};


/**
 * @param {?proto.product.ProductCollectionOrderSimpleInfo|undefined} value
 * @return {!proto.product.ProductCollectionInfo} returns this
*/
proto.product.ProductCollectionInfo.prototype.setOrderInfo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.clearOrderInfo = function() {
  return this.setOrderInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.ProductCollectionInfo.prototype.hasOrderInfo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 quantity = 8;
 * @return {number}
 */
proto.product.ProductCollectionInfo.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 expired_time = 9;
 * @return {number}
 */
proto.product.ProductCollectionInfo.prototype.getExpiredTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.setExpiredTime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 remaining_time = 10;
 * @return {number}
 */
proto.product.ProductCollectionInfo.prototype.getRemainingTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionInfo} returns this
 */
proto.product.ProductCollectionInfo.prototype.setRemainingTime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.ProductCollectionProductInfo.repeatedFields_ = [9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.ProductCollectionProductInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.product.ProductCollectionProductInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.ProductCollectionProductInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionProductInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    name: jspb.Message.getFieldWithDefault(msg, 7, ""),
    trailerUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    mediasList: jspb.Message.toObjectList(msg.getMediasList(),
    product_base_pb.Media.toObject, includeInstance),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    bookingStartTime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    bookingEndTime: jspb.Message.getFieldWithDefault(msg, 12, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 13, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 14, 0),
    sku: jspb.Message.getFieldWithDefault(msg, 15, ""),
    listedPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    discountPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0),
    rental: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    uom: jspb.Message.getFieldWithDefault(msg, 20, ""),
    barcode: jspb.Message.getFieldWithDefault(msg, 21, ""),
    weight: jspb.Message.getFieldWithDefault(msg, 22, 0),
    volume: jspb.Message.getFieldWithDefault(msg, 25, 0),
    ratingValue: jspb.Message.getFieldWithDefault(msg, 26, 0),
    ratingCount: jspb.Message.getFieldWithDefault(msg, 27, 0),
    currency: (f = msg.getCurrency()) && proto.product.ProductCollectionProductCurrencyInfo.toObject(includeInstance, f),
    brand: jspb.Message.getFieldWithDefault(msg, 39, ""),
    description: jspb.Message.getFieldWithDefault(msg, 30, ""),
    limited: jspb.Message.getBooleanFieldWithDefault(msg, 31, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.ProductCollectionProductInfo}
 */
proto.product.ProductCollectionProductInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.ProductCollectionProductInfo;
  return proto.product.ProductCollectionProductInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.ProductCollectionProductInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.ProductCollectionProductInfo}
 */
proto.product.ProductCollectionProductInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrailerUrl(value);
      break;
    case 9:
      var value = new product_base_pb.Media;
      reader.readMessage(value,product_base_pb.Media.deserializeBinaryFromReader);
      msg.addMedias(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingStartTime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingEndTime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setListedPrice(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountPercent(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRental(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setUom(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcode(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeight(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVolume(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRatingValue(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRatingCount(value);
      break;
    case 28:
      var value = new proto.product.ProductCollectionProductCurrencyInfo;
      reader.readMessage(value,proto.product.ProductCollectionProductCurrencyInfo.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLimited(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.ProductCollectionProductInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.ProductCollectionProductInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.ProductCollectionProductInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionProductInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTrailerUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMediasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      product_base_pb.Media.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getBookingStartTime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getBookingEndTime();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getListedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getDiscountPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = message.getRental();
  if (f) {
    writer.writeBool(
      29,
      f
    );
  }
  f = message.getUom();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getBarcode();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getRatingValue();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getRatingCount();
  if (f !== 0) {
    writer.writeInt64(
      27,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.product.ProductCollectionProductCurrencyInfo.serializeBinaryToWriter
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getLimited();
  if (f) {
    writer.writeBool(
      31,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.product.ProductCollectionProductInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool active = 6;
 * @return {boolean}
 */
proto.product.ProductCollectionProductInfo.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.product.ProductCollectionProductInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string trailer_url = 8;
 * @return {string}
 */
proto.product.ProductCollectionProductInfo.prototype.getTrailerUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setTrailerUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated Media medias = 9;
 * @return {!Array<!proto.product.Media>}
 */
proto.product.ProductCollectionProductInfo.prototype.getMediasList = function() {
  return /** @type{!Array<!proto.product.Media>} */ (
    jspb.Message.getRepeatedWrapperField(this, product_base_pb.Media, 9));
};


/**
 * @param {!Array<!proto.product.Media>} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
*/
proto.product.ProductCollectionProductInfo.prototype.setMediasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.product.Media=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.Media}
 */
proto.product.ProductCollectionProductInfo.prototype.addMedias = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.product.Media, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.clearMediasList = function() {
  return this.setMediasList([]);
};


/**
 * repeated string tags = 10;
 * @return {!Array<string>}
 */
proto.product.ProductCollectionProductInfo.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional int64 booking_start_time = 11;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getBookingStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setBookingStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 booking_end_time = 12;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getBookingEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setBookingEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 duration = 13;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 quantity = 14;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string sku = 15;
 * @return {string}
 */
proto.product.ProductCollectionProductInfo.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional double listed_price = 16;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getListedPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setListedPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional double discount_percent = 17;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getDiscountPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setDiscountPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional double price = 18;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional bool rental = 29;
 * @return {boolean}
 */
proto.product.ProductCollectionProductInfo.prototype.getRental = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setRental = function(value) {
  return jspb.Message.setProto3BooleanField(this, 29, value);
};


/**
 * optional string uom = 20;
 * @return {string}
 */
proto.product.ProductCollectionProductInfo.prototype.getUom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setUom = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string barcode = 21;
 * @return {string}
 */
proto.product.ProductCollectionProductInfo.prototype.getBarcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setBarcode = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int32 weight = 22;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int32 volume = 25;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 rating_value = 26;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getRatingValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setRatingValue = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int64 rating_count = 27;
 * @return {number}
 */
proto.product.ProductCollectionProductInfo.prototype.getRatingCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setRatingCount = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional ProductCollectionProductCurrencyInfo currency = 28;
 * @return {?proto.product.ProductCollectionProductCurrencyInfo}
 */
proto.product.ProductCollectionProductInfo.prototype.getCurrency = function() {
  return /** @type{?proto.product.ProductCollectionProductCurrencyInfo} */ (
    jspb.Message.getWrapperField(this, proto.product.ProductCollectionProductCurrencyInfo, 28));
};


/**
 * @param {?proto.product.ProductCollectionProductCurrencyInfo|undefined} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
*/
proto.product.ProductCollectionProductInfo.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.ProductCollectionProductInfo.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional string brand = 39;
 * @return {string}
 */
proto.product.ProductCollectionProductInfo.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setBrand = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string description = 30;
 * @return {string}
 */
proto.product.ProductCollectionProductInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional bool limited = 31;
 * @return {boolean}
 */
proto.product.ProductCollectionProductInfo.prototype.getLimited = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.product.ProductCollectionProductInfo} returns this
 */
proto.product.ProductCollectionProductInfo.prototype.setLimited = function(value) {
  return jspb.Message.setProto3BooleanField(this, 31, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.ProductCollectionUserInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.product.ProductCollectionUserInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.ProductCollectionUserInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionUserInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    phoneCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    profilePicture: jspb.Message.getFieldWithDefault(msg, 6, ""),
    addr: jspb.Message.getFieldWithDefault(msg, 7, ""),
    city: jspb.Message.getFieldWithDefault(msg, 8, ""),
    district: jspb.Message.getFieldWithDefault(msg, 9, ""),
    ward: jspb.Message.getFieldWithDefault(msg, 10, ""),
    description: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.ProductCollectionUserInfo}
 */
proto.product.ProductCollectionUserInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.ProductCollectionUserInfo;
  return proto.product.ProductCollectionUserInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.ProductCollectionUserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.ProductCollectionUserInfo}
 */
proto.product.ProductCollectionUserInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfilePicture(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistrict(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setWard(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.ProductCollectionUserInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.ProductCollectionUserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.ProductCollectionUserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionUserInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPhoneCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProfilePicture();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDistrict();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWard();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string phone_number = 4;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string phone_code = 5;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getPhoneCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setPhoneCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string profile_picture = 6;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getProfilePicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setProfilePicture = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string addr = 7;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string city = 8;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string district = 9;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getDistrict = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setDistrict = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string ward = 10;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getWard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setWard = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string description = 11;
 * @return {string}
 */
proto.product.ProductCollectionUserInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionUserInfo} returns this
 */
proto.product.ProductCollectionUserInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.product.ProductCollectionOrderSimpleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.ProductCollectionOrderSimpleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionOrderSimpleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cartId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentMethod: (f = msg.getPaymentMethod()) && proto.product.ProductOrderPaymentMethodInfo.toObject(includeInstance, f),
    orderCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paymentId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.ProductCollectionOrderSimpleInfo}
 */
proto.product.ProductCollectionOrderSimpleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.ProductCollectionOrderSimpleInfo;
  return proto.product.ProductCollectionOrderSimpleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.ProductCollectionOrderSimpleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.ProductCollectionOrderSimpleInfo}
 */
proto.product.ProductCollectionOrderSimpleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCartId(value);
      break;
    case 3:
      var value = new proto.product.ProductOrderPaymentMethodInfo;
      reader.readMessage(value,proto.product.ProductOrderPaymentMethodInfo.deserializeBinaryFromReader);
      msg.setPaymentMethod(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.ProductCollectionOrderSimpleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.ProductCollectionOrderSimpleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionOrderSimpleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCartId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.product.ProductOrderPaymentMethodInfo.serializeBinaryToWriter
    );
  }
  f = message.getOrderCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionOrderSimpleInfo} returns this
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cart_id = 2;
 * @return {string}
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.getCartId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionOrderSimpleInfo} returns this
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.setCartId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ProductOrderPaymentMethodInfo payment_method = 3;
 * @return {?proto.product.ProductOrderPaymentMethodInfo}
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.getPaymentMethod = function() {
  return /** @type{?proto.product.ProductOrderPaymentMethodInfo} */ (
    jspb.Message.getWrapperField(this, proto.product.ProductOrderPaymentMethodInfo, 3));
};


/**
 * @param {?proto.product.ProductOrderPaymentMethodInfo|undefined} value
 * @return {!proto.product.ProductCollectionOrderSimpleInfo} returns this
*/
proto.product.ProductCollectionOrderSimpleInfo.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.ProductCollectionOrderSimpleInfo} returns this
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.clearPaymentMethod = function() {
  return this.setPaymentMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.hasPaymentMethod = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string order_code = 4;
 * @return {string}
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.getOrderCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionOrderSimpleInfo} returns this
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.setOrderCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string payment_id = 5;
 * @return {string}
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionOrderSimpleInfo} returns this
 */
proto.product.ProductCollectionOrderSimpleInfo.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.product.ProductOrderPaymentMethodInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.ProductOrderPaymentMethodInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductOrderPaymentMethodInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    method: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    additionalFee: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    displayFee: jspb.Message.getFieldWithDefault(msg, 6, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 7, ""),
    id: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.ProductOrderPaymentMethodInfo}
 */
proto.product.ProductOrderPaymentMethodInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.ProductOrderPaymentMethodInfo;
  return proto.product.ProductOrderPaymentMethodInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.ProductOrderPaymentMethodInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.ProductOrderPaymentMethodInfo}
 */
proto.product.ProductOrderPaymentMethodInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {!proto.product.ProductOrderPaymentMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAdditionalFee(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.ProductOrderPaymentMethodInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.ProductOrderPaymentMethodInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductOrderPaymentMethodInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getAdditionalFee();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getDisplayFee();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductOrderPaymentMethodInfo} returns this
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductOrderPaymentMethodInfo} returns this
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ProductOrderPaymentMethod method = 3;
 * @return {!proto.product.ProductOrderPaymentMethod}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.getMethod = function() {
  return /** @type {!proto.product.ProductOrderPaymentMethod} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.product.ProductOrderPaymentMethod} value
 * @return {!proto.product.ProductOrderPaymentMethodInfo} returns this
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double fee = 4;
 * @return {number}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductOrderPaymentMethodInfo} returns this
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double additional_fee = 5;
 * @return {number}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.getAdditionalFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.product.ProductOrderPaymentMethodInfo} returns this
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.setAdditionalFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string display_fee = 6;
 * @return {string}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.getDisplayFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductOrderPaymentMethodInfo} returns this
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.setDisplayFee = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string icon = 7;
 * @return {string}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductOrderPaymentMethodInfo} returns this
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductOrderPaymentMethodInfo} returns this
 */
proto.product.ProductOrderPaymentMethodInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.product.ProductCollectionProductCurrencyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.ProductCollectionProductCurrencyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionProductCurrencyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.ProductCollectionProductCurrencyInfo}
 */
proto.product.ProductCollectionProductCurrencyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.ProductCollectionProductCurrencyInfo;
  return proto.product.ProductCollectionProductCurrencyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.ProductCollectionProductCurrencyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.ProductCollectionProductCurrencyInfo}
 */
proto.product.ProductCollectionProductCurrencyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.ProductCollectionProductCurrencyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.ProductCollectionProductCurrencyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ProductCollectionProductCurrencyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductCurrencyInfo} returns this
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductCurrencyInfo} returns this
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductCurrencyInfo} returns this
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon = 4;
 * @return {string}
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.ProductCollectionProductCurrencyInfo} returns this
 */
proto.product.ProductCollectionProductCurrencyInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.GetMyProductCollectionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.GetMyProductCollectionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.GetMyProductCollectionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.GetMyProductCollectionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.GetMyProductCollectionReq}
 */
proto.product.GetMyProductCollectionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.GetMyProductCollectionReq;
  return proto.product.GetMyProductCollectionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.GetMyProductCollectionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.GetMyProductCollectionReq}
 */
proto.product.GetMyProductCollectionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.GetMyProductCollectionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.GetMyProductCollectionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.GetMyProductCollectionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.GetMyProductCollectionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.product.GetMyProductCollectionReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.GetMyProductCollectionReq} returns this
 */
proto.product.GetMyProductCollectionReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.GetMyProductCollectionByOrderIdReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.GetMyProductCollectionByOrderIdReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.GetMyProductCollectionByOrderIdReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.GetMyProductCollectionByOrderIdReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && product_base_pb.PaginationReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.GetMyProductCollectionByOrderIdReq}
 */
proto.product.GetMyProductCollectionByOrderIdReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.GetMyProductCollectionByOrderIdReq;
  return proto.product.GetMyProductCollectionByOrderIdReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.GetMyProductCollectionByOrderIdReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.GetMyProductCollectionByOrderIdReq}
 */
proto.product.GetMyProductCollectionByOrderIdReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = new product_base_pb.PaginationReq;
      reader.readMessage(value,product_base_pb.PaginationReq.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.GetMyProductCollectionByOrderIdReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.GetMyProductCollectionByOrderIdReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.GetMyProductCollectionByOrderIdReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.GetMyProductCollectionByOrderIdReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      product_base_pb.PaginationReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.product.GetMyProductCollectionByOrderIdReq.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.GetMyProductCollectionByOrderIdReq} returns this
 */
proto.product.GetMyProductCollectionByOrderIdReq.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PaginationReq pagination = 2;
 * @return {?proto.product.PaginationReq}
 */
proto.product.GetMyProductCollectionByOrderIdReq.prototype.getPagination = function() {
  return /** @type{?proto.product.PaginationReq} */ (
    jspb.Message.getWrapperField(this, product_base_pb.PaginationReq, 2));
};


/**
 * @param {?proto.product.PaginationReq|undefined} value
 * @return {!proto.product.GetMyProductCollectionByOrderIdReq} returns this
*/
proto.product.GetMyProductCollectionByOrderIdReq.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.GetMyProductCollectionByOrderIdReq} returns this
 */
proto.product.GetMyProductCollectionByOrderIdReq.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.GetMyProductCollectionByOrderIdReq.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.ListMyProductCollectionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.ListMyProductCollectionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.ListMyProductCollectionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ListMyProductCollectionReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.ListMyProductCollectionReq}
 */
proto.product.ListMyProductCollectionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.ListMyProductCollectionReq;
  return proto.product.ListMyProductCollectionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.ListMyProductCollectionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.ListMyProductCollectionReq}
 */
proto.product.ListMyProductCollectionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.ListMyProductCollectionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.ListMyProductCollectionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.ListMyProductCollectionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ListMyProductCollectionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.InternalCheckProductCollectionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.InternalCheckProductCollectionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.InternalCheckProductCollectionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.InternalCheckProductCollectionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.InternalCheckProductCollectionReq}
 */
proto.product.InternalCheckProductCollectionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.InternalCheckProductCollectionReq;
  return proto.product.InternalCheckProductCollectionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.InternalCheckProductCollectionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.InternalCheckProductCollectionReq}
 */
proto.product.InternalCheckProductCollectionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.InternalCheckProductCollectionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.InternalCheckProductCollectionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.InternalCheckProductCollectionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.InternalCheckProductCollectionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.product.InternalCheckProductCollectionReq.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.InternalCheckProductCollectionReq} returns this
 */
proto.product.InternalCheckProductCollectionReq.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.product.InternalCheckProductCollectionReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.InternalCheckProductCollectionReq} returns this
 */
proto.product.InternalCheckProductCollectionReq.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.InternalCheckProductIsBoughtReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.InternalCheckProductIsBoughtReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.InternalCheckProductIsBoughtReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.InternalCheckProductIsBoughtReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.InternalCheckProductIsBoughtReq}
 */
proto.product.InternalCheckProductIsBoughtReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.InternalCheckProductIsBoughtReq;
  return proto.product.InternalCheckProductIsBoughtReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.InternalCheckProductIsBoughtReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.InternalCheckProductIsBoughtReq}
 */
proto.product.InternalCheckProductIsBoughtReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.InternalCheckProductIsBoughtReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.InternalCheckProductIsBoughtReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.InternalCheckProductIsBoughtReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.InternalCheckProductIsBoughtReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.product.InternalCheckProductIsBoughtReq.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.InternalCheckProductIsBoughtReq} returns this
 */
proto.product.InternalCheckProductIsBoughtReq.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.product.InternalCheckProductIsBoughtReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.InternalCheckProductIsBoughtReq} returns this
 */
proto.product.InternalCheckProductIsBoughtReq.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.GetMyProductCollectionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.product.GetMyProductCollectionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.GetMyProductCollectionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.GetMyProductCollectionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.product.ProductCollectionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.GetMyProductCollectionRes}
 */
proto.product.GetMyProductCollectionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.GetMyProductCollectionRes;
  return proto.product.GetMyProductCollectionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.GetMyProductCollectionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.GetMyProductCollectionRes}
 */
proto.product.GetMyProductCollectionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.ProductCollectionInfo;
      reader.readMessage(value,proto.product.ProductCollectionInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.GetMyProductCollectionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.GetMyProductCollectionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.GetMyProductCollectionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.GetMyProductCollectionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.product.ProductCollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProductCollectionInfo info = 1;
 * @return {?proto.product.ProductCollectionInfo}
 */
proto.product.GetMyProductCollectionRes.prototype.getInfo = function() {
  return /** @type{?proto.product.ProductCollectionInfo} */ (
    jspb.Message.getWrapperField(this, proto.product.ProductCollectionInfo, 1));
};


/**
 * @param {?proto.product.ProductCollectionInfo|undefined} value
 * @return {!proto.product.GetMyProductCollectionRes} returns this
*/
proto.product.GetMyProductCollectionRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.GetMyProductCollectionRes} returns this
 */
proto.product.GetMyProductCollectionRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.GetMyProductCollectionRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.GetMyProductCollectionByOrderIdRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.GetMyProductCollectionByOrderIdRes.prototype.toObject = function(opt_includeInstance) {
  return proto.product.GetMyProductCollectionByOrderIdRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.GetMyProductCollectionByOrderIdRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.GetMyProductCollectionByOrderIdRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoList: jspb.Message.toObjectList(msg.getInfoList(),
    proto.product.ProductCollectionInfo.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && product_base_pb.PaginationRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.GetMyProductCollectionByOrderIdRes}
 */
proto.product.GetMyProductCollectionByOrderIdRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.GetMyProductCollectionByOrderIdRes;
  return proto.product.GetMyProductCollectionByOrderIdRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.GetMyProductCollectionByOrderIdRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.GetMyProductCollectionByOrderIdRes}
 */
proto.product.GetMyProductCollectionByOrderIdRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.ProductCollectionInfo;
      reader.readMessage(value,proto.product.ProductCollectionInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    case 2:
      var value = new product_base_pb.PaginationRes;
      reader.readMessage(value,product_base_pb.PaginationRes.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.GetMyProductCollectionByOrderIdRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.GetMyProductCollectionByOrderIdRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.GetMyProductCollectionByOrderIdRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.GetMyProductCollectionByOrderIdRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.product.ProductCollectionInfo.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      product_base_pb.PaginationRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductCollectionInfo info = 1;
 * @return {!Array<!proto.product.ProductCollectionInfo>}
 */
proto.product.GetMyProductCollectionByOrderIdRes.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.product.ProductCollectionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.ProductCollectionInfo, 1));
};


/**
 * @param {!Array<!proto.product.ProductCollectionInfo>} value
 * @return {!proto.product.GetMyProductCollectionByOrderIdRes} returns this
*/
proto.product.GetMyProductCollectionByOrderIdRes.prototype.setInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.product.ProductCollectionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.ProductCollectionInfo}
 */
proto.product.GetMyProductCollectionByOrderIdRes.prototype.addInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.product.ProductCollectionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.GetMyProductCollectionByOrderIdRes} returns this
 */
proto.product.GetMyProductCollectionByOrderIdRes.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};


/**
 * optional PaginationRes pagination = 2;
 * @return {?proto.product.PaginationRes}
 */
proto.product.GetMyProductCollectionByOrderIdRes.prototype.getPagination = function() {
  return /** @type{?proto.product.PaginationRes} */ (
    jspb.Message.getWrapperField(this, product_base_pb.PaginationRes, 2));
};


/**
 * @param {?proto.product.PaginationRes|undefined} value
 * @return {!proto.product.GetMyProductCollectionByOrderIdRes} returns this
*/
proto.product.GetMyProductCollectionByOrderIdRes.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.GetMyProductCollectionByOrderIdRes} returns this
 */
proto.product.GetMyProductCollectionByOrderIdRes.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.GetMyProductCollectionByOrderIdRes.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.ListMyProductCollectionsRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.ListMyProductCollectionsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.product.ListMyProductCollectionsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.ListMyProductCollectionsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ListMyProductCollectionsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoList: jspb.Message.toObjectList(msg.getInfoList(),
    proto.product.ProductCollectionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.ListMyProductCollectionsRes}
 */
proto.product.ListMyProductCollectionsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.ListMyProductCollectionsRes;
  return proto.product.ListMyProductCollectionsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.ListMyProductCollectionsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.ListMyProductCollectionsRes}
 */
proto.product.ListMyProductCollectionsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.ProductCollectionInfo;
      reader.readMessage(value,proto.product.ProductCollectionInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.ListMyProductCollectionsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.ListMyProductCollectionsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.ListMyProductCollectionsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.ListMyProductCollectionsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.product.ProductCollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductCollectionInfo info = 1;
 * @return {!Array<!proto.product.ProductCollectionInfo>}
 */
proto.product.ListMyProductCollectionsRes.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.product.ProductCollectionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.ProductCollectionInfo, 1));
};


/**
 * @param {!Array<!proto.product.ProductCollectionInfo>} value
 * @return {!proto.product.ListMyProductCollectionsRes} returns this
*/
proto.product.ListMyProductCollectionsRes.prototype.setInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.product.ProductCollectionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.ProductCollectionInfo}
 */
proto.product.ListMyProductCollectionsRes.prototype.addInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.product.ProductCollectionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.ListMyProductCollectionsRes} returns this
 */
proto.product.ListMyProductCollectionsRes.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.InternalCheckProductCollectionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.product.InternalCheckProductCollectionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.InternalCheckProductCollectionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.InternalCheckProductCollectionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bought: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    expiredTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    remainingTime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.InternalCheckProductCollectionRes}
 */
proto.product.InternalCheckProductCollectionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.InternalCheckProductCollectionRes;
  return proto.product.InternalCheckProductCollectionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.InternalCheckProductCollectionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.InternalCheckProductCollectionRes}
 */
proto.product.InternalCheckProductCollectionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBought(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiredTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRemainingTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.InternalCheckProductCollectionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.InternalCheckProductCollectionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.InternalCheckProductCollectionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.InternalCheckProductCollectionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBought();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getExpiredTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRemainingTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional bool bought = 1;
 * @return {boolean}
 */
proto.product.InternalCheckProductCollectionRes.prototype.getBought = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.product.InternalCheckProductCollectionRes} returns this
 */
proto.product.InternalCheckProductCollectionRes.prototype.setBought = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int64 expired_time = 2;
 * @return {number}
 */
proto.product.InternalCheckProductCollectionRes.prototype.getExpiredTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.InternalCheckProductCollectionRes} returns this
 */
proto.product.InternalCheckProductCollectionRes.prototype.setExpiredTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 remaining_time = 3;
 * @return {number}
 */
proto.product.InternalCheckProductCollectionRes.prototype.getRemainingTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.InternalCheckProductCollectionRes} returns this
 */
proto.product.InternalCheckProductCollectionRes.prototype.setRemainingTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.InternalCheckProductIsBoughtRes.prototype.toObject = function(opt_includeInstance) {
  return proto.product.InternalCheckProductIsBoughtRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.InternalCheckProductIsBoughtRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.InternalCheckProductIsBoughtRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.InternalCheckProductIsBoughtRes}
 */
proto.product.InternalCheckProductIsBoughtRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.InternalCheckProductIsBoughtRes;
  return proto.product.InternalCheckProductIsBoughtRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.InternalCheckProductIsBoughtRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.InternalCheckProductIsBoughtRes}
 */
proto.product.InternalCheckProductIsBoughtRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.InternalCheckProductIsBoughtRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.InternalCheckProductIsBoughtRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.InternalCheckProductIsBoughtRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.InternalCheckProductIsBoughtRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool result = 1;
 * @return {boolean}
 */
proto.product.InternalCheckProductIsBoughtRes.prototype.getResult = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.product.InternalCheckProductIsBoughtRes} returns this
 */
proto.product.InternalCheckProductIsBoughtRes.prototype.setResult = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.product.ProductOrderPaymentMethod = {
  PRODUCT_ORDER_PAYMENT_METHOD_INVALID: 0,
  PRODUCT_ORDER_PAYMENT_METHOD_PAYPAL: 1,
  PRODUCT_ORDER_PAYMENT_METHOD_VNPAY_EWALLET: 2,
  PRODUCT_ORDER_PAYMENT_METHOD_VNPAY_CREDITCARD: 3,
  PRODUCT_ORDER_PAYMENT_METHOD_VNPAY_BANKTRANSFER: 4,
  PRODUCT_ORDER_PAYMENT_METHOD_VNPAY_QRCODE: 5,
  PRODUCT_ORDER_PAYMENT_METHOD_MANUAL_BANKTRANSFER: 6,
  PRODUCT_ORDER_PAYMENT_METHOD_MOMO: 7,
  PRODUCT_ORDER_PAYMENT_METHOD_TWO_CHECKOUT: 8,
  PRODUCT_ORDER_PAYMENT_METHOD_PAYOO_CREDITCARD: 9,
  PRODUCT_ORDER_PAYMENT_METHOD_PAYOO_DOMESTIC_CARD: 10,
  PRODUCT_ORDER_PAYMENT_METHOD_PAYOO_QRCODE: 11,
  PRODUCT_ORDER_PAYMENT_METHOD_ONE_PAY_CREDITCARD: 12,
  PRODUCT_ORDER_PAYMENT_METHOD_ONE_PAY_CREDITCARD_DOMESTIC_ISSUE: 13,
  PRODUCT_ORDER_PAYMENT_METHOD_ONE_PAY_DOMESTIC_CARD: 14,
  PRODUCT_ORDER_PAYMENT_METHOD_ONE_PAY_QRCODE: 15
};

goog.object.extend(exports, proto.product);
