// source: product/backend/product.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var product_backend_base_pb = require('../../product/backend/base_pb.js');
goog.object.extend(proto, product_backend_base_pb);
var product_base_pb = require('../../product/base_pb.js');
goog.object.extend(proto, product_base_pb);
goog.exportSymbol('proto.product.backend.AvailableQuantity', null, global);
goog.exportSymbol('proto.product.backend.CheckAndLockQuantityReq', null, global);
goog.exportSymbol('proto.product.backend.CheckQuantityReq', null, global);
goog.exportSymbol('proto.product.backend.GenerateProductByEventSeatReq', null, global);
goog.exportSymbol('proto.product.backend.GetAvailableQuantityReq', null, global);
goog.exportSymbol('proto.product.backend.GetAvailableQuantityRes', null, global);
goog.exportSymbol('proto.product.backend.ListProductByIdsReq', null, global);
goog.exportSymbol('proto.product.backend.ListProductByIdsRes', null, global);
goog.exportSymbol('proto.product.backend.ProductAttribute', null, global);
goog.exportSymbol('proto.product.backend.ProductCurrencyInfo', null, global);
goog.exportSymbol('proto.product.backend.ProductInfo', null, global);
goog.exportSymbol('proto.product.backend.ProductQuantity', null, global);
goog.exportSymbol('proto.product.backend.ProductStatus', null, global);
goog.exportSymbol('proto.product.backend.PurchaseType', null, global);
goog.exportSymbol('proto.product.backend.UnlockAndUpdateQuantityAction', null, global);
goog.exportSymbol('proto.product.backend.UnlockAndUpdateQuantityReq', null, global);
goog.exportSymbol('proto.product.backend.UnlockQuantityReq', null, global);
goog.exportSymbol('proto.product.backend.ValueType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.ProductInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.ProductInfo.repeatedFields_, null);
};
goog.inherits(proto.product.backend.ProductInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.ProductInfo.displayName = 'proto.product.backend.ProductInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.ProductCurrencyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.backend.ProductCurrencyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.ProductCurrencyInfo.displayName = 'proto.product.backend.ProductCurrencyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.ProductAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.backend.ProductAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.ProductAttribute.displayName = 'proto.product.backend.ProductAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.ProductQuantity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.backend.ProductQuantity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.ProductQuantity.displayName = 'proto.product.backend.ProductQuantity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.AvailableQuantity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.backend.AvailableQuantity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.AvailableQuantity.displayName = 'proto.product.backend.AvailableQuantity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.ListProductByIdsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.ListProductByIdsReq.repeatedFields_, null);
};
goog.inherits(proto.product.backend.ListProductByIdsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.ListProductByIdsReq.displayName = 'proto.product.backend.ListProductByIdsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.CheckQuantityReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.CheckQuantityReq.repeatedFields_, null);
};
goog.inherits(proto.product.backend.CheckQuantityReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.CheckQuantityReq.displayName = 'proto.product.backend.CheckQuantityReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.GetAvailableQuantityReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.GetAvailableQuantityReq.repeatedFields_, null);
};
goog.inherits(proto.product.backend.GetAvailableQuantityReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.GetAvailableQuantityReq.displayName = 'proto.product.backend.GetAvailableQuantityReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.CheckAndLockQuantityReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.CheckAndLockQuantityReq.repeatedFields_, null);
};
goog.inherits(proto.product.backend.CheckAndLockQuantityReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.CheckAndLockQuantityReq.displayName = 'proto.product.backend.CheckAndLockQuantityReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.UnlockQuantityReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.UnlockQuantityReq.repeatedFields_, null);
};
goog.inherits(proto.product.backend.UnlockQuantityReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.UnlockQuantityReq.displayName = 'proto.product.backend.UnlockQuantityReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.UnlockAndUpdateQuantityReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.UnlockAndUpdateQuantityReq.repeatedFields_, null);
};
goog.inherits(proto.product.backend.UnlockAndUpdateQuantityReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.UnlockAndUpdateQuantityReq.displayName = 'proto.product.backend.UnlockAndUpdateQuantityReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.ListProductByIdsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.ListProductByIdsRes.repeatedFields_, null);
};
goog.inherits(proto.product.backend.ListProductByIdsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.ListProductByIdsRes.displayName = 'proto.product.backend.ListProductByIdsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.GetAvailableQuantityRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.product.backend.GetAvailableQuantityRes.repeatedFields_, null);
};
goog.inherits(proto.product.backend.GetAvailableQuantityRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.GetAvailableQuantityRes.displayName = 'proto.product.backend.GetAvailableQuantityRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.product.backend.GenerateProductByEventSeatReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.product.backend.GenerateProductByEventSeatReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.product.backend.GenerateProductByEventSeatReq.displayName = 'proto.product.backend.GenerateProductByEventSeatReq';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.ProductInfo.repeatedFields_ = [8,9,24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.ProductInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.ProductInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.ProductInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ProductInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    name: jspb.Message.getFieldWithDefault(msg, 7, ""),
    mediasList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    tagsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    availableStartTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    availableEndTime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 12, 0),
    sku: jspb.Message.getFieldWithDefault(msg, 13, ""),
    listedPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    discountPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    barcode: jspb.Message.getFieldWithDefault(msg, 17, ""),
    uom: jspb.Message.getFieldWithDefault(msg, 18, ""),
    currency: (f = msg.getCurrency()) && proto.product.backend.ProductCurrencyInfo.toObject(includeInstance, f),
    brand: jspb.Message.getFieldWithDefault(msg, 20, ""),
    description: jspb.Message.getFieldWithDefault(msg, 21, ""),
    unlimited: jspb.Message.getFieldWithDefault(msg, 22, 0),
    country: jspb.Message.getFieldWithDefault(msg, 23, ""),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.product.backend.ProductAttribute.toObject, includeInstance),
    purchaseType: jspb.Message.getFieldWithDefault(msg, 25, 0),
    status: jspb.Message.getFieldWithDefault(msg, 26, 0),
    language: jspb.Message.getFieldWithDefault(msg, 27, ""),
    inBooking: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    additionalDataMap: (f = msg.getAdditionalDataMap()) ? f.toObject(includeInstance, undefined) : [],
    partnerShopId: jspb.Message.getFieldWithDefault(msg, 30, ""),
    seatInfo: (f = msg.getSeatInfo()) && product_base_pb.SeatInfo.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 32, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.ProductInfo}
 */
proto.product.backend.ProductInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.ProductInfo;
  return proto.product.backend.ProductInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.ProductInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.ProductInfo}
 */
proto.product.backend.ProductInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addMedias(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAvailableStartTime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAvailableEndTime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setListedPrice(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountPercent(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcode(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setUom(value);
      break;
    case 19:
      var value = new proto.product.backend.ProductCurrencyInfo;
      reader.readMessage(value,proto.product.backend.ProductCurrencyInfo.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 22:
      var value = /** @type {!proto.product.backend.Boolean} */ (reader.readEnum());
      msg.setUnlimited(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 24:
      var value = new proto.product.backend.ProductAttribute;
      reader.readMessage(value,proto.product.backend.ProductAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 25:
      var value = /** @type {!proto.product.backend.PurchaseType} */ (reader.readEnum());
      msg.setPurchaseType(value);
      break;
    case 26:
      var value = /** @type {!proto.product.backend.ProductStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInBooking(value);
      break;
    case 29:
      var value = msg.getAdditionalDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerShopId(value);
      break;
    case 31:
      var value = new product_base_pb.SeatInfo;
      reader.readMessage(value,product_base_pb.SeatInfo.deserializeBinaryFromReader);
      msg.setSeatInfo(value);
      break;
    case 32:
      var value = /** @type {!proto.product.ProductType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.ProductInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.ProductInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.ProductInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ProductInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMediasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getAvailableStartTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getAvailableEndTime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getListedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getDiscountPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getBarcode();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getUom();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.product.backend.ProductCurrencyInfo.serializeBinaryToWriter
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getUnlimited();
  if (f !== 0.0) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      proto.product.backend.ProductAttribute.serializeBinaryToWriter
    );
  }
  f = message.getPurchaseType();
  if (f !== 0.0) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      26,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getInBooking();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getAdditionalDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(29, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getPartnerShopId();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getSeatInfo();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      product_base_pb.SeatInfo.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      32,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.product.backend.ProductInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.product.backend.ProductInfo.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string created_by = 4;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_by = 5;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string partnership_id = 6;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string medias = 8;
 * @return {!Array<string>}
 */
proto.product.backend.ProductInfo.prototype.getMediasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setMediasList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.addMedias = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.clearMediasList = function() {
  return this.setMediasList([]);
};


/**
 * repeated string tags = 9;
 * @return {!Array<string>}
 */
proto.product.backend.ProductInfo.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional int64 available_start_time = 10;
 * @return {number}
 */
proto.product.backend.ProductInfo.prototype.getAvailableStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setAvailableStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 available_end_time = 11;
 * @return {number}
 */
proto.product.backend.ProductInfo.prototype.getAvailableEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setAvailableEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 quantity = 12;
 * @return {number}
 */
proto.product.backend.ProductInfo.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string sku = 13;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional double listed_price = 14;
 * @return {number}
 */
proto.product.backend.ProductInfo.prototype.getListedPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setListedPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double discount_percent = 15;
 * @return {number}
 */
proto.product.backend.ProductInfo.prototype.getDiscountPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setDiscountPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional double price = 16;
 * @return {number}
 */
proto.product.backend.ProductInfo.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional string barcode = 17;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getBarcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setBarcode = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string uom = 18;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getUom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setUom = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional ProductCurrencyInfo currency = 19;
 * @return {?proto.product.backend.ProductCurrencyInfo}
 */
proto.product.backend.ProductInfo.prototype.getCurrency = function() {
  return /** @type{?proto.product.backend.ProductCurrencyInfo} */ (
    jspb.Message.getWrapperField(this, proto.product.backend.ProductCurrencyInfo, 19));
};


/**
 * @param {?proto.product.backend.ProductCurrencyInfo|undefined} value
 * @return {!proto.product.backend.ProductInfo} returns this
*/
proto.product.backend.ProductInfo.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.backend.ProductInfo.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string brand = 20;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setBrand = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string description = 21;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional Boolean unlimited = 22;
 * @return {!proto.product.backend.Boolean}
 */
proto.product.backend.ProductInfo.prototype.getUnlimited = function() {
  return /** @type {!proto.product.backend.Boolean} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {!proto.product.backend.Boolean} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setUnlimited = function(value) {
  return jspb.Message.setProto3EnumField(this, 22, value);
};


/**
 * optional string country = 23;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * repeated ProductAttribute attributes = 24;
 * @return {!Array<!proto.product.backend.ProductAttribute>}
 */
proto.product.backend.ProductInfo.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.product.backend.ProductAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.backend.ProductAttribute, 24));
};


/**
 * @param {!Array<!proto.product.backend.ProductAttribute>} value
 * @return {!proto.product.backend.ProductInfo} returns this
*/
proto.product.backend.ProductInfo.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.product.backend.ProductAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ProductAttribute}
 */
proto.product.backend.ProductInfo.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.product.backend.ProductAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional PurchaseType purchase_type = 25;
 * @return {!proto.product.backend.PurchaseType}
 */
proto.product.backend.ProductInfo.prototype.getPurchaseType = function() {
  return /** @type {!proto.product.backend.PurchaseType} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {!proto.product.backend.PurchaseType} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setPurchaseType = function(value) {
  return jspb.Message.setProto3EnumField(this, 25, value);
};


/**
 * optional ProductStatus status = 26;
 * @return {!proto.product.backend.ProductStatus}
 */
proto.product.backend.ProductInfo.prototype.getStatus = function() {
  return /** @type {!proto.product.backend.ProductStatus} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {!proto.product.backend.ProductStatus} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 26, value);
};


/**
 * optional string language = 27;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional bool in_booking = 28;
 * @return {boolean}
 */
proto.product.backend.ProductInfo.prototype.getInBooking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setInBooking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * map<string, string> additional_data = 29;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.product.backend.ProductInfo.prototype.getAdditionalDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 29, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.clearAdditionalDataMap = function() {
  this.getAdditionalDataMap().clear();
  return this;};


/**
 * optional string partner_shop_id = 30;
 * @return {string}
 */
proto.product.backend.ProductInfo.prototype.getPartnerShopId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setPartnerShopId = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional product.SeatInfo seat_info = 31;
 * @return {?proto.product.SeatInfo}
 */
proto.product.backend.ProductInfo.prototype.getSeatInfo = function() {
  return /** @type{?proto.product.SeatInfo} */ (
    jspb.Message.getWrapperField(this, product_base_pb.SeatInfo, 31));
};


/**
 * @param {?proto.product.SeatInfo|undefined} value
 * @return {!proto.product.backend.ProductInfo} returns this
*/
proto.product.backend.ProductInfo.prototype.setSeatInfo = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.clearSeatInfo = function() {
  return this.setSeatInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.product.backend.ProductInfo.prototype.hasSeatInfo = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional product.ProductType type = 32;
 * @return {!proto.product.ProductType}
 */
proto.product.backend.ProductInfo.prototype.getType = function() {
  return /** @type {!proto.product.ProductType} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {!proto.product.ProductType} value
 * @return {!proto.product.backend.ProductInfo} returns this
 */
proto.product.backend.ProductInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 32, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.ProductCurrencyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.ProductCurrencyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.ProductCurrencyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ProductCurrencyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.ProductCurrencyInfo}
 */
proto.product.backend.ProductCurrencyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.ProductCurrencyInfo;
  return proto.product.backend.ProductCurrencyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.ProductCurrencyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.ProductCurrencyInfo}
 */
proto.product.backend.ProductCurrencyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.ProductCurrencyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.ProductCurrencyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.ProductCurrencyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ProductCurrencyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.product.backend.ProductCurrencyInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductCurrencyInfo} returns this
 */
proto.product.backend.ProductCurrencyInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.product.backend.ProductCurrencyInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductCurrencyInfo} returns this
 */
proto.product.backend.ProductCurrencyInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.product.backend.ProductCurrencyInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductCurrencyInfo} returns this
 */
proto.product.backend.ProductCurrencyInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon = 4;
 * @return {string}
 */
proto.product.backend.ProductCurrencyInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductCurrencyInfo} returns this
 */
proto.product.backend.ProductCurrencyInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.ProductAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.ProductAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.ProductAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ProductAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    masterDataId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    additionalDataMap: (f = msg.getAdditionalDataMap()) ? f.toObject(includeInstance, undefined) : [],
    type: jspb.Message.getFieldWithDefault(msg, 5, ""),
    valueType: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.ProductAttribute}
 */
proto.product.backend.ProductAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.ProductAttribute;
  return proto.product.backend.ProductAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.ProductAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.ProductAttribute}
 */
proto.product.backend.ProductAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMasterDataId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = msg.getAdditionalDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {!proto.product.backend.ValueType} */ (reader.readEnum());
      msg.setValueType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.ProductAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.ProductAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.ProductAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ProductAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMasterDataId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAdditionalDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getValueType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string master_data_id = 1;
 * @return {string}
 */
proto.product.backend.ProductAttribute.prototype.getMasterDataId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductAttribute} returns this
 */
proto.product.backend.ProductAttribute.prototype.setMasterDataId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.product.backend.ProductAttribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductAttribute} returns this
 */
proto.product.backend.ProductAttribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.product.backend.ProductAttribute.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductAttribute} returns this
 */
proto.product.backend.ProductAttribute.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> additional_data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.product.backend.ProductAttribute.prototype.getAdditionalDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.product.backend.ProductAttribute} returns this
 */
proto.product.backend.ProductAttribute.prototype.clearAdditionalDataMap = function() {
  this.getAdditionalDataMap().clear();
  return this;};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.product.backend.ProductAttribute.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductAttribute} returns this
 */
proto.product.backend.ProductAttribute.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ValueType value_type = 6;
 * @return {!proto.product.backend.ValueType}
 */
proto.product.backend.ProductAttribute.prototype.getValueType = function() {
  return /** @type {!proto.product.backend.ValueType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.product.backend.ValueType} value
 * @return {!proto.product.backend.ProductAttribute} returns this
 */
proto.product.backend.ProductAttribute.prototype.setValueType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.ProductQuantity.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.ProductQuantity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.ProductQuantity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ProductQuantity.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.ProductQuantity}
 */
proto.product.backend.ProductQuantity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.ProductQuantity;
  return proto.product.backend.ProductQuantity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.ProductQuantity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.ProductQuantity}
 */
proto.product.backend.ProductQuantity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.ProductQuantity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.ProductQuantity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.ProductQuantity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ProductQuantity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.product.backend.ProductQuantity.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductQuantity} returns this
 */
proto.product.backend.ProductQuantity.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string order_id = 2;
 * @return {string}
 */
proto.product.backend.ProductQuantity.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.ProductQuantity} returns this
 */
proto.product.backend.ProductQuantity.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 quantity = 3;
 * @return {number}
 */
proto.product.backend.ProductQuantity.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.ProductQuantity} returns this
 */
proto.product.backend.ProductQuantity.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.AvailableQuantity.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.AvailableQuantity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.AvailableQuantity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.AvailableQuantity.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    available: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.AvailableQuantity}
 */
proto.product.backend.AvailableQuantity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.AvailableQuantity;
  return proto.product.backend.AvailableQuantity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.AvailableQuantity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.AvailableQuantity}
 */
proto.product.backend.AvailableQuantity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAvailable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.AvailableQuantity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.AvailableQuantity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.AvailableQuantity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.AvailableQuantity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvailable();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.product.backend.AvailableQuantity.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.AvailableQuantity} returns this
 */
proto.product.backend.AvailableQuantity.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 available = 2;
 * @return {number}
 */
proto.product.backend.AvailableQuantity.prototype.getAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.AvailableQuantity} returns this
 */
proto.product.backend.AvailableQuantity.prototype.setAvailable = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.ListProductByIdsReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.ListProductByIdsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.ListProductByIdsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.ListProductByIdsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ListProductByIdsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.ListProductByIdsReq}
 */
proto.product.backend.ListProductByIdsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.ListProductByIdsReq;
  return proto.product.backend.ListProductByIdsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.ListProductByIdsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.ListProductByIdsReq}
 */
proto.product.backend.ListProductByIdsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.ListProductByIdsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.ListProductByIdsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.ListProductByIdsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ListProductByIdsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string ids = 1;
 * @return {!Array<string>}
 */
proto.product.backend.ListProductByIdsReq.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.product.backend.ListProductByIdsReq} returns this
 */
proto.product.backend.ListProductByIdsReq.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ListProductByIdsReq} returns this
 */
proto.product.backend.ListProductByIdsReq.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.ListProductByIdsReq} returns this
 */
proto.product.backend.ListProductByIdsReq.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.CheckQuantityReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.CheckQuantityReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.CheckQuantityReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.CheckQuantityReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.CheckQuantityReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productQuantityList: jspb.Message.toObjectList(msg.getProductQuantityList(),
    proto.product.backend.ProductQuantity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.CheckQuantityReq}
 */
proto.product.backend.CheckQuantityReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.CheckQuantityReq;
  return proto.product.backend.CheckQuantityReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.CheckQuantityReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.CheckQuantityReq}
 */
proto.product.backend.CheckQuantityReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.backend.ProductQuantity;
      reader.readMessage(value,proto.product.backend.ProductQuantity.deserializeBinaryFromReader);
      msg.addProductQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.CheckQuantityReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.CheckQuantityReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.CheckQuantityReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.CheckQuantityReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductQuantityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.product.backend.ProductQuantity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductQuantity product_quantity = 1;
 * @return {!Array<!proto.product.backend.ProductQuantity>}
 */
proto.product.backend.CheckQuantityReq.prototype.getProductQuantityList = function() {
  return /** @type{!Array<!proto.product.backend.ProductQuantity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.backend.ProductQuantity, 1));
};


/**
 * @param {!Array<!proto.product.backend.ProductQuantity>} value
 * @return {!proto.product.backend.CheckQuantityReq} returns this
*/
proto.product.backend.CheckQuantityReq.prototype.setProductQuantityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.product.backend.ProductQuantity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ProductQuantity}
 */
proto.product.backend.CheckQuantityReq.prototype.addProductQuantity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.product.backend.ProductQuantity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.CheckQuantityReq} returns this
 */
proto.product.backend.CheckQuantityReq.prototype.clearProductQuantityList = function() {
  return this.setProductQuantityList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.GetAvailableQuantityReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.GetAvailableQuantityReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.GetAvailableQuantityReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.GetAvailableQuantityReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.GetAvailableQuantityReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.GetAvailableQuantityReq}
 */
proto.product.backend.GetAvailableQuantityReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.GetAvailableQuantityReq;
  return proto.product.backend.GetAvailableQuantityReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.GetAvailableQuantityReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.GetAvailableQuantityReq}
 */
proto.product.backend.GetAvailableQuantityReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addProductIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.GetAvailableQuantityReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.GetAvailableQuantityReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.GetAvailableQuantityReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.GetAvailableQuantityReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string product_ids = 1;
 * @return {!Array<string>}
 */
proto.product.backend.GetAvailableQuantityReq.prototype.getProductIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.product.backend.GetAvailableQuantityReq} returns this
 */
proto.product.backend.GetAvailableQuantityReq.prototype.setProductIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.product.backend.GetAvailableQuantityReq} returns this
 */
proto.product.backend.GetAvailableQuantityReq.prototype.addProductIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.GetAvailableQuantityReq} returns this
 */
proto.product.backend.GetAvailableQuantityReq.prototype.clearProductIdsList = function() {
  return this.setProductIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.CheckAndLockQuantityReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.CheckAndLockQuantityReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.CheckAndLockQuantityReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.CheckAndLockQuantityReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.CheckAndLockQuantityReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productQuantityList: jspb.Message.toObjectList(msg.getProductQuantityList(),
    proto.product.backend.ProductQuantity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.CheckAndLockQuantityReq}
 */
proto.product.backend.CheckAndLockQuantityReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.CheckAndLockQuantityReq;
  return proto.product.backend.CheckAndLockQuantityReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.CheckAndLockQuantityReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.CheckAndLockQuantityReq}
 */
proto.product.backend.CheckAndLockQuantityReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.backend.ProductQuantity;
      reader.readMessage(value,proto.product.backend.ProductQuantity.deserializeBinaryFromReader);
      msg.addProductQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.CheckAndLockQuantityReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.CheckAndLockQuantityReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.CheckAndLockQuantityReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.CheckAndLockQuantityReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductQuantityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.product.backend.ProductQuantity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductQuantity product_quantity = 1;
 * @return {!Array<!proto.product.backend.ProductQuantity>}
 */
proto.product.backend.CheckAndLockQuantityReq.prototype.getProductQuantityList = function() {
  return /** @type{!Array<!proto.product.backend.ProductQuantity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.backend.ProductQuantity, 1));
};


/**
 * @param {!Array<!proto.product.backend.ProductQuantity>} value
 * @return {!proto.product.backend.CheckAndLockQuantityReq} returns this
*/
proto.product.backend.CheckAndLockQuantityReq.prototype.setProductQuantityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.product.backend.ProductQuantity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ProductQuantity}
 */
proto.product.backend.CheckAndLockQuantityReq.prototype.addProductQuantity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.product.backend.ProductQuantity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.CheckAndLockQuantityReq} returns this
 */
proto.product.backend.CheckAndLockQuantityReq.prototype.clearProductQuantityList = function() {
  return this.setProductQuantityList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.UnlockQuantityReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.UnlockQuantityReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.UnlockQuantityReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.UnlockQuantityReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.UnlockQuantityReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productQuantityList: jspb.Message.toObjectList(msg.getProductQuantityList(),
    proto.product.backend.ProductQuantity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.UnlockQuantityReq}
 */
proto.product.backend.UnlockQuantityReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.UnlockQuantityReq;
  return proto.product.backend.UnlockQuantityReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.UnlockQuantityReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.UnlockQuantityReq}
 */
proto.product.backend.UnlockQuantityReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.backend.ProductQuantity;
      reader.readMessage(value,proto.product.backend.ProductQuantity.deserializeBinaryFromReader);
      msg.addProductQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.UnlockQuantityReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.UnlockQuantityReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.UnlockQuantityReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.UnlockQuantityReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductQuantityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.product.backend.ProductQuantity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductQuantity product_quantity = 1;
 * @return {!Array<!proto.product.backend.ProductQuantity>}
 */
proto.product.backend.UnlockQuantityReq.prototype.getProductQuantityList = function() {
  return /** @type{!Array<!proto.product.backend.ProductQuantity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.backend.ProductQuantity, 1));
};


/**
 * @param {!Array<!proto.product.backend.ProductQuantity>} value
 * @return {!proto.product.backend.UnlockQuantityReq} returns this
*/
proto.product.backend.UnlockQuantityReq.prototype.setProductQuantityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.product.backend.ProductQuantity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ProductQuantity}
 */
proto.product.backend.UnlockQuantityReq.prototype.addProductQuantity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.product.backend.ProductQuantity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.UnlockQuantityReq} returns this
 */
proto.product.backend.UnlockQuantityReq.prototype.clearProductQuantityList = function() {
  return this.setProductQuantityList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.UnlockAndUpdateQuantityReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.UnlockAndUpdateQuantityReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.UnlockAndUpdateQuantityReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.UnlockAndUpdateQuantityReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.UnlockAndUpdateQuantityReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productQuantityList: jspb.Message.toObjectList(msg.getProductQuantityList(),
    proto.product.backend.ProductQuantity.toObject, includeInstance),
    updateAction: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.UnlockAndUpdateQuantityReq}
 */
proto.product.backend.UnlockAndUpdateQuantityReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.UnlockAndUpdateQuantityReq;
  return proto.product.backend.UnlockAndUpdateQuantityReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.UnlockAndUpdateQuantityReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.UnlockAndUpdateQuantityReq}
 */
proto.product.backend.UnlockAndUpdateQuantityReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.backend.ProductQuantity;
      reader.readMessage(value,proto.product.backend.ProductQuantity.deserializeBinaryFromReader);
      msg.addProductQuantity(value);
      break;
    case 2:
      var value = /** @type {!proto.product.backend.UnlockAndUpdateQuantityAction} */ (reader.readEnum());
      msg.setUpdateAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.UnlockAndUpdateQuantityReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.UnlockAndUpdateQuantityReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.UnlockAndUpdateQuantityReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.UnlockAndUpdateQuantityReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductQuantityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.product.backend.ProductQuantity.serializeBinaryToWriter
    );
  }
  f = message.getUpdateAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * repeated ProductQuantity product_quantity = 1;
 * @return {!Array<!proto.product.backend.ProductQuantity>}
 */
proto.product.backend.UnlockAndUpdateQuantityReq.prototype.getProductQuantityList = function() {
  return /** @type{!Array<!proto.product.backend.ProductQuantity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.backend.ProductQuantity, 1));
};


/**
 * @param {!Array<!proto.product.backend.ProductQuantity>} value
 * @return {!proto.product.backend.UnlockAndUpdateQuantityReq} returns this
*/
proto.product.backend.UnlockAndUpdateQuantityReq.prototype.setProductQuantityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.product.backend.ProductQuantity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ProductQuantity}
 */
proto.product.backend.UnlockAndUpdateQuantityReq.prototype.addProductQuantity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.product.backend.ProductQuantity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.UnlockAndUpdateQuantityReq} returns this
 */
proto.product.backend.UnlockAndUpdateQuantityReq.prototype.clearProductQuantityList = function() {
  return this.setProductQuantityList([]);
};


/**
 * optional UnlockAndUpdateQuantityAction update_action = 2;
 * @return {!proto.product.backend.UnlockAndUpdateQuantityAction}
 */
proto.product.backend.UnlockAndUpdateQuantityReq.prototype.getUpdateAction = function() {
  return /** @type {!proto.product.backend.UnlockAndUpdateQuantityAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.product.backend.UnlockAndUpdateQuantityAction} value
 * @return {!proto.product.backend.UnlockAndUpdateQuantityReq} returns this
 */
proto.product.backend.UnlockAndUpdateQuantityReq.prototype.setUpdateAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.ListProductByIdsRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.ListProductByIdsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.ListProductByIdsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.ListProductByIdsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ListProductByIdsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    infosList: jspb.Message.toObjectList(msg.getInfosList(),
    proto.product.backend.ProductInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.ListProductByIdsRes}
 */
proto.product.backend.ListProductByIdsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.ListProductByIdsRes;
  return proto.product.backend.ListProductByIdsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.ListProductByIdsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.ListProductByIdsRes}
 */
proto.product.backend.ListProductByIdsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.backend.ProductInfo;
      reader.readMessage(value,proto.product.backend.ProductInfo.deserializeBinaryFromReader);
      msg.addInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.ListProductByIdsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.ListProductByIdsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.ListProductByIdsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.ListProductByIdsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.product.backend.ProductInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductInfo infos = 1;
 * @return {!Array<!proto.product.backend.ProductInfo>}
 */
proto.product.backend.ListProductByIdsRes.prototype.getInfosList = function() {
  return /** @type{!Array<!proto.product.backend.ProductInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.backend.ProductInfo, 1));
};


/**
 * @param {!Array<!proto.product.backend.ProductInfo>} value
 * @return {!proto.product.backend.ListProductByIdsRes} returns this
*/
proto.product.backend.ListProductByIdsRes.prototype.setInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.product.backend.ProductInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.backend.ProductInfo}
 */
proto.product.backend.ListProductByIdsRes.prototype.addInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.product.backend.ProductInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.ListProductByIdsRes} returns this
 */
proto.product.backend.ListProductByIdsRes.prototype.clearInfosList = function() {
  return this.setInfosList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.product.backend.GetAvailableQuantityRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.GetAvailableQuantityRes.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.GetAvailableQuantityRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.GetAvailableQuantityRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.GetAvailableQuantityRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    availableQuantitiesList: jspb.Message.toObjectList(msg.getAvailableQuantitiesList(),
    proto.product.backend.AvailableQuantity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.GetAvailableQuantityRes}
 */
proto.product.backend.GetAvailableQuantityRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.GetAvailableQuantityRes;
  return proto.product.backend.GetAvailableQuantityRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.GetAvailableQuantityRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.GetAvailableQuantityRes}
 */
proto.product.backend.GetAvailableQuantityRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.product.backend.AvailableQuantity;
      reader.readMessage(value,proto.product.backend.AvailableQuantity.deserializeBinaryFromReader);
      msg.addAvailableQuantities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.GetAvailableQuantityRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.GetAvailableQuantityRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.GetAvailableQuantityRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.GetAvailableQuantityRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAvailableQuantitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.product.backend.AvailableQuantity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AvailableQuantity available_quantities = 1;
 * @return {!Array<!proto.product.backend.AvailableQuantity>}
 */
proto.product.backend.GetAvailableQuantityRes.prototype.getAvailableQuantitiesList = function() {
  return /** @type{!Array<!proto.product.backend.AvailableQuantity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.product.backend.AvailableQuantity, 1));
};


/**
 * @param {!Array<!proto.product.backend.AvailableQuantity>} value
 * @return {!proto.product.backend.GetAvailableQuantityRes} returns this
*/
proto.product.backend.GetAvailableQuantityRes.prototype.setAvailableQuantitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.product.backend.AvailableQuantity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.product.backend.AvailableQuantity}
 */
proto.product.backend.GetAvailableQuantityRes.prototype.addAvailableQuantities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.product.backend.AvailableQuantity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.product.backend.GetAvailableQuantityRes} returns this
 */
proto.product.backend.GetAvailableQuantityRes.prototype.clearAvailableQuantitiesList = function() {
  return this.setAvailableQuantitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.toObject = function(opt_includeInstance) {
  return proto.product.backend.GenerateProductByEventSeatReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.product.backend.GenerateProductByEventSeatReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.GenerateProductByEventSeatReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bookingStartTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.product.backend.GenerateProductByEventSeatReq}
 */
proto.product.backend.GenerateProductByEventSeatReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.product.backend.GenerateProductByEventSeatReq;
  return proto.product.backend.GenerateProductByEventSeatReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.product.backend.GenerateProductByEventSeatReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.product.backend.GenerateProductByEventSeatReq}
 */
proto.product.backend.GenerateProductByEventSeatReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingStartTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.product.backend.GenerateProductByEventSeatReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.product.backend.GenerateProductByEventSeatReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.product.backend.GenerateProductByEventSeatReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBookingStartTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string event_id = 1;
 * @return {string}
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.GenerateProductByEventSeatReq} returns this
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string event_code = 2;
 * @return {string}
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.getEventCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.GenerateProductByEventSeatReq} returns this
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.setEventCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 booking_start_time = 3;
 * @return {number}
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.getBookingStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.product.backend.GenerateProductByEventSeatReq} returns this
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.setBookingStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.product.backend.GenerateProductByEventSeatReq} returns this
 */
proto.product.backend.GenerateProductByEventSeatReq.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.product.backend.ValueType = {
  VALUE_TYPE_INVALID: 0,
  VALUE_TYPE_STRING: 1,
  VALUE_TYPE_INTEGER: 2,
  VALUE_TYPE_FLOAT: 3,
  VALUE_TYPE_BOOLEAN: 4
};

/**
 * @enum {number}
 */
proto.product.backend.PurchaseType = {
  PURCHASE_TYPE_INVALID: 0,
  PURCHASE_TYPE_RENT_OR_SELL: 1,
  PURCHASE_TYPE_RENT_ONLY: 2,
  PURCHASE_TYPE_SELL_ONLY: 3
};

/**
 * @enum {number}
 */
proto.product.backend.ProductStatus = {
  PRODUCT_STATUS_INVALID: 0,
  PRODUCT_STATUS_PUBLISHED: 1,
  PRODUCT_STATUS_UNPUBLISHED: 2,
  PRODUCT_STATUS_DRAFT: 3,
  PRODUCT_STATUS_DELETED: 4
};

/**
 * @enum {number}
 */
proto.product.backend.UnlockAndUpdateQuantityAction = {
  UNLOCK_AND_UPDATE_QUANTITY_ACTION_INVALID: 0,
  UNLOCK_AND_UPDATE_QUANTITY_ACTION_INCREASE: 1,
  UNLOCK_AND_UPDATE_QUANTITY_ACTION_DECREASE: 2
};

goog.object.extend(exports, proto.product.backend);
