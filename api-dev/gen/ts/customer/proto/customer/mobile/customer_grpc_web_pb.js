/**
 * @fileoverview gRPC-Web generated client stub for customer.mobile
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: proto/customer/mobile/customer.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var proto_customer_mobile_base_pb = require('../../../proto/customer/mobile/base_pb.js')
const proto = {};
proto.customer = {};
proto.customer.mobile = require('./customer_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.customer.mobile.CustomerServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.customer.mobile.CustomerServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.GetMeReq,
 *   !proto.customer.mobile.GetMeRes>}
 */
const methodDescriptor_CustomerService_GetMe = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/GetMe',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.GetMeReq,
  proto.customer.mobile.GetMeRes,
  /**
   * @param {!proto.customer.mobile.GetMeReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.GetMeRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.GetMeReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.GetMeRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.GetMeRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.getMe =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetMe',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetMe,
      callback);
};


/**
 * @param {!proto.customer.mobile.GetMeReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.GetMeRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.getMe =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetMe',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetMe);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.UpdateMeReq,
 *   !proto.customer.mobile.Empty>}
 */
const methodDescriptor_CustomerService_UpdateMe = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/UpdateMe',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.UpdateMeReq,
  proto_customer_mobile_base_pb.Empty,
  /**
   * @param {!proto.customer.mobile.UpdateMeReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_customer_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.UpdateMeReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.updateMe =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/UpdateMe',
      request,
      metadata || {},
      methodDescriptor_CustomerService_UpdateMe,
      callback);
};


/**
 * @param {!proto.customer.mobile.UpdateMeReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.updateMe =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/UpdateMe',
      request,
      metadata || {},
      methodDescriptor_CustomerService_UpdateMe);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.ChangePasswordReq,
 *   !proto.customer.mobile.Empty>}
 */
const methodDescriptor_CustomerService_ChangePassword = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/ChangePassword',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.ChangePasswordReq,
  proto_customer_mobile_base_pb.Empty,
  /**
   * @param {!proto.customer.mobile.ChangePasswordReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_customer_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.ChangePasswordReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.changePassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/ChangePassword',
      request,
      metadata || {},
      methodDescriptor_CustomerService_ChangePassword,
      callback);
};


/**
 * @param {!proto.customer.mobile.ChangePasswordReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.changePassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/ChangePassword',
      request,
      metadata || {},
      methodDescriptor_CustomerService_ChangePassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.DeleteUserReq,
 *   !proto.customer.mobile.Empty>}
 */
const methodDescriptor_CustomerService_DeleteUser = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/DeleteUser',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.DeleteUserReq,
  proto_customer_mobile_base_pb.Empty,
  /**
   * @param {!proto.customer.mobile.DeleteUserReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_customer_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.DeleteUserReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.deleteUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/DeleteUser',
      request,
      metadata || {},
      methodDescriptor_CustomerService_DeleteUser,
      callback);
};


/**
 * @param {!proto.customer.mobile.DeleteUserReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.deleteUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/DeleteUser',
      request,
      metadata || {},
      methodDescriptor_CustomerService_DeleteUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.GetUserByIdReq,
 *   !proto.customer.mobile.GetUserByIdRes>}
 */
const methodDescriptor_CustomerService_GetUserById = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/GetUserById',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.GetUserByIdReq,
  proto.customer.mobile.GetUserByIdRes,
  /**
   * @param {!proto.customer.mobile.GetUserByIdReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.GetUserByIdRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.GetUserByIdReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.GetUserByIdRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.GetUserByIdRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.getUserById =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetUserById',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetUserById,
      callback);
};


/**
 * @param {!proto.customer.mobile.GetUserByIdReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.GetUserByIdRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.getUserById =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetUserById',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetUserById);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.GetUserReq,
 *   !proto.customer.mobile.GetUserRes>}
 */
const methodDescriptor_CustomerService_GetUser = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/GetUser',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.GetUserReq,
  proto.customer.mobile.GetUserRes,
  /**
   * @param {!proto.customer.mobile.GetUserReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.GetUserRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.GetUserReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.GetUserRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.GetUserRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.getUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetUser',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetUser,
      callback);
};


/**
 * @param {!proto.customer.mobile.GetUserReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.GetUserRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.getUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetUser',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.GetListUserByIdsReq,
 *   !proto.customer.mobile.GetListUserByIdsRes>}
 */
const methodDescriptor_CustomerService_GetListUserByIds = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/GetListUserByIds',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.GetListUserByIdsReq,
  proto.customer.mobile.GetListUserByIdsRes,
  /**
   * @param {!proto.customer.mobile.GetListUserByIdsReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.GetListUserByIdsRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.GetListUserByIdsReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.GetListUserByIdsRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.GetListUserByIdsRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.getListUserByIds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetListUserByIds',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetListUserByIds,
      callback);
};


/**
 * @param {!proto.customer.mobile.GetListUserByIdsReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.GetListUserByIdsRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.getListUserByIds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetListUserByIds',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetListUserByIds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.GetListUserReq,
 *   !proto.customer.mobile.GetListUserRes>}
 */
const methodDescriptor_CustomerService_GetListUser = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/GetListUser',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.GetListUserReq,
  proto.customer.mobile.GetListUserRes,
  /**
   * @param {!proto.customer.mobile.GetListUserReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.GetListUserRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.GetListUserReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.GetListUserRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.GetListUserRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.getListUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetListUser',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetListUser,
      callback);
};


/**
 * @param {!proto.customer.mobile.GetListUserReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.GetListUserRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.getListUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/GetListUser',
      request,
      metadata || {},
      methodDescriptor_CustomerService_GetListUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.CheckAlreadyExistEmailReq,
 *   !proto.customer.mobile.DefaultRes>}
 */
const methodDescriptor_CustomerService_CheckAlreadyExistEmail = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/CheckAlreadyExistEmail',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.CheckAlreadyExistEmailReq,
  proto_customer_mobile_base_pb.DefaultRes,
  /**
   * @param {!proto.customer.mobile.CheckAlreadyExistEmailReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_customer_mobile_base_pb.DefaultRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.CheckAlreadyExistEmailReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.DefaultRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.DefaultRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.checkAlreadyExistEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/CheckAlreadyExistEmail',
      request,
      metadata || {},
      methodDescriptor_CustomerService_CheckAlreadyExistEmail,
      callback);
};


/**
 * @param {!proto.customer.mobile.CheckAlreadyExistEmailReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.DefaultRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.checkAlreadyExistEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/CheckAlreadyExistEmail',
      request,
      metadata || {},
      methodDescriptor_CustomerService_CheckAlreadyExistEmail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.CheckAlreadyExistPhoneReq,
 *   !proto.customer.mobile.DefaultRes>}
 */
const methodDescriptor_CustomerService_CheckAlreadyExistPhone = new grpc.web.MethodDescriptor(
  '/customer.mobile.CustomerService/CheckAlreadyExistPhone',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.CheckAlreadyExistPhoneReq,
  proto_customer_mobile_base_pb.DefaultRes,
  /**
   * @param {!proto.customer.mobile.CheckAlreadyExistPhoneReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_customer_mobile_base_pb.DefaultRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.CheckAlreadyExistPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.DefaultRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.DefaultRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.CustomerServiceClient.prototype.checkAlreadyExistPhone =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.CustomerService/CheckAlreadyExistPhone',
      request,
      metadata || {},
      methodDescriptor_CustomerService_CheckAlreadyExistPhone,
      callback);
};


/**
 * @param {!proto.customer.mobile.CheckAlreadyExistPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.DefaultRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.CustomerServicePromiseClient.prototype.checkAlreadyExistPhone =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.CustomerService/CheckAlreadyExistPhone',
      request,
      metadata || {},
      methodDescriptor_CustomerService_CheckAlreadyExistPhone);
};


module.exports = proto.customer.mobile;

