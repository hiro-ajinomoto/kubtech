/**
 * @fileoverview gRPC-Web generated client stub for customer.mobile
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: proto/customer/mobile/auth_phone.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var proto_customer_mobile_base_pb = require('../../../proto/customer/mobile/base_pb.js')
const proto = {};
proto.customer = {};
proto.customer.mobile = require('./auth_phone_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.customer.mobile.AuthPhoneServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.customer.mobile.AuthPhoneServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.SendOtpByPhoneReq,
 *   !proto.customer.mobile.SendOtpByPhoneRes>}
 */
const methodDescriptor_AuthPhoneService_SendOtpByPhone = new grpc.web.MethodDescriptor(
  '/customer.mobile.AuthPhoneService/SendOtpByPhone',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.SendOtpByPhoneReq,
  proto.customer.mobile.SendOtpByPhoneRes,
  /**
   * @param {!proto.customer.mobile.SendOtpByPhoneReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.SendOtpByPhoneRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.SendOtpByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.SendOtpByPhoneRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.SendOtpByPhoneRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.AuthPhoneServiceClient.prototype.sendOtpByPhone =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/SendOtpByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_SendOtpByPhone,
      callback);
};


/**
 * @param {!proto.customer.mobile.SendOtpByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.SendOtpByPhoneRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.AuthPhoneServicePromiseClient.prototype.sendOtpByPhone =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/SendOtpByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_SendOtpByPhone);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.VerifyPhoneNumberReq,
 *   !proto.customer.mobile.Empty>}
 */
const methodDescriptor_AuthPhoneService_VerifyPhoneNumber = new grpc.web.MethodDescriptor(
  '/customer.mobile.AuthPhoneService/VerifyPhoneNumber',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.VerifyPhoneNumberReq,
  proto_customer_mobile_base_pb.Empty,
  /**
   * @param {!proto.customer.mobile.VerifyPhoneNumberReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_customer_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.VerifyPhoneNumberReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.AuthPhoneServiceClient.prototype.verifyPhoneNumber =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/VerifyPhoneNumber',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_VerifyPhoneNumber,
      callback);
};


/**
 * @param {!proto.customer.mobile.VerifyPhoneNumberReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.AuthPhoneServicePromiseClient.prototype.verifyPhoneNumber =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/VerifyPhoneNumber',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_VerifyPhoneNumber);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.VerifyOtpToResetPasswordByPhoneReq,
 *   !proto.customer.mobile.VerifyOtpToResetPasswordByPhoneRes>}
 */
const methodDescriptor_AuthPhoneService_VerifyOtpToResetPasswordByPhone = new grpc.web.MethodDescriptor(
  '/customer.mobile.AuthPhoneService/VerifyOtpToResetPasswordByPhone',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.VerifyOtpToResetPasswordByPhoneReq,
  proto.customer.mobile.VerifyOtpToResetPasswordByPhoneRes,
  /**
   * @param {!proto.customer.mobile.VerifyOtpToResetPasswordByPhoneReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.VerifyOtpToResetPasswordByPhoneRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.VerifyOtpToResetPasswordByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.VerifyOtpToResetPasswordByPhoneRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.VerifyOtpToResetPasswordByPhoneRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.AuthPhoneServiceClient.prototype.verifyOtpToResetPasswordByPhone =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/VerifyOtpToResetPasswordByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_VerifyOtpToResetPasswordByPhone,
      callback);
};


/**
 * @param {!proto.customer.mobile.VerifyOtpToResetPasswordByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.VerifyOtpToResetPasswordByPhoneRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.AuthPhoneServicePromiseClient.prototype.verifyOtpToResetPasswordByPhone =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/VerifyOtpToResetPasswordByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_VerifyOtpToResetPasswordByPhone);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.ResetPasswordByPhoneReq,
 *   !proto.customer.mobile.Empty>}
 */
const methodDescriptor_AuthPhoneService_ResetPasswordByPhone = new grpc.web.MethodDescriptor(
  '/customer.mobile.AuthPhoneService/ResetPasswordByPhone',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.ResetPasswordByPhoneReq,
  proto_customer_mobile_base_pb.Empty,
  /**
   * @param {!proto.customer.mobile.ResetPasswordByPhoneReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_customer_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.ResetPasswordByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.AuthPhoneServiceClient.prototype.resetPasswordByPhone =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/ResetPasswordByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_ResetPasswordByPhone,
      callback);
};


/**
 * @param {!proto.customer.mobile.ResetPasswordByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.AuthPhoneServicePromiseClient.prototype.resetPasswordByPhone =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/ResetPasswordByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_ResetPasswordByPhone);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.SendOtpSecurityByPhoneReq,
 *   !proto.customer.mobile.SendOtpSecurityByPhoneRes>}
 */
const methodDescriptor_AuthPhoneService_SendOtpSecurityByPhone = new grpc.web.MethodDescriptor(
  '/customer.mobile.AuthPhoneService/SendOtpSecurityByPhone',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.SendOtpSecurityByPhoneReq,
  proto.customer.mobile.SendOtpSecurityByPhoneRes,
  /**
   * @param {!proto.customer.mobile.SendOtpSecurityByPhoneReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.SendOtpSecurityByPhoneRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.SendOtpSecurityByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.SendOtpSecurityByPhoneRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.SendOtpSecurityByPhoneRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.AuthPhoneServiceClient.prototype.sendOtpSecurityByPhone =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/SendOtpSecurityByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_SendOtpSecurityByPhone,
      callback);
};


/**
 * @param {!proto.customer.mobile.SendOtpSecurityByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.SendOtpSecurityByPhoneRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.AuthPhoneServicePromiseClient.prototype.sendOtpSecurityByPhone =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/SendOtpSecurityByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_SendOtpSecurityByPhone);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.VerifyOtpSecurityByPhoneReq,
 *   !proto.customer.mobile.VerifyOtpSecurityByPhoneRes>}
 */
const methodDescriptor_AuthPhoneService_VerifyOtpSecurityByPhone = new grpc.web.MethodDescriptor(
  '/customer.mobile.AuthPhoneService/VerifyOtpSecurityByPhone',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.VerifyOtpSecurityByPhoneReq,
  proto.customer.mobile.VerifyOtpSecurityByPhoneRes,
  /**
   * @param {!proto.customer.mobile.VerifyOtpSecurityByPhoneReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.VerifyOtpSecurityByPhoneRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.VerifyOtpSecurityByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.VerifyOtpSecurityByPhoneRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.VerifyOtpSecurityByPhoneRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.AuthPhoneServiceClient.prototype.verifyOtpSecurityByPhone =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/VerifyOtpSecurityByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_VerifyOtpSecurityByPhone,
      callback);
};


/**
 * @param {!proto.customer.mobile.VerifyOtpSecurityByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.VerifyOtpSecurityByPhoneRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.AuthPhoneServicePromiseClient.prototype.verifyOtpSecurityByPhone =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/VerifyOtpSecurityByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_VerifyOtpSecurityByPhone);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.SendOtpToChangePhoneByPhoneReq,
 *   !proto.customer.mobile.SendOtpToChangePhoneByPhoneRes>}
 */
const methodDescriptor_AuthPhoneService_SendOtpToChangePhoneByPhone = new grpc.web.MethodDescriptor(
  '/customer.mobile.AuthPhoneService/SendOtpToChangePhoneByPhone',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.SendOtpToChangePhoneByPhoneReq,
  proto.customer.mobile.SendOtpToChangePhoneByPhoneRes,
  /**
   * @param {!proto.customer.mobile.SendOtpToChangePhoneByPhoneReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.customer.mobile.SendOtpToChangePhoneByPhoneRes.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.SendOtpToChangePhoneByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.SendOtpToChangePhoneByPhoneRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.SendOtpToChangePhoneByPhoneRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.AuthPhoneServiceClient.prototype.sendOtpToChangePhoneByPhone =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/SendOtpToChangePhoneByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_SendOtpToChangePhoneByPhone,
      callback);
};


/**
 * @param {!proto.customer.mobile.SendOtpToChangePhoneByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.SendOtpToChangePhoneByPhoneRes>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.AuthPhoneServicePromiseClient.prototype.sendOtpToChangePhoneByPhone =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/SendOtpToChangePhoneByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_SendOtpToChangePhoneByPhone);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.customer.mobile.VerifyOtpToChangePhoneByPhoneReq,
 *   !proto.customer.mobile.Empty>}
 */
const methodDescriptor_AuthPhoneService_VerifyOtpToChangePhoneByPhone = new grpc.web.MethodDescriptor(
  '/customer.mobile.AuthPhoneService/VerifyOtpToChangePhoneByPhone',
  grpc.web.MethodType.UNARY,
  proto.customer.mobile.VerifyOtpToChangePhoneByPhoneReq,
  proto_customer_mobile_base_pb.Empty,
  /**
   * @param {!proto.customer.mobile.VerifyOtpToChangePhoneByPhoneReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_customer_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.customer.mobile.VerifyOtpToChangePhoneByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.customer.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.customer.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.customer.mobile.AuthPhoneServiceClient.prototype.verifyOtpToChangePhoneByPhone =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/VerifyOtpToChangePhoneByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_VerifyOtpToChangePhoneByPhone,
      callback);
};


/**
 * @param {!proto.customer.mobile.VerifyOtpToChangePhoneByPhoneReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.customer.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.customer.mobile.AuthPhoneServicePromiseClient.prototype.verifyOtpToChangePhoneByPhone =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/customer.mobile.AuthPhoneService/VerifyOtpToChangePhoneByPhone',
      request,
      metadata || {},
      methodDescriptor_AuthPhoneService_VerifyOtpToChangePhoneByPhone);
};


module.exports = proto.customer.mobile;

