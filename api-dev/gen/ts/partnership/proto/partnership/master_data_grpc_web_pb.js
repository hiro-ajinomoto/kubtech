/**
 * @fileoverview gRPC-Web generated client stub for partnership
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: proto/partnership/master_data.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var proto_partnership_base_pb = require('../../proto/partnership/base_pb.js')
const proto = {};
proto.partnership = require('./master_data_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.partnership.MasterDataServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.partnership.MasterDataServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.CreateMasterDataReq,
 *   !proto.partnership.CreateMasterDataRes>}
 */
const methodDescriptor_MasterDataService_CreateMasterData = new grpc.web.MethodDescriptor(
  '/partnership.MasterDataService/CreateMasterData',
  grpc.web.MethodType.UNARY,
  proto.partnership.CreateMasterDataReq,
  proto.partnership.CreateMasterDataRes,
  /**
   * @param {!proto.partnership.CreateMasterDataReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.CreateMasterDataRes.deserializeBinary
);


/**
 * @param {!proto.partnership.CreateMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.CreateMasterDataRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.CreateMasterDataRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.MasterDataServiceClient.prototype.createMasterData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.MasterDataService/CreateMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_CreateMasterData,
      callback);
};


/**
 * @param {!proto.partnership.CreateMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.CreateMasterDataRes>}
 *     Promise that resolves to the response
 */
proto.partnership.MasterDataServicePromiseClient.prototype.createMasterData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.MasterDataService/CreateMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_CreateMasterData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.UpdateMasterDataReq,
 *   !proto.partnership.Empty>}
 */
const methodDescriptor_MasterDataService_UpdateMasterData = new grpc.web.MethodDescriptor(
  '/partnership.MasterDataService/UpdateMasterData',
  grpc.web.MethodType.UNARY,
  proto.partnership.UpdateMasterDataReq,
  proto_partnership_base_pb.Empty,
  /**
   * @param {!proto.partnership.UpdateMasterDataReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_partnership_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.partnership.UpdateMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.MasterDataServiceClient.prototype.updateMasterData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.MasterDataService/UpdateMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_UpdateMasterData,
      callback);
};


/**
 * @param {!proto.partnership.UpdateMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.Empty>}
 *     Promise that resolves to the response
 */
proto.partnership.MasterDataServicePromiseClient.prototype.updateMasterData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.MasterDataService/UpdateMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_UpdateMasterData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.DeleteMasterDataReq,
 *   !proto.partnership.Empty>}
 */
const methodDescriptor_MasterDataService_DeleteMasterData = new grpc.web.MethodDescriptor(
  '/partnership.MasterDataService/DeleteMasterData',
  grpc.web.MethodType.UNARY,
  proto.partnership.DeleteMasterDataReq,
  proto_partnership_base_pb.Empty,
  /**
   * @param {!proto.partnership.DeleteMasterDataReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_partnership_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.partnership.DeleteMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.MasterDataServiceClient.prototype.deleteMasterData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.MasterDataService/DeleteMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_DeleteMasterData,
      callback);
};


/**
 * @param {!proto.partnership.DeleteMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.Empty>}
 *     Promise that resolves to the response
 */
proto.partnership.MasterDataServicePromiseClient.prototype.deleteMasterData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.MasterDataService/DeleteMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_DeleteMasterData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.RetrieveMasterDataReq,
 *   !proto.partnership.RetrieveMasterDataRes>}
 */
const methodDescriptor_MasterDataService_RetrieveMasterData = new grpc.web.MethodDescriptor(
  '/partnership.MasterDataService/RetrieveMasterData',
  grpc.web.MethodType.UNARY,
  proto.partnership.RetrieveMasterDataReq,
  proto.partnership.RetrieveMasterDataRes,
  /**
   * @param {!proto.partnership.RetrieveMasterDataReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.RetrieveMasterDataRes.deserializeBinary
);


/**
 * @param {!proto.partnership.RetrieveMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.RetrieveMasterDataRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.RetrieveMasterDataRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.MasterDataServiceClient.prototype.retrieveMasterData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.MasterDataService/RetrieveMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_RetrieveMasterData,
      callback);
};


/**
 * @param {!proto.partnership.RetrieveMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.RetrieveMasterDataRes>}
 *     Promise that resolves to the response
 */
proto.partnership.MasterDataServicePromiseClient.prototype.retrieveMasterData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.MasterDataService/RetrieveMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_RetrieveMasterData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.ListMasterDataReq,
 *   !proto.partnership.ListMasterDataRes>}
 */
const methodDescriptor_MasterDataService_ListMasterData = new grpc.web.MethodDescriptor(
  '/partnership.MasterDataService/ListMasterData',
  grpc.web.MethodType.UNARY,
  proto.partnership.ListMasterDataReq,
  proto.partnership.ListMasterDataRes,
  /**
   * @param {!proto.partnership.ListMasterDataReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.ListMasterDataRes.deserializeBinary
);


/**
 * @param {!proto.partnership.ListMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.ListMasterDataRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.ListMasterDataRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.MasterDataServiceClient.prototype.listMasterData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.MasterDataService/ListMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_ListMasterData,
      callback);
};


/**
 * @param {!proto.partnership.ListMasterDataReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.ListMasterDataRes>}
 *     Promise that resolves to the response
 */
proto.partnership.MasterDataServicePromiseClient.prototype.listMasterData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.MasterDataService/ListMasterData',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_ListMasterData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.RetrieveMasterDataPartnershipReq,
 *   !proto.partnership.RetrieveMasterDataPartnershipRes>}
 */
const methodDescriptor_MasterDataService_RetrieveMasterDataPartnership = new grpc.web.MethodDescriptor(
  '/partnership.MasterDataService/RetrieveMasterDataPartnership',
  grpc.web.MethodType.UNARY,
  proto.partnership.RetrieveMasterDataPartnershipReq,
  proto.partnership.RetrieveMasterDataPartnershipRes,
  /**
   * @param {!proto.partnership.RetrieveMasterDataPartnershipReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.RetrieveMasterDataPartnershipRes.deserializeBinary
);


/**
 * @param {!proto.partnership.RetrieveMasterDataPartnershipReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.RetrieveMasterDataPartnershipRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.RetrieveMasterDataPartnershipRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.MasterDataServiceClient.prototype.retrieveMasterDataPartnership =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.MasterDataService/RetrieveMasterDataPartnership',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_RetrieveMasterDataPartnership,
      callback);
};


/**
 * @param {!proto.partnership.RetrieveMasterDataPartnershipReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.RetrieveMasterDataPartnershipRes>}
 *     Promise that resolves to the response
 */
proto.partnership.MasterDataServicePromiseClient.prototype.retrieveMasterDataPartnership =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.MasterDataService/RetrieveMasterDataPartnership',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_RetrieveMasterDataPartnership);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.ListMasterDataPartnershipReq,
 *   !proto.partnership.ListMasterDataPartnershipRes>}
 */
const methodDescriptor_MasterDataService_ListMasterDataPartnership = new grpc.web.MethodDescriptor(
  '/partnership.MasterDataService/ListMasterDataPartnership',
  grpc.web.MethodType.UNARY,
  proto.partnership.ListMasterDataPartnershipReq,
  proto.partnership.ListMasterDataPartnershipRes,
  /**
   * @param {!proto.partnership.ListMasterDataPartnershipReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.ListMasterDataPartnershipRes.deserializeBinary
);


/**
 * @param {!proto.partnership.ListMasterDataPartnershipReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.ListMasterDataPartnershipRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.ListMasterDataPartnershipRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.MasterDataServiceClient.prototype.listMasterDataPartnership =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.MasterDataService/ListMasterDataPartnership',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_ListMasterDataPartnership,
      callback);
};


/**
 * @param {!proto.partnership.ListMasterDataPartnershipReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.ListMasterDataPartnershipRes>}
 *     Promise that resolves to the response
 */
proto.partnership.MasterDataServicePromiseClient.prototype.listMasterDataPartnership =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.MasterDataService/ListMasterDataPartnership',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_ListMasterDataPartnership);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.InternalListMasterDataByIdsReq,
 *   !proto.partnership.InternalListMasterDataByIdsRes>}
 */
const methodDescriptor_MasterDataService_InternalListMasterDataByIds = new grpc.web.MethodDescriptor(
  '/partnership.MasterDataService/InternalListMasterDataByIds',
  grpc.web.MethodType.UNARY,
  proto.partnership.InternalListMasterDataByIdsReq,
  proto.partnership.InternalListMasterDataByIdsRes,
  /**
   * @param {!proto.partnership.InternalListMasterDataByIdsReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.InternalListMasterDataByIdsRes.deserializeBinary
);


/**
 * @param {!proto.partnership.InternalListMasterDataByIdsReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.InternalListMasterDataByIdsRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.InternalListMasterDataByIdsRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.MasterDataServiceClient.prototype.internalListMasterDataByIds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.MasterDataService/InternalListMasterDataByIds',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_InternalListMasterDataByIds,
      callback);
};


/**
 * @param {!proto.partnership.InternalListMasterDataByIdsReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.InternalListMasterDataByIdsRes>}
 *     Promise that resolves to the response
 */
proto.partnership.MasterDataServicePromiseClient.prototype.internalListMasterDataByIds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.MasterDataService/InternalListMasterDataByIds',
      request,
      metadata || {},
      methodDescriptor_MasterDataService_InternalListMasterDataByIds);
};


module.exports = proto.partnership;

