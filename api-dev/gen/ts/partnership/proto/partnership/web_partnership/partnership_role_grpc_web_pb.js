/**
 * @fileoverview gRPC-Web generated client stub for partnership.web_partnership
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: proto/partnership/web_partnership/partnership_role.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var proto_partnership_web_partnership_base_pb = require('../../../proto/partnership/web_partnership/base_pb.js')
const proto = {};
proto.partnership = {};
proto.partnership.web_partnership = require('./partnership_role_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.partnership.web_partnership.PartnershipRoleServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.partnership.web_partnership.PartnershipRoleServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.web_partnership.ListAllRoleReq,
 *   !proto.partnership.web_partnership.ListAllRoleRes>}
 */
const methodDescriptor_PartnershipRoleService_ListAllRole = new grpc.web.MethodDescriptor(
  '/partnership.web_partnership.PartnershipRoleService/ListAllRole',
  grpc.web.MethodType.UNARY,
  proto.partnership.web_partnership.ListAllRoleReq,
  proto.partnership.web_partnership.ListAllRoleRes,
  /**
   * @param {!proto.partnership.web_partnership.ListAllRoleReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.web_partnership.ListAllRoleRes.deserializeBinary
);


/**
 * @param {!proto.partnership.web_partnership.ListAllRoleReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.web_partnership.ListAllRoleRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.web_partnership.ListAllRoleRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.web_partnership.PartnershipRoleServiceClient.prototype.listAllRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/ListAllRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_ListAllRole,
      callback);
};


/**
 * @param {!proto.partnership.web_partnership.ListAllRoleReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.web_partnership.ListAllRoleRes>}
 *     Promise that resolves to the response
 */
proto.partnership.web_partnership.PartnershipRoleServicePromiseClient.prototype.listAllRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/ListAllRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_ListAllRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.web_partnership.ListPermissionReq,
 *   !proto.partnership.web_partnership.ListPermissionRes>}
 */
const methodDescriptor_PartnershipRoleService_ListAllPermission = new grpc.web.MethodDescriptor(
  '/partnership.web_partnership.PartnershipRoleService/ListAllPermission',
  grpc.web.MethodType.UNARY,
  proto.partnership.web_partnership.ListPermissionReq,
  proto.partnership.web_partnership.ListPermissionRes,
  /**
   * @param {!proto.partnership.web_partnership.ListPermissionReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.web_partnership.ListPermissionRes.deserializeBinary
);


/**
 * @param {!proto.partnership.web_partnership.ListPermissionReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.web_partnership.ListPermissionRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.web_partnership.ListPermissionRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.web_partnership.PartnershipRoleServiceClient.prototype.listAllPermission =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/ListAllPermission',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_ListAllPermission,
      callback);
};


/**
 * @param {!proto.partnership.web_partnership.ListPermissionReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.web_partnership.ListPermissionRes>}
 *     Promise that resolves to the response
 */
proto.partnership.web_partnership.PartnershipRoleServicePromiseClient.prototype.listAllPermission =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/ListAllPermission',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_ListAllPermission);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.web_partnership.CreateRoleReq,
 *   !proto.partnership.web_partnership.CreateRoleRes>}
 */
const methodDescriptor_PartnershipRoleService_CreateRole = new grpc.web.MethodDescriptor(
  '/partnership.web_partnership.PartnershipRoleService/CreateRole',
  grpc.web.MethodType.UNARY,
  proto.partnership.web_partnership.CreateRoleReq,
  proto.partnership.web_partnership.CreateRoleRes,
  /**
   * @param {!proto.partnership.web_partnership.CreateRoleReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.web_partnership.CreateRoleRes.deserializeBinary
);


/**
 * @param {!proto.partnership.web_partnership.CreateRoleReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.web_partnership.CreateRoleRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.web_partnership.CreateRoleRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.web_partnership.PartnershipRoleServiceClient.prototype.createRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/CreateRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_CreateRole,
      callback);
};


/**
 * @param {!proto.partnership.web_partnership.CreateRoleReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.web_partnership.CreateRoleRes>}
 *     Promise that resolves to the response
 */
proto.partnership.web_partnership.PartnershipRoleServicePromiseClient.prototype.createRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/CreateRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_CreateRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.web_partnership.UpdateRoleReq,
 *   !proto.partnership.web_partnership.Empty>}
 */
const methodDescriptor_PartnershipRoleService_UpdateRole = new grpc.web.MethodDescriptor(
  '/partnership.web_partnership.PartnershipRoleService/UpdateRole',
  grpc.web.MethodType.UNARY,
  proto.partnership.web_partnership.UpdateRoleReq,
  proto_partnership_web_partnership_base_pb.Empty,
  /**
   * @param {!proto.partnership.web_partnership.UpdateRoleReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_partnership_web_partnership_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.partnership.web_partnership.UpdateRoleReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.web_partnership.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.web_partnership.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.web_partnership.PartnershipRoleServiceClient.prototype.updateRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/UpdateRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_UpdateRole,
      callback);
};


/**
 * @param {!proto.partnership.web_partnership.UpdateRoleReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.web_partnership.Empty>}
 *     Promise that resolves to the response
 */
proto.partnership.web_partnership.PartnershipRoleServicePromiseClient.prototype.updateRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/UpdateRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_UpdateRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.web_partnership.DeleteRoleReq,
 *   !proto.partnership.web_partnership.Empty>}
 */
const methodDescriptor_PartnershipRoleService_DeleteRole = new grpc.web.MethodDescriptor(
  '/partnership.web_partnership.PartnershipRoleService/DeleteRole',
  grpc.web.MethodType.UNARY,
  proto.partnership.web_partnership.DeleteRoleReq,
  proto_partnership_web_partnership_base_pb.Empty,
  /**
   * @param {!proto.partnership.web_partnership.DeleteRoleReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_partnership_web_partnership_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.partnership.web_partnership.DeleteRoleReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.web_partnership.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.web_partnership.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.web_partnership.PartnershipRoleServiceClient.prototype.deleteRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/DeleteRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_DeleteRole,
      callback);
};


/**
 * @param {!proto.partnership.web_partnership.DeleteRoleReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.web_partnership.Empty>}
 *     Promise that resolves to the response
 */
proto.partnership.web_partnership.PartnershipRoleServicePromiseClient.prototype.deleteRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/DeleteRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_DeleteRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.web_partnership.AssignRoleReq,
 *   !proto.partnership.web_partnership.Empty>}
 */
const methodDescriptor_PartnershipRoleService_AssignRole = new grpc.web.MethodDescriptor(
  '/partnership.web_partnership.PartnershipRoleService/AssignRole',
  grpc.web.MethodType.UNARY,
  proto.partnership.web_partnership.AssignRoleReq,
  proto_partnership_web_partnership_base_pb.Empty,
  /**
   * @param {!proto.partnership.web_partnership.AssignRoleReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_partnership_web_partnership_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.partnership.web_partnership.AssignRoleReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.web_partnership.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.web_partnership.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.web_partnership.PartnershipRoleServiceClient.prototype.assignRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/AssignRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_AssignRole,
      callback);
};


/**
 * @param {!proto.partnership.web_partnership.AssignRoleReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.web_partnership.Empty>}
 *     Promise that resolves to the response
 */
proto.partnership.web_partnership.PartnershipRoleServicePromiseClient.prototype.assignRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/AssignRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_AssignRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.web_partnership.UnassignRoleReq,
 *   !proto.partnership.web_partnership.Empty>}
 */
const methodDescriptor_PartnershipRoleService_UnassignRole = new grpc.web.MethodDescriptor(
  '/partnership.web_partnership.PartnershipRoleService/UnassignRole',
  grpc.web.MethodType.UNARY,
  proto.partnership.web_partnership.UnassignRoleReq,
  proto_partnership_web_partnership_base_pb.Empty,
  /**
   * @param {!proto.partnership.web_partnership.UnassignRoleReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_partnership_web_partnership_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.partnership.web_partnership.UnassignRoleReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.web_partnership.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.web_partnership.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.web_partnership.PartnershipRoleServiceClient.prototype.unassignRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/UnassignRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_UnassignRole,
      callback);
};


/**
 * @param {!proto.partnership.web_partnership.UnassignRoleReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.web_partnership.Empty>}
 *     Promise that resolves to the response
 */
proto.partnership.web_partnership.PartnershipRoleServicePromiseClient.prototype.unassignRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.web_partnership.PartnershipRoleService/UnassignRole',
      request,
      metadata || {},
      methodDescriptor_PartnershipRoleService_UnassignRole);
};


module.exports = proto.partnership.web_partnership;

