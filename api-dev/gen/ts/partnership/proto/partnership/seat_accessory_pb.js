// source: proto/partnership/seat_accessory.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var proto_partnership_base_pb = require('../../proto/partnership/base_pb.js');
goog.object.extend(proto, proto_partnership_base_pb);
goog.exportSymbol('proto.partnership.CreateSeatAccessoryReq', null, global);
goog.exportSymbol('proto.partnership.CreateSeatAccessoryRes', null, global);
goog.exportSymbol('proto.partnership.DeleteSeatAccessoryReq', null, global);
goog.exportSymbol('proto.partnership.ListSeatAccessoryReq', null, global);
goog.exportSymbol('proto.partnership.ListSeatAccessoryRes', null, global);
goog.exportSymbol('proto.partnership.RetrieveSeatAccessoryReq', null, global);
goog.exportSymbol('proto.partnership.RetrieveSeatAccessoryRes', null, global);
goog.exportSymbol('proto.partnership.SeatAccessoryBasicInfo', null, global);
goog.exportSymbol('proto.partnership.SeatAccessoryListInfo', null, global);
goog.exportSymbol('proto.partnership.UpdateSeatAccessoryReq', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.SeatAccessoryBasicInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.partnership.SeatAccessoryBasicInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.SeatAccessoryBasicInfo.displayName = 'proto.partnership.SeatAccessoryBasicInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.SeatAccessoryListInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.partnership.SeatAccessoryListInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.SeatAccessoryListInfo.displayName = 'proto.partnership.SeatAccessoryListInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.CreateSeatAccessoryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.partnership.CreateSeatAccessoryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.CreateSeatAccessoryReq.displayName = 'proto.partnership.CreateSeatAccessoryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.UpdateSeatAccessoryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.partnership.UpdateSeatAccessoryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.UpdateSeatAccessoryReq.displayName = 'proto.partnership.UpdateSeatAccessoryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.DeleteSeatAccessoryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.partnership.DeleteSeatAccessoryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.DeleteSeatAccessoryReq.displayName = 'proto.partnership.DeleteSeatAccessoryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.ListSeatAccessoryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.partnership.ListSeatAccessoryReq.repeatedFields_, null);
};
goog.inherits(proto.partnership.ListSeatAccessoryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.ListSeatAccessoryReq.displayName = 'proto.partnership.ListSeatAccessoryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.RetrieveSeatAccessoryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.partnership.RetrieveSeatAccessoryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.RetrieveSeatAccessoryReq.displayName = 'proto.partnership.RetrieveSeatAccessoryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.CreateSeatAccessoryRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.partnership.CreateSeatAccessoryRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.CreateSeatAccessoryRes.displayName = 'proto.partnership.CreateSeatAccessoryRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.RetrieveSeatAccessoryRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.partnership.RetrieveSeatAccessoryRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.RetrieveSeatAccessoryRes.displayName = 'proto.partnership.RetrieveSeatAccessoryRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.partnership.ListSeatAccessoryRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.partnership.ListSeatAccessoryRes.repeatedFields_, null);
};
goog.inherits(proto.partnership.ListSeatAccessoryRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.partnership.ListSeatAccessoryRes.displayName = 'proto.partnership.ListSeatAccessoryRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.SeatAccessoryBasicInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.SeatAccessoryBasicInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.SeatAccessoryBasicInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.SeatAccessoryBasicInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.SeatAccessoryBasicInfo}
 */
proto.partnership.SeatAccessoryBasicInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.SeatAccessoryBasicInfo;
  return proto.partnership.SeatAccessoryBasicInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.SeatAccessoryBasicInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.SeatAccessoryBasicInfo}
 */
proto.partnership.SeatAccessoryBasicInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.SeatAccessoryBasicInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.SeatAccessoryBasicInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.SeatAccessoryBasicInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.SeatAccessoryBasicInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.partnership.SeatAccessoryBasicInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.SeatAccessoryBasicInfo} returns this
 */
proto.partnership.SeatAccessoryBasicInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.SeatAccessoryListInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.SeatAccessoryListInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.SeatAccessoryListInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.SeatAccessoryListInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && proto.partnership.SeatAccessoryBasicInfo.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.SeatAccessoryListInfo}
 */
proto.partnership.SeatAccessoryListInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.SeatAccessoryListInfo;
  return proto.partnership.SeatAccessoryListInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.SeatAccessoryListInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.SeatAccessoryListInfo}
 */
proto.partnership.SeatAccessoryListInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.partnership.SeatAccessoryBasicInfo;
      reader.readMessage(value,proto.partnership.SeatAccessoryBasicInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.SeatAccessoryListInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.SeatAccessoryListInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.SeatAccessoryListInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.SeatAccessoryListInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.partnership.SeatAccessoryBasicInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.partnership.SeatAccessoryListInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.SeatAccessoryListInfo} returns this
 */
proto.partnership.SeatAccessoryListInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SeatAccessoryBasicInfo info = 2;
 * @return {?proto.partnership.SeatAccessoryBasicInfo}
 */
proto.partnership.SeatAccessoryListInfo.prototype.getInfo = function() {
  return /** @type{?proto.partnership.SeatAccessoryBasicInfo} */ (
    jspb.Message.getWrapperField(this, proto.partnership.SeatAccessoryBasicInfo, 2));
};


/**
 * @param {?proto.partnership.SeatAccessoryBasicInfo|undefined} value
 * @return {!proto.partnership.SeatAccessoryListInfo} returns this
*/
proto.partnership.SeatAccessoryListInfo.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.partnership.SeatAccessoryListInfo} returns this
 */
proto.partnership.SeatAccessoryListInfo.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.partnership.SeatAccessoryListInfo.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 created_at = 3;
 * @return {number}
 */
proto.partnership.SeatAccessoryListInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.partnership.SeatAccessoryListInfo} returns this
 */
proto.partnership.SeatAccessoryListInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 updated_at = 4;
 * @return {number}
 */
proto.partnership.SeatAccessoryListInfo.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.partnership.SeatAccessoryListInfo} returns this
 */
proto.partnership.SeatAccessoryListInfo.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string created_by = 5;
 * @return {string}
 */
proto.partnership.SeatAccessoryListInfo.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.SeatAccessoryListInfo} returns this
 */
proto.partnership.SeatAccessoryListInfo.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string updated_by = 6;
 * @return {string}
 */
proto.partnership.SeatAccessoryListInfo.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.SeatAccessoryListInfo} returns this
 */
proto.partnership.SeatAccessoryListInfo.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.CreateSeatAccessoryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.CreateSeatAccessoryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.CreateSeatAccessoryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.CreateSeatAccessoryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.partnership.SeatAccessoryBasicInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.CreateSeatAccessoryReq}
 */
proto.partnership.CreateSeatAccessoryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.CreateSeatAccessoryReq;
  return proto.partnership.CreateSeatAccessoryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.CreateSeatAccessoryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.CreateSeatAccessoryReq}
 */
proto.partnership.CreateSeatAccessoryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.partnership.SeatAccessoryBasicInfo;
      reader.readMessage(value,proto.partnership.SeatAccessoryBasicInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.CreateSeatAccessoryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.CreateSeatAccessoryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.CreateSeatAccessoryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.CreateSeatAccessoryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.partnership.SeatAccessoryBasicInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional SeatAccessoryBasicInfo info = 1;
 * @return {?proto.partnership.SeatAccessoryBasicInfo}
 */
proto.partnership.CreateSeatAccessoryReq.prototype.getInfo = function() {
  return /** @type{?proto.partnership.SeatAccessoryBasicInfo} */ (
    jspb.Message.getWrapperField(this, proto.partnership.SeatAccessoryBasicInfo, 1));
};


/**
 * @param {?proto.partnership.SeatAccessoryBasicInfo|undefined} value
 * @return {!proto.partnership.CreateSeatAccessoryReq} returns this
*/
proto.partnership.CreateSeatAccessoryReq.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.partnership.CreateSeatAccessoryReq} returns this
 */
proto.partnership.CreateSeatAccessoryReq.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.partnership.CreateSeatAccessoryReq.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.UpdateSeatAccessoryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.UpdateSeatAccessoryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.UpdateSeatAccessoryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.UpdateSeatAccessoryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && proto.partnership.SeatAccessoryBasicInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.UpdateSeatAccessoryReq}
 */
proto.partnership.UpdateSeatAccessoryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.UpdateSeatAccessoryReq;
  return proto.partnership.UpdateSeatAccessoryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.UpdateSeatAccessoryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.UpdateSeatAccessoryReq}
 */
proto.partnership.UpdateSeatAccessoryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.partnership.SeatAccessoryBasicInfo;
      reader.readMessage(value,proto.partnership.SeatAccessoryBasicInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.UpdateSeatAccessoryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.UpdateSeatAccessoryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.UpdateSeatAccessoryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.UpdateSeatAccessoryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.partnership.SeatAccessoryBasicInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.partnership.UpdateSeatAccessoryReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.UpdateSeatAccessoryReq} returns this
 */
proto.partnership.UpdateSeatAccessoryReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SeatAccessoryBasicInfo info = 2;
 * @return {?proto.partnership.SeatAccessoryBasicInfo}
 */
proto.partnership.UpdateSeatAccessoryReq.prototype.getInfo = function() {
  return /** @type{?proto.partnership.SeatAccessoryBasicInfo} */ (
    jspb.Message.getWrapperField(this, proto.partnership.SeatAccessoryBasicInfo, 2));
};


/**
 * @param {?proto.partnership.SeatAccessoryBasicInfo|undefined} value
 * @return {!proto.partnership.UpdateSeatAccessoryReq} returns this
*/
proto.partnership.UpdateSeatAccessoryReq.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.partnership.UpdateSeatAccessoryReq} returns this
 */
proto.partnership.UpdateSeatAccessoryReq.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.partnership.UpdateSeatAccessoryReq.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.DeleteSeatAccessoryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.DeleteSeatAccessoryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.DeleteSeatAccessoryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.DeleteSeatAccessoryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.DeleteSeatAccessoryReq}
 */
proto.partnership.DeleteSeatAccessoryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.DeleteSeatAccessoryReq;
  return proto.partnership.DeleteSeatAccessoryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.DeleteSeatAccessoryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.DeleteSeatAccessoryReq}
 */
proto.partnership.DeleteSeatAccessoryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.DeleteSeatAccessoryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.DeleteSeatAccessoryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.DeleteSeatAccessoryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.DeleteSeatAccessoryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.partnership.DeleteSeatAccessoryReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.DeleteSeatAccessoryReq} returns this
 */
proto.partnership.DeleteSeatAccessoryReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.partnership.ListSeatAccessoryReq.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.ListSeatAccessoryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.ListSeatAccessoryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.ListSeatAccessoryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.ListSeatAccessoryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchText: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto_partnership_base_pb.PaginationReq.toObject(includeInstance, f),
    orderByList: jspb.Message.toObjectList(msg.getOrderByList(),
    proto_partnership_base_pb.OrderByItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.ListSeatAccessoryReq}
 */
proto.partnership.ListSeatAccessoryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.ListSeatAccessoryReq;
  return proto.partnership.ListSeatAccessoryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.ListSeatAccessoryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.ListSeatAccessoryReq}
 */
proto.partnership.ListSeatAccessoryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchText(value);
      break;
    case 2:
      var value = new proto_partnership_base_pb.PaginationReq;
      reader.readMessage(value,proto_partnership_base_pb.PaginationReq.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new proto_partnership_base_pb.OrderByItem;
      reader.readMessage(value,proto_partnership_base_pb.OrderByItem.deserializeBinaryFromReader);
      msg.addOrderBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.ListSeatAccessoryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.ListSeatAccessoryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.ListSeatAccessoryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.ListSeatAccessoryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_partnership_base_pb.PaginationReq.serializeBinaryToWriter
    );
  }
  f = message.getOrderByList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_partnership_base_pb.OrderByItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string search_text = 1;
 * @return {string}
 */
proto.partnership.ListSeatAccessoryReq.prototype.getSearchText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.ListSeatAccessoryReq} returns this
 */
proto.partnership.ListSeatAccessoryReq.prototype.setSearchText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PaginationReq pagination = 2;
 * @return {?proto.partnership.PaginationReq}
 */
proto.partnership.ListSeatAccessoryReq.prototype.getPagination = function() {
  return /** @type{?proto.partnership.PaginationReq} */ (
    jspb.Message.getWrapperField(this, proto_partnership_base_pb.PaginationReq, 2));
};


/**
 * @param {?proto.partnership.PaginationReq|undefined} value
 * @return {!proto.partnership.ListSeatAccessoryReq} returns this
*/
proto.partnership.ListSeatAccessoryReq.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.partnership.ListSeatAccessoryReq} returns this
 */
proto.partnership.ListSeatAccessoryReq.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.partnership.ListSeatAccessoryReq.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated OrderByItem order_by = 3;
 * @return {!Array<!proto.partnership.OrderByItem>}
 */
proto.partnership.ListSeatAccessoryReq.prototype.getOrderByList = function() {
  return /** @type{!Array<!proto.partnership.OrderByItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_partnership_base_pb.OrderByItem, 3));
};


/**
 * @param {!Array<!proto.partnership.OrderByItem>} value
 * @return {!proto.partnership.ListSeatAccessoryReq} returns this
*/
proto.partnership.ListSeatAccessoryReq.prototype.setOrderByList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.partnership.OrderByItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.partnership.OrderByItem}
 */
proto.partnership.ListSeatAccessoryReq.prototype.addOrderBy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.partnership.OrderByItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.partnership.ListSeatAccessoryReq} returns this
 */
proto.partnership.ListSeatAccessoryReq.prototype.clearOrderByList = function() {
  return this.setOrderByList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.RetrieveSeatAccessoryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.RetrieveSeatAccessoryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.RetrieveSeatAccessoryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.RetrieveSeatAccessoryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.RetrieveSeatAccessoryReq}
 */
proto.partnership.RetrieveSeatAccessoryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.RetrieveSeatAccessoryReq;
  return proto.partnership.RetrieveSeatAccessoryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.RetrieveSeatAccessoryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.RetrieveSeatAccessoryReq}
 */
proto.partnership.RetrieveSeatAccessoryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.RetrieveSeatAccessoryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.RetrieveSeatAccessoryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.RetrieveSeatAccessoryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.RetrieveSeatAccessoryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.partnership.RetrieveSeatAccessoryReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.RetrieveSeatAccessoryReq} returns this
 */
proto.partnership.RetrieveSeatAccessoryReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.CreateSeatAccessoryRes.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.CreateSeatAccessoryRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.CreateSeatAccessoryRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.CreateSeatAccessoryRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.CreateSeatAccessoryRes}
 */
proto.partnership.CreateSeatAccessoryRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.CreateSeatAccessoryRes;
  return proto.partnership.CreateSeatAccessoryRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.CreateSeatAccessoryRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.CreateSeatAccessoryRes}
 */
proto.partnership.CreateSeatAccessoryRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.CreateSeatAccessoryRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.CreateSeatAccessoryRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.CreateSeatAccessoryRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.CreateSeatAccessoryRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.partnership.CreateSeatAccessoryRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.CreateSeatAccessoryRes} returns this
 */
proto.partnership.CreateSeatAccessoryRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.RetrieveSeatAccessoryRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.RetrieveSeatAccessoryRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.RetrieveSeatAccessoryRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && proto.partnership.SeatAccessoryBasicInfo.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.RetrieveSeatAccessoryRes}
 */
proto.partnership.RetrieveSeatAccessoryRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.RetrieveSeatAccessoryRes;
  return proto.partnership.RetrieveSeatAccessoryRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.RetrieveSeatAccessoryRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.RetrieveSeatAccessoryRes}
 */
proto.partnership.RetrieveSeatAccessoryRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.partnership.SeatAccessoryBasicInfo;
      reader.readMessage(value,proto.partnership.SeatAccessoryBasicInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.RetrieveSeatAccessoryRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.RetrieveSeatAccessoryRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.RetrieveSeatAccessoryRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.partnership.SeatAccessoryBasicInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.RetrieveSeatAccessoryRes} returns this
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SeatAccessoryBasicInfo info = 2;
 * @return {?proto.partnership.SeatAccessoryBasicInfo}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.getInfo = function() {
  return /** @type{?proto.partnership.SeatAccessoryBasicInfo} */ (
    jspb.Message.getWrapperField(this, proto.partnership.SeatAccessoryBasicInfo, 2));
};


/**
 * @param {?proto.partnership.SeatAccessoryBasicInfo|undefined} value
 * @return {!proto.partnership.RetrieveSeatAccessoryRes} returns this
*/
proto.partnership.RetrieveSeatAccessoryRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.partnership.RetrieveSeatAccessoryRes} returns this
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 created_at = 3;
 * @return {number}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.partnership.RetrieveSeatAccessoryRes} returns this
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 updated_at = 4;
 * @return {number}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.partnership.RetrieveSeatAccessoryRes} returns this
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string created_by = 5;
 * @return {string}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.RetrieveSeatAccessoryRes} returns this
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string updated_by = 6;
 * @return {string}
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.partnership.RetrieveSeatAccessoryRes} returns this
 */
proto.partnership.RetrieveSeatAccessoryRes.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.partnership.ListSeatAccessoryRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.partnership.ListSeatAccessoryRes.prototype.toObject = function(opt_includeInstance) {
  return proto.partnership.ListSeatAccessoryRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.partnership.ListSeatAccessoryRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.ListSeatAccessoryRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoList: jspb.Message.toObjectList(msg.getInfoList(),
    proto.partnership.SeatAccessoryListInfo.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && proto_partnership_base_pb.PaginationRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.partnership.ListSeatAccessoryRes}
 */
proto.partnership.ListSeatAccessoryRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.partnership.ListSeatAccessoryRes;
  return proto.partnership.ListSeatAccessoryRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.partnership.ListSeatAccessoryRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.partnership.ListSeatAccessoryRes}
 */
proto.partnership.ListSeatAccessoryRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.partnership.SeatAccessoryListInfo;
      reader.readMessage(value,proto.partnership.SeatAccessoryListInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    case 2:
      var value = new proto_partnership_base_pb.PaginationRes;
      reader.readMessage(value,proto_partnership_base_pb.PaginationRes.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.partnership.ListSeatAccessoryRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.partnership.ListSeatAccessoryRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.partnership.ListSeatAccessoryRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.partnership.ListSeatAccessoryRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.partnership.SeatAccessoryListInfo.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_partnership_base_pb.PaginationRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SeatAccessoryListInfo info = 1;
 * @return {!Array<!proto.partnership.SeatAccessoryListInfo>}
 */
proto.partnership.ListSeatAccessoryRes.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.partnership.SeatAccessoryListInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.partnership.SeatAccessoryListInfo, 1));
};


/**
 * @param {!Array<!proto.partnership.SeatAccessoryListInfo>} value
 * @return {!proto.partnership.ListSeatAccessoryRes} returns this
*/
proto.partnership.ListSeatAccessoryRes.prototype.setInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.partnership.SeatAccessoryListInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.partnership.SeatAccessoryListInfo}
 */
proto.partnership.ListSeatAccessoryRes.prototype.addInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.partnership.SeatAccessoryListInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.partnership.ListSeatAccessoryRes} returns this
 */
proto.partnership.ListSeatAccessoryRes.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};


/**
 * optional PaginationRes pagination = 2;
 * @return {?proto.partnership.PaginationRes}
 */
proto.partnership.ListSeatAccessoryRes.prototype.getPagination = function() {
  return /** @type{?proto.partnership.PaginationRes} */ (
    jspb.Message.getWrapperField(this, proto_partnership_base_pb.PaginationRes, 2));
};


/**
 * @param {?proto.partnership.PaginationRes|undefined} value
 * @return {!proto.partnership.ListSeatAccessoryRes} returns this
*/
proto.partnership.ListSeatAccessoryRes.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.partnership.ListSeatAccessoryRes} returns this
 */
proto.partnership.ListSeatAccessoryRes.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.partnership.ListSeatAccessoryRes.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.partnership);
