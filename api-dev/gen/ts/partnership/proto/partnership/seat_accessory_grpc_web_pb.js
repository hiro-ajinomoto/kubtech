/**
 * @fileoverview gRPC-Web generated client stub for partnership
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: proto/partnership/seat_accessory.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var proto_partnership_base_pb = require('../../proto/partnership/base_pb.js')
const proto = {};
proto.partnership = require('./seat_accessory_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.partnership.SeatAccessoryServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.partnership.SeatAccessoryServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.CreateSeatAccessoryReq,
 *   !proto.partnership.CreateSeatAccessoryRes>}
 */
const methodDescriptor_SeatAccessoryService_CreateSeatAccessory = new grpc.web.MethodDescriptor(
  '/partnership.SeatAccessoryService/CreateSeatAccessory',
  grpc.web.MethodType.UNARY,
  proto.partnership.CreateSeatAccessoryReq,
  proto.partnership.CreateSeatAccessoryRes,
  /**
   * @param {!proto.partnership.CreateSeatAccessoryReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.CreateSeatAccessoryRes.deserializeBinary
);


/**
 * @param {!proto.partnership.CreateSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.CreateSeatAccessoryRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.CreateSeatAccessoryRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.SeatAccessoryServiceClient.prototype.createSeatAccessory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.SeatAccessoryService/CreateSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_CreateSeatAccessory,
      callback);
};


/**
 * @param {!proto.partnership.CreateSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.CreateSeatAccessoryRes>}
 *     Promise that resolves to the response
 */
proto.partnership.SeatAccessoryServicePromiseClient.prototype.createSeatAccessory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.SeatAccessoryService/CreateSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_CreateSeatAccessory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.UpdateSeatAccessoryReq,
 *   !proto.partnership.Empty>}
 */
const methodDescriptor_SeatAccessoryService_UpdateSeatAccessory = new grpc.web.MethodDescriptor(
  '/partnership.SeatAccessoryService/UpdateSeatAccessory',
  grpc.web.MethodType.UNARY,
  proto.partnership.UpdateSeatAccessoryReq,
  proto_partnership_base_pb.Empty,
  /**
   * @param {!proto.partnership.UpdateSeatAccessoryReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_partnership_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.partnership.UpdateSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.SeatAccessoryServiceClient.prototype.updateSeatAccessory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.SeatAccessoryService/UpdateSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_UpdateSeatAccessory,
      callback);
};


/**
 * @param {!proto.partnership.UpdateSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.Empty>}
 *     Promise that resolves to the response
 */
proto.partnership.SeatAccessoryServicePromiseClient.prototype.updateSeatAccessory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.SeatAccessoryService/UpdateSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_UpdateSeatAccessory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.DeleteSeatAccessoryReq,
 *   !proto.partnership.Empty>}
 */
const methodDescriptor_SeatAccessoryService_DeleteSeatAccessory = new grpc.web.MethodDescriptor(
  '/partnership.SeatAccessoryService/DeleteSeatAccessory',
  grpc.web.MethodType.UNARY,
  proto.partnership.DeleteSeatAccessoryReq,
  proto_partnership_base_pb.Empty,
  /**
   * @param {!proto.partnership.DeleteSeatAccessoryReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto_partnership_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.partnership.DeleteSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.SeatAccessoryServiceClient.prototype.deleteSeatAccessory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.SeatAccessoryService/DeleteSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_DeleteSeatAccessory,
      callback);
};


/**
 * @param {!proto.partnership.DeleteSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.Empty>}
 *     Promise that resolves to the response
 */
proto.partnership.SeatAccessoryServicePromiseClient.prototype.deleteSeatAccessory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.SeatAccessoryService/DeleteSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_DeleteSeatAccessory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.RetrieveSeatAccessoryReq,
 *   !proto.partnership.RetrieveSeatAccessoryRes>}
 */
const methodDescriptor_SeatAccessoryService_RetrieveSeatAccessory = new grpc.web.MethodDescriptor(
  '/partnership.SeatAccessoryService/RetrieveSeatAccessory',
  grpc.web.MethodType.UNARY,
  proto.partnership.RetrieveSeatAccessoryReq,
  proto.partnership.RetrieveSeatAccessoryRes,
  /**
   * @param {!proto.partnership.RetrieveSeatAccessoryReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.RetrieveSeatAccessoryRes.deserializeBinary
);


/**
 * @param {!proto.partnership.RetrieveSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.RetrieveSeatAccessoryRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.RetrieveSeatAccessoryRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.SeatAccessoryServiceClient.prototype.retrieveSeatAccessory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.SeatAccessoryService/RetrieveSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_RetrieveSeatAccessory,
      callback);
};


/**
 * @param {!proto.partnership.RetrieveSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.RetrieveSeatAccessoryRes>}
 *     Promise that resolves to the response
 */
proto.partnership.SeatAccessoryServicePromiseClient.prototype.retrieveSeatAccessory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.SeatAccessoryService/RetrieveSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_RetrieveSeatAccessory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.partnership.ListSeatAccessoryReq,
 *   !proto.partnership.ListSeatAccessoryRes>}
 */
const methodDescriptor_SeatAccessoryService_ListSeatAccessory = new grpc.web.MethodDescriptor(
  '/partnership.SeatAccessoryService/ListSeatAccessory',
  grpc.web.MethodType.UNARY,
  proto.partnership.ListSeatAccessoryReq,
  proto.partnership.ListSeatAccessoryRes,
  /**
   * @param {!proto.partnership.ListSeatAccessoryReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.partnership.ListSeatAccessoryRes.deserializeBinary
);


/**
 * @param {!proto.partnership.ListSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.partnership.ListSeatAccessoryRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.partnership.ListSeatAccessoryRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.partnership.SeatAccessoryServiceClient.prototype.listSeatAccessory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/partnership.SeatAccessoryService/ListSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_ListSeatAccessory,
      callback);
};


/**
 * @param {!proto.partnership.ListSeatAccessoryReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.partnership.ListSeatAccessoryRes>}
 *     Promise that resolves to the response
 */
proto.partnership.SeatAccessoryServicePromiseClient.prototype.listSeatAccessory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/partnership.SeatAccessoryService/ListSeatAccessory',
      request,
      metadata || {},
      methodDescriptor_SeatAccessoryService_ListSeatAccessory);
};


module.exports = proto.partnership;

