/**
 * @fileoverview gRPC-Web generated client stub for ticket.mobile
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: ticket/mobile/ticket_transferable.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var ticket_mobile_base_pb = require('../../ticket/mobile/base_pb.js')
const proto = {};
proto.ticket = {};
proto.ticket.mobile = require('./ticket_transferable_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ticket.mobile.TicketTransferableServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ticket.mobile.TicketTransferableServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.CreateTicketTransferableReq,
 *   !proto.ticket.mobile.CreateTicketTransferableRes>}
 */
const methodDescriptor_TicketTransferableService_CreateTicketTransferable = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketTransferableService/CreateTicketTransferable',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.CreateTicketTransferableReq,
  proto.ticket.mobile.CreateTicketTransferableRes,
  /**
   * @param {!proto.ticket.mobile.CreateTicketTransferableReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.CreateTicketTransferableRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.CreateTicketTransferableReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.CreateTicketTransferableRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.CreateTicketTransferableRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketTransferableServiceClient.prototype.createTicketTransferable =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/CreateTicketTransferable',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_CreateTicketTransferable,
      callback);
};


/**
 * @param {!proto.ticket.mobile.CreateTicketTransferableReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.CreateTicketTransferableRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketTransferableServicePromiseClient.prototype.createTicketTransferable =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/CreateTicketTransferable',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_CreateTicketTransferable);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.CreateTicketTransferableAllReq,
 *   !proto.ticket.mobile.CreateTicketTransferableAllRes>}
 */
const methodDescriptor_TicketTransferableService_CreateTicketTransferableAll = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketTransferableService/CreateTicketTransferableAll',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.CreateTicketTransferableAllReq,
  proto.ticket.mobile.CreateTicketTransferableAllRes,
  /**
   * @param {!proto.ticket.mobile.CreateTicketTransferableAllReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.CreateTicketTransferableAllRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.CreateTicketTransferableAllReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.CreateTicketTransferableAllRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.CreateTicketTransferableAllRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketTransferableServiceClient.prototype.createTicketTransferableAll =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/CreateTicketTransferableAll',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_CreateTicketTransferableAll,
      callback);
};


/**
 * @param {!proto.ticket.mobile.CreateTicketTransferableAllReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.CreateTicketTransferableAllRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketTransferableServicePromiseClient.prototype.createTicketTransferableAll =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/CreateTicketTransferableAll',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_CreateTicketTransferableAll);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.CreateTicketTransferableAllExcludeReq,
 *   !proto.ticket.mobile.CreateTicketTransferableAllExcludeRes>}
 */
const methodDescriptor_TicketTransferableService_CreateTicketTransferableAllExclude = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketTransferableService/CreateTicketTransferableAllExclude',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.CreateTicketTransferableAllExcludeReq,
  proto.ticket.mobile.CreateTicketTransferableAllExcludeRes,
  /**
   * @param {!proto.ticket.mobile.CreateTicketTransferableAllExcludeReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.CreateTicketTransferableAllExcludeRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.CreateTicketTransferableAllExcludeReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.CreateTicketTransferableAllExcludeRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.CreateTicketTransferableAllExcludeRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketTransferableServiceClient.prototype.createTicketTransferableAllExclude =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/CreateTicketTransferableAllExclude',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_CreateTicketTransferableAllExclude,
      callback);
};


/**
 * @param {!proto.ticket.mobile.CreateTicketTransferableAllExcludeReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.CreateTicketTransferableAllExcludeRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketTransferableServicePromiseClient.prototype.createTicketTransferableAllExclude =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/CreateTicketTransferableAllExclude',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_CreateTicketTransferableAllExclude);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.MapUserInfoReq,
 *   !proto.ticket.mobile.Empty>}
 */
const methodDescriptor_TicketTransferableService_MapUserInfo = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketTransferableService/MapUserInfo',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.MapUserInfoReq,
  ticket_mobile_base_pb.Empty,
  /**
   * @param {!proto.ticket.mobile.MapUserInfoReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  ticket_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.MapUserInfoReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketTransferableServiceClient.prototype.mapUserInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/MapUserInfo',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_MapUserInfo,
      callback);
};


/**
 * @param {!proto.ticket.mobile.MapUserInfoReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketTransferableServicePromiseClient.prototype.mapUserInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/MapUserInfo',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_MapUserInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.SubmitTicketTransferableReq,
 *   !proto.ticket.mobile.Empty>}
 */
const methodDescriptor_TicketTransferableService_SubmitTicketTransferable = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketTransferableService/SubmitTicketTransferable',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.SubmitTicketTransferableReq,
  ticket_mobile_base_pb.Empty,
  /**
   * @param {!proto.ticket.mobile.SubmitTicketTransferableReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  ticket_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.SubmitTicketTransferableReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketTransferableServiceClient.prototype.submitTicketTransferable =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/SubmitTicketTransferable',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_SubmitTicketTransferable,
      callback);
};


/**
 * @param {!proto.ticket.mobile.SubmitTicketTransferableReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketTransferableServicePromiseClient.prototype.submitTicketTransferable =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/SubmitTicketTransferable',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_SubmitTicketTransferable);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.GetDetailTicketTransferableReq,
 *   !proto.ticket.mobile.GetDetailTicketTransferableRes>}
 */
const methodDescriptor_TicketTransferableService_GetDetailTicketTransferable = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketTransferableService/GetDetailTicketTransferable',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.GetDetailTicketTransferableReq,
  proto.ticket.mobile.GetDetailTicketTransferableRes,
  /**
   * @param {!proto.ticket.mobile.GetDetailTicketTransferableReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.GetDetailTicketTransferableRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.GetDetailTicketTransferableReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.GetDetailTicketTransferableRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.GetDetailTicketTransferableRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketTransferableServiceClient.prototype.getDetailTicketTransferable =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/GetDetailTicketTransferable',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_GetDetailTicketTransferable,
      callback);
};


/**
 * @param {!proto.ticket.mobile.GetDetailTicketTransferableReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.GetDetailTicketTransferableRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketTransferableServicePromiseClient.prototype.getDetailTicketTransferable =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketTransferableService/GetDetailTicketTransferable',
      request,
      metadata || {},
      methodDescriptor_TicketTransferableService_GetDetailTicketTransferable);
};


module.exports = proto.ticket.mobile;

