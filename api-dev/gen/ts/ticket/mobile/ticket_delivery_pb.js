// source: ticket/mobile/ticket_delivery.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var base_base_pb = require('../../base/base_pb.js');
goog.object.extend(proto, base_base_pb);
var ticket_mobile_ticket_pb = require('../../ticket/mobile/ticket_pb.js');
goog.object.extend(proto, ticket_mobile_ticket_pb);
goog.exportSymbol('proto.ticket.mobile.ListTicketDeliveriesReq', null, global);
goog.exportSymbol('proto.ticket.mobile.ListTicketDeliveriesRes', null, global);
goog.exportSymbol('proto.ticket.mobile.TicketDeliveryEventInfo', null, global);
goog.exportSymbol('proto.ticket.mobile.TicketDeliveryInfo', null, global);
goog.exportSymbol('proto.ticket.mobile.TicketDeliveryStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ticket.mobile.TicketDeliveryEventInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ticket.mobile.TicketDeliveryEventInfo.repeatedFields_, null);
};
goog.inherits(proto.ticket.mobile.TicketDeliveryEventInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ticket.mobile.TicketDeliveryEventInfo.displayName = 'proto.ticket.mobile.TicketDeliveryEventInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ticket.mobile.TicketDeliveryInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ticket.mobile.TicketDeliveryInfo.repeatedFields_, null);
};
goog.inherits(proto.ticket.mobile.TicketDeliveryInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ticket.mobile.TicketDeliveryInfo.displayName = 'proto.ticket.mobile.TicketDeliveryInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ticket.mobile.ListTicketDeliveriesReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ticket.mobile.ListTicketDeliveriesReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ticket.mobile.ListTicketDeliveriesReq.displayName = 'proto.ticket.mobile.ListTicketDeliveriesReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ticket.mobile.ListTicketDeliveriesRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ticket.mobile.ListTicketDeliveriesRes.repeatedFields_, null);
};
goog.inherits(proto.ticket.mobile.ListTicketDeliveriesRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ticket.mobile.ListTicketDeliveriesRes.displayName = 'proto.ticket.mobile.ListTicketDeliveriesRes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ticket.mobile.TicketDeliveryEventInfo.repeatedFields_ = [9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ticket.mobile.TicketDeliveryEventInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ticket.mobile.TicketDeliveryEventInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ticket.mobile.TicketDeliveryEventInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    checkinStartTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    checkinEndTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timezone: jspb.Message.getFieldWithDefault(msg, 8, ""),
    seatBlockNamesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    seatNamesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ticket.mobile.TicketDeliveryEventInfo;
  return proto.ticket.mobile.TicketDeliveryEventInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ticket.mobile.TicketDeliveryEventInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCheckinStartTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCheckinEndTime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addSeatBlockNames(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addSeatNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ticket.mobile.TicketDeliveryEventInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ticket.mobile.TicketDeliveryEventInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ticket.mobile.TicketDeliveryEventInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCheckinStartTime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCheckinEndTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSeatBlockNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getSeatNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
};


/**
 * optional string event_id = 1;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 start_time = 4;
 * @return {number}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 end_time = 5;
 * @return {number}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 checkin_start_time = 6;
 * @return {number}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getCheckinStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setCheckinStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 checkin_end_time = 7;
 * @return {number}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getCheckinEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setCheckinEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string timezone = 8;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated string seat_block_names = 9;
 * @return {!Array<string>}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getSeatBlockNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setSeatBlockNamesList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.addSeatBlockNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.clearSeatBlockNamesList = function() {
  return this.setSeatBlockNamesList([]);
};


/**
 * repeated string seat_names = 10;
 * @return {!Array<string>}
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.getSeatNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.setSeatNamesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.addSeatNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ticket.mobile.TicketDeliveryEventInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryEventInfo.prototype.clearSeatNamesList = function() {
  return this.setSeatNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ticket.mobile.TicketDeliveryInfo.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ticket.mobile.TicketDeliveryInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ticket.mobile.TicketDeliveryInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ticket.mobile.TicketDeliveryInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    secretCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ticketsList: jspb.Message.toObjectList(msg.getTicketsList(),
    ticket_mobile_ticket_pb.TicketInfo.toObject, includeInstance),
    userId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    orderCode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ticketCheckInAmount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    eventInfo: (f = msg.getEventInfo()) && proto.ticket.mobile.TicketDeliveryEventInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ticket.mobile.TicketDeliveryInfo}
 */
proto.ticket.mobile.TicketDeliveryInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ticket.mobile.TicketDeliveryInfo;
  return proto.ticket.mobile.TicketDeliveryInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ticket.mobile.TicketDeliveryInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ticket.mobile.TicketDeliveryInfo}
 */
proto.ticket.mobile.TicketDeliveryInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretCode(value);
      break;
    case 6:
      var value = new ticket_mobile_ticket_pb.TicketInfo;
      reader.readMessage(value,ticket_mobile_ticket_pb.TicketInfo.deserializeBinaryFromReader);
      msg.addTickets(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderCode(value);
      break;
    case 9:
      var value = /** @type {!proto.ticket.mobile.TicketDeliveryStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketCheckInAmount(value);
      break;
    case 11:
      var value = new proto.ticket.mobile.TicketDeliveryEventInfo;
      reader.readMessage(value,proto.ticket.mobile.TicketDeliveryEventInfo.deserializeBinaryFromReader);
      msg.setEventInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ticket.mobile.TicketDeliveryInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ticket.mobile.TicketDeliveryInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ticket.mobile.TicketDeliveryInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSecretCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTicketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      ticket_mobile_ticket_pb.TicketInfo.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOrderCode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getTicketCheckInAmount();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getEventInfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.ticket.mobile.TicketDeliveryEventInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string partnership_id = 4;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string secret_code = 5;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getSecretCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setSecretCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated TicketInfo tickets = 6;
 * @return {!Array<!proto.ticket.mobile.TicketInfo>}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getTicketsList = function() {
  return /** @type{!Array<!proto.ticket.mobile.TicketInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, ticket_mobile_ticket_pb.TicketInfo, 6));
};


/**
 * @param {!Array<!proto.ticket.mobile.TicketInfo>} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
*/
proto.ticket.mobile.TicketDeliveryInfo.prototype.setTicketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ticket.mobile.TicketInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ticket.mobile.TicketInfo}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.addTickets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ticket.mobile.TicketInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.clearTicketsList = function() {
  return this.setTicketsList([]);
};


/**
 * optional string user_id = 7;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string order_code = 8;
 * @return {string}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getOrderCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setOrderCode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional TicketDeliveryStatus status = 9;
 * @return {!proto.ticket.mobile.TicketDeliveryStatus}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getStatus = function() {
  return /** @type {!proto.ticket.mobile.TicketDeliveryStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.ticket.mobile.TicketDeliveryStatus} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional int64 ticket_check_in_amount = 10;
 * @return {number}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getTicketCheckInAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.setTicketCheckInAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional TicketDeliveryEventInfo event_info = 11;
 * @return {?proto.ticket.mobile.TicketDeliveryEventInfo}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.getEventInfo = function() {
  return /** @type{?proto.ticket.mobile.TicketDeliveryEventInfo} */ (
    jspb.Message.getWrapperField(this, proto.ticket.mobile.TicketDeliveryEventInfo, 11));
};


/**
 * @param {?proto.ticket.mobile.TicketDeliveryEventInfo|undefined} value
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
*/
proto.ticket.mobile.TicketDeliveryInfo.prototype.setEventInfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ticket.mobile.TicketDeliveryInfo} returns this
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.clearEventInfo = function() {
  return this.setEventInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ticket.mobile.TicketDeliveryInfo.prototype.hasEventInfo = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ticket.mobile.ListTicketDeliveriesReq.prototype.toObject = function(opt_includeInstance) {
  return proto.ticket.mobile.ListTicketDeliveriesReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ticket.mobile.ListTicketDeliveriesReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ticket.mobile.ListTicketDeliveriesReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && base_base_pb.PaginationReq.toObject(includeInstance, f),
    searchEvent: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ticket.mobile.ListTicketDeliveriesReq}
 */
proto.ticket.mobile.ListTicketDeliveriesReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ticket.mobile.ListTicketDeliveriesReq;
  return proto.ticket.mobile.ListTicketDeliveriesReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ticket.mobile.ListTicketDeliveriesReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ticket.mobile.ListTicketDeliveriesReq}
 */
proto.ticket.mobile.ListTicketDeliveriesReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_base_pb.PaginationReq;
      reader.readMessage(value,base_base_pb.PaginationReq.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ticket.mobile.ListTicketDeliveriesReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ticket.mobile.ListTicketDeliveriesReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ticket.mobile.ListTicketDeliveriesReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ticket.mobile.ListTicketDeliveriesReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_base_pb.PaginationReq.serializeBinaryToWriter
    );
  }
  f = message.getSearchEvent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional base.PaginationReq pagination = 1;
 * @return {?proto.base.PaginationReq}
 */
proto.ticket.mobile.ListTicketDeliveriesReq.prototype.getPagination = function() {
  return /** @type{?proto.base.PaginationReq} */ (
    jspb.Message.getWrapperField(this, base_base_pb.PaginationReq, 1));
};


/**
 * @param {?proto.base.PaginationReq|undefined} value
 * @return {!proto.ticket.mobile.ListTicketDeliveriesReq} returns this
*/
proto.ticket.mobile.ListTicketDeliveriesReq.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ticket.mobile.ListTicketDeliveriesReq} returns this
 */
proto.ticket.mobile.ListTicketDeliveriesReq.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ticket.mobile.ListTicketDeliveriesReq.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string search_event = 2;
 * @return {string}
 */
proto.ticket.mobile.ListTicketDeliveriesReq.prototype.getSearchEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ticket.mobile.ListTicketDeliveriesReq} returns this
 */
proto.ticket.mobile.ListTicketDeliveriesReq.prototype.setSearchEvent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ticket.mobile.ListTicketDeliveriesRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.toObject = function(opt_includeInstance) {
  return proto.ticket.mobile.ListTicketDeliveriesRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ticket.mobile.ListTicketDeliveriesRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ticket.mobile.ListTicketDeliveriesRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.ticket.mobile.TicketDeliveryInfo.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && base_base_pb.PaginationRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ticket.mobile.ListTicketDeliveriesRes}
 */
proto.ticket.mobile.ListTicketDeliveriesRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ticket.mobile.ListTicketDeliveriesRes;
  return proto.ticket.mobile.ListTicketDeliveriesRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ticket.mobile.ListTicketDeliveriesRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ticket.mobile.ListTicketDeliveriesRes}
 */
proto.ticket.mobile.ListTicketDeliveriesRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ticket.mobile.TicketDeliveryInfo;
      reader.readMessage(value,proto.ticket.mobile.TicketDeliveryInfo.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 2:
      var value = new base_base_pb.PaginationRes;
      reader.readMessage(value,base_base_pb.PaginationRes.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ticket.mobile.ListTicketDeliveriesRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ticket.mobile.ListTicketDeliveriesRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ticket.mobile.ListTicketDeliveriesRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ticket.mobile.TicketDeliveryInfo.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_base_pb.PaginationRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TicketDeliveryInfo list = 1;
 * @return {!Array<!proto.ticket.mobile.TicketDeliveryInfo>}
 */
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.getListList = function() {
  return /** @type{!Array<!proto.ticket.mobile.TicketDeliveryInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ticket.mobile.TicketDeliveryInfo, 1));
};


/**
 * @param {!Array<!proto.ticket.mobile.TicketDeliveryInfo>} value
 * @return {!proto.ticket.mobile.ListTicketDeliveriesRes} returns this
*/
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ticket.mobile.TicketDeliveryInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ticket.mobile.TicketDeliveryInfo}
 */
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ticket.mobile.TicketDeliveryInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ticket.mobile.ListTicketDeliveriesRes} returns this
 */
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional base.PaginationRes pagination = 2;
 * @return {?proto.base.PaginationRes}
 */
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.getPagination = function() {
  return /** @type{?proto.base.PaginationRes} */ (
    jspb.Message.getWrapperField(this, base_base_pb.PaginationRes, 2));
};


/**
 * @param {?proto.base.PaginationRes|undefined} value
 * @return {!proto.ticket.mobile.ListTicketDeliveriesRes} returns this
*/
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ticket.mobile.ListTicketDeliveriesRes} returns this
 */
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ticket.mobile.ListTicketDeliveriesRes.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.ticket.mobile.TicketDeliveryStatus = {
  TICKET_DELIVERY_STATUS_INVALID: 0,
  TICKET_DELIVERY_STATUS_NOT_USED: 1,
  TICKET_DELIVERY_STATUS_CHECKED_IN: 2
};

goog.object.extend(exports, proto.ticket.mobile);
