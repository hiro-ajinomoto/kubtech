/**
 * @fileoverview gRPC-Web generated client stub for ticket.mobile
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: ticket/mobile/ticket.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var ticket_mobile_base_pb = require('../../ticket/mobile/base_pb.js')

var base_base_pb = require('../../base/base_pb.js')
const proto = {};
proto.ticket = {};
proto.ticket.mobile = require('./ticket_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ticket.mobile.TicketServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ticket.mobile.TicketServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.UpdateUserInfoReq,
 *   !proto.ticket.mobile.Empty>}
 */
const methodDescriptor_TicketService_UpdateUserInfo = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/UpdateUserInfo',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.UpdateUserInfoReq,
  ticket_mobile_base_pb.Empty,
  /**
   * @param {!proto.ticket.mobile.UpdateUserInfoReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  ticket_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.UpdateUserInfoReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.updateUserInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/UpdateUserInfo',
      request,
      metadata || {},
      methodDescriptor_TicketService_UpdateUserInfo,
      callback);
};


/**
 * @param {!proto.ticket.mobile.UpdateUserInfoReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.updateUserInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/UpdateUserInfo',
      request,
      metadata || {},
      methodDescriptor_TicketService_UpdateUserInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.UpdateStatusReq,
 *   !proto.ticket.mobile.Empty>}
 */
const methodDescriptor_TicketService_UpdateStatus = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/UpdateStatus',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.UpdateStatusReq,
  ticket_mobile_base_pb.Empty,
  /**
   * @param {!proto.ticket.mobile.UpdateStatusReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  ticket_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.UpdateStatusReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.updateStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/UpdateStatus',
      request,
      metadata || {},
      methodDescriptor_TicketService_UpdateStatus,
      callback);
};


/**
 * @param {!proto.ticket.mobile.UpdateStatusReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.updateStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/UpdateStatus',
      request,
      metadata || {},
      methodDescriptor_TicketService_UpdateStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.UpdateEnableVerificationCodeReq,
 *   !proto.ticket.mobile.Empty>}
 */
const methodDescriptor_TicketService_UpdateEnableVerificationCode = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/UpdateEnableVerificationCode',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.UpdateEnableVerificationCodeReq,
  ticket_mobile_base_pb.Empty,
  /**
   * @param {!proto.ticket.mobile.UpdateEnableVerificationCodeReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  ticket_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.UpdateEnableVerificationCodeReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.updateEnableVerificationCode =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/UpdateEnableVerificationCode',
      request,
      metadata || {},
      methodDescriptor_TicketService_UpdateEnableVerificationCode,
      callback);
};


/**
 * @param {!proto.ticket.mobile.UpdateEnableVerificationCodeReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.updateEnableVerificationCode =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/UpdateEnableVerificationCode',
      request,
      metadata || {},
      methodDescriptor_TicketService_UpdateEnableVerificationCode);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.GetMyTicketReq,
 *   !proto.ticket.mobile.GetMyTicketRes>}
 */
const methodDescriptor_TicketService_GetMyTicket = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/GetMyTicket',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.GetMyTicketReq,
  proto.ticket.mobile.GetMyTicketRes,
  /**
   * @param {!proto.ticket.mobile.GetMyTicketReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.GetMyTicketRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.GetMyTicketReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.GetMyTicketRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.GetMyTicketRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.getMyTicket =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTicket',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTicket,
      callback);
};


/**
 * @param {!proto.ticket.mobile.GetMyTicketReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.GetMyTicketRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.getMyTicket =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTicket',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTicket);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.GetMyTicketByOrderIdReq,
 *   !proto.ticket.mobile.GetMyTicketByOrderIdRes>}
 */
const methodDescriptor_TicketService_GetMyTicketByOrderId = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/GetMyTicketByOrderId',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.GetMyTicketByOrderIdReq,
  proto.ticket.mobile.GetMyTicketByOrderIdRes,
  /**
   * @param {!proto.ticket.mobile.GetMyTicketByOrderIdReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.GetMyTicketByOrderIdRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.GetMyTicketByOrderIdReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.GetMyTicketByOrderIdRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.GetMyTicketByOrderIdRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.getMyTicketByOrderId =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTicketByOrderId',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTicketByOrderId,
      callback);
};


/**
 * @param {!proto.ticket.mobile.GetMyTicketByOrderIdReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.GetMyTicketByOrderIdRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.getMyTicketByOrderId =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTicketByOrderId',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTicketByOrderId);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.ListMyTicketReq,
 *   !proto.ticket.mobile.GetMyTicketsRes>}
 */
const methodDescriptor_TicketService_GetMyTickets = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/GetMyTickets',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.ListMyTicketReq,
  proto.ticket.mobile.GetMyTicketsRes,
  /**
   * @param {!proto.ticket.mobile.ListMyTicketReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.GetMyTicketsRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.ListMyTicketReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.GetMyTicketsRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.GetMyTicketsRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.getMyTickets =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTickets',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTickets,
      callback);
};


/**
 * @param {!proto.ticket.mobile.ListMyTicketReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.GetMyTicketsRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.getMyTickets =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTickets',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTickets);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.GetMyTicketByTransferTransactionIdReq,
 *   !proto.ticket.mobile.GetMyTicketByTransferTransactionIdRes>}
 */
const methodDescriptor_TicketService_GetMyTicketByTransferTransactionId = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/GetMyTicketByTransferTransactionId',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.GetMyTicketByTransferTransactionIdReq,
  proto.ticket.mobile.GetMyTicketByTransferTransactionIdRes,
  /**
   * @param {!proto.ticket.mobile.GetMyTicketByTransferTransactionIdReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.GetMyTicketByTransferTransactionIdRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.GetMyTicketByTransferTransactionIdReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.GetMyTicketByTransferTransactionIdRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.GetMyTicketByTransferTransactionIdRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.getMyTicketByTransferTransactionId =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTicketByTransferTransactionId',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTicketByTransferTransactionId,
      callback);
};


/**
 * @param {!proto.ticket.mobile.GetMyTicketByTransferTransactionIdReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.GetMyTicketByTransferTransactionIdRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.getMyTicketByTransferTransactionId =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTicketByTransferTransactionId',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTicketByTransferTransactionId);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.GetMyTransferTransactionHistoryReq,
 *   !proto.ticket.mobile.GetMyTransferTransactionHistoryRes>}
 */
const methodDescriptor_TicketService_GetMyTransferTransactionHistory = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/GetMyTransferTransactionHistory',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.GetMyTransferTransactionHistoryReq,
  proto.ticket.mobile.GetMyTransferTransactionHistoryRes,
  /**
   * @param {!proto.ticket.mobile.GetMyTransferTransactionHistoryReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.GetMyTransferTransactionHistoryRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.GetMyTransferTransactionHistoryReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.GetMyTransferTransactionHistoryRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.GetMyTransferTransactionHistoryRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.getMyTransferTransactionHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTransferTransactionHistory',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTransferTransactionHistory,
      callback);
};


/**
 * @param {!proto.ticket.mobile.GetMyTransferTransactionHistoryReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.GetMyTransferTransactionHistoryRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.getMyTransferTransactionHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTransferTransactionHistory',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTransferTransactionHistory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.ListMyTicketByStatusReq,
 *   !proto.ticket.mobile.ListMyTicketByStatusRes>}
 */
const methodDescriptor_TicketService_ListMyTicketByStatus = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/ListMyTicketByStatus',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.ListMyTicketByStatusReq,
  proto.ticket.mobile.ListMyTicketByStatusRes,
  /**
   * @param {!proto.ticket.mobile.ListMyTicketByStatusReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.ListMyTicketByStatusRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.ListMyTicketByStatusReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.ListMyTicketByStatusRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.ListMyTicketByStatusRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.listMyTicketByStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/ListMyTicketByStatus',
      request,
      metadata || {},
      methodDescriptor_TicketService_ListMyTicketByStatus,
      callback);
};


/**
 * @param {!proto.ticket.mobile.ListMyTicketByStatusReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.ListMyTicketByStatusRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.listMyTicketByStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/ListMyTicketByStatus',
      request,
      metadata || {},
      methodDescriptor_TicketService_ListMyTicketByStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.ListMyTicketByPriceBlockReq,
 *   !proto.ticket.mobile.ListMyTicketByPriceBlockRes>}
 */
const methodDescriptor_TicketService_ListMyTicketByPriceBlock = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/ListMyTicketByPriceBlock',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.ListMyTicketByPriceBlockReq,
  proto.ticket.mobile.ListMyTicketByPriceBlockRes,
  /**
   * @param {!proto.ticket.mobile.ListMyTicketByPriceBlockReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.ListMyTicketByPriceBlockRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.ListMyTicketByPriceBlockReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.ListMyTicketByPriceBlockRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.ListMyTicketByPriceBlockRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.listMyTicketByPriceBlock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/ListMyTicketByPriceBlock',
      request,
      metadata || {},
      methodDescriptor_TicketService_ListMyTicketByPriceBlock,
      callback);
};


/**
 * @param {!proto.ticket.mobile.ListMyTicketByPriceBlockReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.ListMyTicketByPriceBlockRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.listMyTicketByPriceBlock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/ListMyTicketByPriceBlock',
      request,
      metadata || {},
      methodDescriptor_TicketService_ListMyTicketByPriceBlock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.ListMyTicketReadyToCheckinReq,
 *   !proto.ticket.mobile.ListMyTicketReadyToCheckinRes>}
 */
const methodDescriptor_TicketService_ListMyTicketReadyToCheckin = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/ListMyTicketReadyToCheckin',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.ListMyTicketReadyToCheckinReq,
  proto.ticket.mobile.ListMyTicketReadyToCheckinRes,
  /**
   * @param {!proto.ticket.mobile.ListMyTicketReadyToCheckinReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.ListMyTicketReadyToCheckinRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.ListMyTicketReadyToCheckinReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.ListMyTicketReadyToCheckinRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.ListMyTicketReadyToCheckinRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.listMyTicketReadyToCheckin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/ListMyTicketReadyToCheckin',
      request,
      metadata || {},
      methodDescriptor_TicketService_ListMyTicketReadyToCheckin,
      callback);
};


/**
 * @param {!proto.ticket.mobile.ListMyTicketReadyToCheckinReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.ListMyTicketReadyToCheckinRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.listMyTicketReadyToCheckin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/ListMyTicketReadyToCheckin',
      request,
      metadata || {},
      methodDescriptor_TicketService_ListMyTicketReadyToCheckin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.MarkTicketOfflineReq,
 *   !proto.ticket.mobile.Empty>}
 */
const methodDescriptor_TicketService_MarkTicketOffline = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/MarkTicketOffline',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.MarkTicketOfflineReq,
  ticket_mobile_base_pb.Empty,
  /**
   * @param {!proto.ticket.mobile.MarkTicketOfflineReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  ticket_mobile_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.MarkTicketOfflineReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.markTicketOffline =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/MarkTicketOffline',
      request,
      metadata || {},
      methodDescriptor_TicketService_MarkTicketOffline,
      callback);
};


/**
 * @param {!proto.ticket.mobile.MarkTicketOfflineReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.Empty>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.markTicketOffline =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/MarkTicketOffline',
      request,
      metadata || {},
      methodDescriptor_TicketService_MarkTicketOffline);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ticket.mobile.GetMyTicketsByDeliveryIDReq,
 *   !proto.ticket.mobile.GetMyTicketsByDeliveryIDRes>}
 */
const methodDescriptor_TicketService_GetMyTicketsByDeliveryID = new grpc.web.MethodDescriptor(
  '/ticket.mobile.TicketService/GetMyTicketsByDeliveryID',
  grpc.web.MethodType.UNARY,
  proto.ticket.mobile.GetMyTicketsByDeliveryIDReq,
  proto.ticket.mobile.GetMyTicketsByDeliveryIDRes,
  /**
   * @param {!proto.ticket.mobile.GetMyTicketsByDeliveryIDReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ticket.mobile.GetMyTicketsByDeliveryIDRes.deserializeBinary
);


/**
 * @param {!proto.ticket.mobile.GetMyTicketsByDeliveryIDReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ticket.mobile.GetMyTicketsByDeliveryIDRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ticket.mobile.GetMyTicketsByDeliveryIDRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ticket.mobile.TicketServiceClient.prototype.getMyTicketsByDeliveryID =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTicketsByDeliveryID',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTicketsByDeliveryID,
      callback);
};


/**
 * @param {!proto.ticket.mobile.GetMyTicketsByDeliveryIDReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ticket.mobile.GetMyTicketsByDeliveryIDRes>}
 *     Promise that resolves to the response
 */
proto.ticket.mobile.TicketServicePromiseClient.prototype.getMyTicketsByDeliveryID =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ticket.mobile.TicketService/GetMyTicketsByDeliveryID',
      request,
      metadata || {},
      methodDescriptor_TicketService_GetMyTicketsByDeliveryID);
};


module.exports = proto.ticket.mobile;

