/**
 * @fileoverview gRPC-Web generated client stub for event.mobile
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: event/mobile/seat_map.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var base_base_pb = require('../../base/base_pb.js')
const proto = {};
proto.event = {};
proto.event.mobile = require('./seat_map_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.event.mobile.SeatMapServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.event.mobile.SeatMapServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.mobile.ListSeatMapReq,
 *   !proto.event.mobile.ListSeatMapRes>}
 */
const methodDescriptor_SeatMapService_ListSeatMap = new grpc.web.MethodDescriptor(
  '/event.mobile.SeatMapService/ListSeatMap',
  grpc.web.MethodType.UNARY,
  proto.event.mobile.ListSeatMapReq,
  proto.event.mobile.ListSeatMapRes,
  /**
   * @param {!proto.event.mobile.ListSeatMapReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.mobile.ListSeatMapRes.deserializeBinary
);


/**
 * @param {!proto.event.mobile.ListSeatMapReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.mobile.ListSeatMapRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.mobile.ListSeatMapRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.mobile.SeatMapServiceClient.prototype.listSeatMap =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.mobile.SeatMapService/ListSeatMap',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_ListSeatMap,
      callback);
};


/**
 * @param {!proto.event.mobile.ListSeatMapReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.mobile.ListSeatMapRes>}
 *     Promise that resolves to the response
 */
proto.event.mobile.SeatMapServicePromiseClient.prototype.listSeatMap =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.mobile.SeatMapService/ListSeatMap',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_ListSeatMap);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.mobile.RetrieveSeatMapReq,
 *   !proto.event.mobile.RetrieveSeatMapRes>}
 */
const methodDescriptor_SeatMapService_RetrieveSeatMap = new grpc.web.MethodDescriptor(
  '/event.mobile.SeatMapService/RetrieveSeatMap',
  grpc.web.MethodType.UNARY,
  proto.event.mobile.RetrieveSeatMapReq,
  proto.event.mobile.RetrieveSeatMapRes,
  /**
   * @param {!proto.event.mobile.RetrieveSeatMapReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.mobile.RetrieveSeatMapRes.deserializeBinary
);


/**
 * @param {!proto.event.mobile.RetrieveSeatMapReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.mobile.RetrieveSeatMapRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.mobile.RetrieveSeatMapRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.mobile.SeatMapServiceClient.prototype.retrieveSeatMap =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.mobile.SeatMapService/RetrieveSeatMap',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_RetrieveSeatMap,
      callback);
};


/**
 * @param {!proto.event.mobile.RetrieveSeatMapReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.mobile.RetrieveSeatMapRes>}
 *     Promise that resolves to the response
 */
proto.event.mobile.SeatMapServicePromiseClient.prototype.retrieveSeatMap =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.mobile.SeatMapService/RetrieveSeatMap',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_RetrieveSeatMap);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.mobile.ListSeatBlockReq,
 *   !proto.event.mobile.ListSeatBlockRes>}
 */
const methodDescriptor_SeatMapService_ListSeatBlock = new grpc.web.MethodDescriptor(
  '/event.mobile.SeatMapService/ListSeatBlock',
  grpc.web.MethodType.UNARY,
  proto.event.mobile.ListSeatBlockReq,
  proto.event.mobile.ListSeatBlockRes,
  /**
   * @param {!proto.event.mobile.ListSeatBlockReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.mobile.ListSeatBlockRes.deserializeBinary
);


/**
 * @param {!proto.event.mobile.ListSeatBlockReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.mobile.ListSeatBlockRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.mobile.ListSeatBlockRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.mobile.SeatMapServiceClient.prototype.listSeatBlock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.mobile.SeatMapService/ListSeatBlock',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_ListSeatBlock,
      callback);
};


/**
 * @param {!proto.event.mobile.ListSeatBlockReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.mobile.ListSeatBlockRes>}
 *     Promise that resolves to the response
 */
proto.event.mobile.SeatMapServicePromiseClient.prototype.listSeatBlock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.mobile.SeatMapService/ListSeatBlock',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_ListSeatBlock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.mobile.RetrieveSeatBlockReq,
 *   !proto.event.mobile.RetrieveSeatBlockRes>}
 */
const methodDescriptor_SeatMapService_RetrieveSeatBlock = new grpc.web.MethodDescriptor(
  '/event.mobile.SeatMapService/RetrieveSeatBlock',
  grpc.web.MethodType.UNARY,
  proto.event.mobile.RetrieveSeatBlockReq,
  proto.event.mobile.RetrieveSeatBlockRes,
  /**
   * @param {!proto.event.mobile.RetrieveSeatBlockReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.mobile.RetrieveSeatBlockRes.deserializeBinary
);


/**
 * @param {!proto.event.mobile.RetrieveSeatBlockReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.mobile.RetrieveSeatBlockRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.mobile.RetrieveSeatBlockRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.mobile.SeatMapServiceClient.prototype.retrieveSeatBlock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.mobile.SeatMapService/RetrieveSeatBlock',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_RetrieveSeatBlock,
      callback);
};


/**
 * @param {!proto.event.mobile.RetrieveSeatBlockReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.mobile.RetrieveSeatBlockRes>}
 *     Promise that resolves to the response
 */
proto.event.mobile.SeatMapServicePromiseClient.prototype.retrieveSeatBlock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.mobile.SeatMapService/RetrieveSeatBlock',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_RetrieveSeatBlock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.mobile.ListDecorationReq,
 *   !proto.event.mobile.ListSeatBlockRes>}
 */
const methodDescriptor_SeatMapService_ListDecoration = new grpc.web.MethodDescriptor(
  '/event.mobile.SeatMapService/ListDecoration',
  grpc.web.MethodType.UNARY,
  proto.event.mobile.ListDecorationReq,
  proto.event.mobile.ListSeatBlockRes,
  /**
   * @param {!proto.event.mobile.ListDecorationReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.mobile.ListSeatBlockRes.deserializeBinary
);


/**
 * @param {!proto.event.mobile.ListDecorationReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.mobile.ListSeatBlockRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.mobile.ListSeatBlockRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.mobile.SeatMapServiceClient.prototype.listDecoration =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.mobile.SeatMapService/ListDecoration',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_ListDecoration,
      callback);
};


/**
 * @param {!proto.event.mobile.ListDecorationReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.mobile.ListSeatBlockRes>}
 *     Promise that resolves to the response
 */
proto.event.mobile.SeatMapServicePromiseClient.prototype.listDecoration =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.mobile.SeatMapService/ListDecoration',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_ListDecoration);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.mobile.UpdateSeatStatusReq,
 *   !proto.event.mobile.UpdateSeatStatusRes>}
 */
const methodDescriptor_SeatMapService_UpdateSeatStatus = new grpc.web.MethodDescriptor(
  '/event.mobile.SeatMapService/UpdateSeatStatus',
  grpc.web.MethodType.UNARY,
  proto.event.mobile.UpdateSeatStatusReq,
  proto.event.mobile.UpdateSeatStatusRes,
  /**
   * @param {!proto.event.mobile.UpdateSeatStatusReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.mobile.UpdateSeatStatusRes.deserializeBinary
);


/**
 * @param {!proto.event.mobile.UpdateSeatStatusReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.mobile.UpdateSeatStatusRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.mobile.UpdateSeatStatusRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.mobile.SeatMapServiceClient.prototype.updateSeatStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.mobile.SeatMapService/UpdateSeatStatus',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_UpdateSeatStatus,
      callback);
};


/**
 * @param {!proto.event.mobile.UpdateSeatStatusReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.mobile.UpdateSeatStatusRes>}
 *     Promise that resolves to the response
 */
proto.event.mobile.SeatMapServicePromiseClient.prototype.updateSeatStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.mobile.SeatMapService/UpdateSeatStatus',
      request,
      metadata || {},
      methodDescriptor_SeatMapService_UpdateSeatStatus);
};


module.exports = proto.event.mobile;

