// source: event/web_partnership/event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var base_base_pb = require('../../base/base_pb.js');
goog.object.extend(proto, base_base_pb);
var event_enum_event_state_pb = require('../../event/enum/event_state_pb.js');
goog.object.extend(proto, event_enum_event_state_pb);
var event_web_partnership_event_location_pb = require('../../event/web_partnership/event_location_pb.js');
goog.object.extend(proto, event_web_partnership_event_location_pb);
var event_web_partnership_artist_pb = require('../../event/web_partnership/artist_pb.js');
goog.object.extend(proto, event_web_partnership_artist_pb);
var event_web_partnership_sponsor_pb = require('../../event/web_partnership/sponsor_pb.js');
goog.object.extend(proto, event_web_partnership_sponsor_pb);
goog.exportSymbol('proto.event.web_partnership.CreateEventReq', null, global);
goog.exportSymbol('proto.event.web_partnership.CreateEventRes', null, global);
goog.exportSymbol('proto.event.web_partnership.CreateEventScheduleRes', null, global);
goog.exportSymbol('proto.event.web_partnership.CreateScheduleReq', null, global);
goog.exportSymbol('proto.event.web_partnership.DeleteEventReq', null, global);
goog.exportSymbol('proto.event.web_partnership.DeleteEventScheduleReq', null, global);
goog.exportSymbol('proto.event.web_partnership.Event', null, global);
goog.exportSymbol('proto.event.web_partnership.EventBasicInfo', null, global);
goog.exportSymbol('proto.event.web_partnership.EventInfo', null, global);
goog.exportSymbol('proto.event.web_partnership.EventListInfo', null, global);
goog.exportSymbol('proto.event.web_partnership.EventScheduleBasicInfo', null, global);
goog.exportSymbol('proto.event.web_partnership.EventScheduleInfo', null, global);
goog.exportSymbol('proto.event.web_partnership.EventSeatMap', null, global);
goog.exportSymbol('proto.event.web_partnership.EventSponsor', null, global);
goog.exportSymbol('proto.event.web_partnership.EventSponsorFullInfo', null, global);
goog.exportSymbol('proto.event.web_partnership.EventStats', null, global);
goog.exportSymbol('proto.event.web_partnership.EventStatus', null, global);
goog.exportSymbol('proto.event.web_partnership.EventType', null, global);
goog.exportSymbol('proto.event.web_partnership.ListEventScheduleReq', null, global);
goog.exportSymbol('proto.event.web_partnership.ListEventScheduleRes', null, global);
goog.exportSymbol('proto.event.web_partnership.ListEventsReq', null, global);
goog.exportSymbol('proto.event.web_partnership.ListEventsRes', null, global);
goog.exportSymbol('proto.event.web_partnership.RetrieveEventReq', null, global);
goog.exportSymbol('proto.event.web_partnership.RetrieveEventRes', null, global);
goog.exportSymbol('proto.event.web_partnership.SearchEventStatus', null, global);
goog.exportSymbol('proto.event.web_partnership.UpdateEventReq', null, global);
goog.exportSymbol('proto.event.web_partnership.UpdateScheduleReq', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventBasicInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.EventBasicInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventBasicInfo.displayName = 'proto.event.web_partnership.EventBasicInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_partnership.EventInfo.repeatedFields_, null);
};
goog.inherits(proto.event.web_partnership.EventInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventInfo.displayName = 'proto.event.web_partnership.EventInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_partnership.Event.repeatedFields_, null);
};
goog.inherits(proto.event.web_partnership.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.Event.displayName = 'proto.event.web_partnership.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventListInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_partnership.EventListInfo.repeatedFields_, null);
};
goog.inherits(proto.event.web_partnership.EventListInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventListInfo.displayName = 'proto.event.web_partnership.EventListInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.EventStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventStats.displayName = 'proto.event.web_partnership.EventStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventSponsor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.EventSponsor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventSponsor.displayName = 'proto.event.web_partnership.EventSponsor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventSponsorFullInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.EventSponsorFullInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventSponsorFullInfo.displayName = 'proto.event.web_partnership.EventSponsorFullInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventSeatMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.EventSeatMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventSeatMap.displayName = 'proto.event.web_partnership.EventSeatMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventScheduleBasicInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_partnership.EventScheduleBasicInfo.repeatedFields_, null);
};
goog.inherits(proto.event.web_partnership.EventScheduleBasicInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventScheduleBasicInfo.displayName = 'proto.event.web_partnership.EventScheduleBasicInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.EventScheduleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_partnership.EventScheduleInfo.repeatedFields_, null);
};
goog.inherits(proto.event.web_partnership.EventScheduleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.EventScheduleInfo.displayName = 'proto.event.web_partnership.EventScheduleInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.CreateEventReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.CreateEventReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.CreateEventReq.displayName = 'proto.event.web_partnership.CreateEventReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.UpdateEventReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.UpdateEventReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.UpdateEventReq.displayName = 'proto.event.web_partnership.UpdateEventReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.RetrieveEventReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.RetrieveEventReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.RetrieveEventReq.displayName = 'proto.event.web_partnership.RetrieveEventReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.DeleteEventReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.DeleteEventReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.DeleteEventReq.displayName = 'proto.event.web_partnership.DeleteEventReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.CreateScheduleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.CreateScheduleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.CreateScheduleReq.displayName = 'proto.event.web_partnership.CreateScheduleReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.UpdateScheduleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.UpdateScheduleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.UpdateScheduleReq.displayName = 'proto.event.web_partnership.UpdateScheduleReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.DeleteEventScheduleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.DeleteEventScheduleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.DeleteEventScheduleReq.displayName = 'proto.event.web_partnership.DeleteEventScheduleReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.ListEventsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_partnership.ListEventsReq.repeatedFields_, null);
};
goog.inherits(proto.event.web_partnership.ListEventsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.ListEventsReq.displayName = 'proto.event.web_partnership.ListEventsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.ListEventScheduleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.ListEventScheduleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.ListEventScheduleReq.displayName = 'proto.event.web_partnership.ListEventScheduleReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.CreateEventRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.CreateEventRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.CreateEventRes.displayName = 'proto.event.web_partnership.CreateEventRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.RetrieveEventRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.RetrieveEventRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.RetrieveEventRes.displayName = 'proto.event.web_partnership.RetrieveEventRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.ListEventsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_partnership.ListEventsRes.repeatedFields_, null);
};
goog.inherits(proto.event.web_partnership.ListEventsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.ListEventsRes.displayName = 'proto.event.web_partnership.ListEventsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.CreateEventScheduleRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_partnership.CreateEventScheduleRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.CreateEventScheduleRes.displayName = 'proto.event.web_partnership.CreateEventScheduleRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_partnership.ListEventScheduleRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_partnership.ListEventScheduleRes.repeatedFields_, null);
};
goog.inherits(proto.event.web_partnership.ListEventScheduleRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_partnership.ListEventScheduleRes.displayName = 'proto.event.web_partnership.ListEventScheduleRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventBasicInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventBasicInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventBasicInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventBasicInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 3, 0),
    priceDescription: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventBasicInfo}
 */
proto.event.web_partnership.EventBasicInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventBasicInfo;
  return proto.event.web_partnership.EventBasicInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventBasicInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventBasicInfo}
 */
proto.event.web_partnership.EventBasicInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventBasicInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventBasicInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventBasicInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventBasicInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPriceDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event.web_partnership.EventBasicInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventBasicInfo} returns this
 */
proto.event.web_partnership.EventBasicInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.event.web_partnership.EventBasicInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventBasicInfo} returns this
 */
proto.event.web_partnership.EventBasicInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 duration = 3;
 * @return {number}
 */
proto.event.web_partnership.EventBasicInfo.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventBasicInfo} returns this
 */
proto.event.web_partnership.EventBasicInfo.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string price_description = 4;
 * @return {string}
 */
proto.event.web_partnership.EventBasicInfo.prototype.getPriceDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventBasicInfo} returns this
 */
proto.event.web_partnership.EventBasicInfo.prototype.setPriceDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.event.web_partnership.EventBasicInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventBasicInfo} returns this
 */
proto.event.web_partnership.EventBasicInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_partnership.EventInfo.repeatedFields_ = [9,10,11,14,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 3, 0),
    priceDescription: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    location: jspb.Message.getFieldWithDefault(msg, 6, ""),
    bookingStartTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    bookingEndTime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    hashtagsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    eventImageUrlsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    programsImageUrlsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    isHot: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isPublic: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    artistsList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    sponsorsList: jspb.Message.toObjectList(msg.getSponsorsList(),
    proto.event.web_partnership.EventSponsor.toObject, includeInstance),
    state: jspb.Message.getFieldWithDefault(msg, 16, 0),
    stateDescription: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventInfo}
 */
proto.event.web_partnership.EventInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventInfo;
  return proto.event.web_partnership.EventInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventInfo}
 */
proto.event.web_partnership.EventInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingStartTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingEndTime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addHashtags(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addEventImageUrls(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addProgramsImageUrls(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHot(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addArtists(value);
      break;
    case 15:
      var value = new proto.event.web_partnership.EventSponsor;
      reader.readMessage(value,proto.event.web_partnership.EventSponsor.deserializeBinaryFromReader);
      msg.addSponsors(value);
      break;
    case 16:
      var value = /** @type {!proto.event.enum.EventState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPriceDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBookingStartTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getBookingEndTime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getHashtagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getEventImageUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getProgramsImageUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getIsHot();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getArtistsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getSponsorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.event.web_partnership.EventSponsor.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getStateDescription();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event.web_partnership.EventInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.event.web_partnership.EventInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 duration = 3;
 * @return {number}
 */
proto.event.web_partnership.EventInfo.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string price_description = 4;
 * @return {string}
 */
proto.event.web_partnership.EventInfo.prototype.getPriceDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setPriceDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.event.web_partnership.EventInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string location = 6;
 * @return {string}
 */
proto.event.web_partnership.EventInfo.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 booking_start_time = 7;
 * @return {number}
 */
proto.event.web_partnership.EventInfo.prototype.getBookingStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setBookingStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 booking_end_time = 8;
 * @return {number}
 */
proto.event.web_partnership.EventInfo.prototype.getBookingEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setBookingEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated string hashtags = 9;
 * @return {!Array<string>}
 */
proto.event.web_partnership.EventInfo.prototype.getHashtagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setHashtagsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.addHashtags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.clearHashtagsList = function() {
  return this.setHashtagsList([]);
};


/**
 * repeated string event_image_urls = 10;
 * @return {!Array<string>}
 */
proto.event.web_partnership.EventInfo.prototype.getEventImageUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setEventImageUrlsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.addEventImageUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.clearEventImageUrlsList = function() {
  return this.setEventImageUrlsList([]);
};


/**
 * repeated string programs_image_urls = 11;
 * @return {!Array<string>}
 */
proto.event.web_partnership.EventInfo.prototype.getProgramsImageUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setProgramsImageUrlsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.addProgramsImageUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.clearProgramsImageUrlsList = function() {
  return this.setProgramsImageUrlsList([]);
};


/**
 * optional bool is_hot = 12;
 * @return {boolean}
 */
proto.event.web_partnership.EventInfo.prototype.getIsHot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setIsHot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool is_public = 13;
 * @return {boolean}
 */
proto.event.web_partnership.EventInfo.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * repeated string artists = 14;
 * @return {!Array<string>}
 */
proto.event.web_partnership.EventInfo.prototype.getArtistsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setArtistsList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.addArtists = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.clearArtistsList = function() {
  return this.setArtistsList([]);
};


/**
 * repeated EventSponsor sponsors = 15;
 * @return {!Array<!proto.event.web_partnership.EventSponsor>}
 */
proto.event.web_partnership.EventInfo.prototype.getSponsorsList = function() {
  return /** @type{!Array<!proto.event.web_partnership.EventSponsor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event.web_partnership.EventSponsor, 15));
};


/**
 * @param {!Array<!proto.event.web_partnership.EventSponsor>} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
*/
proto.event.web_partnership.EventInfo.prototype.setSponsorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.event.web_partnership.EventSponsor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventSponsor}
 */
proto.event.web_partnership.EventInfo.prototype.addSponsors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.event.web_partnership.EventSponsor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.clearSponsorsList = function() {
  return this.setSponsorsList([]);
};


/**
 * optional event.enum.EventState state = 16;
 * @return {!proto.event.enum.EventState}
 */
proto.event.web_partnership.EventInfo.prototype.getState = function() {
  return /** @type {!proto.event.enum.EventState} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.event.enum.EventState} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional string state_description = 17;
 * @return {string}
 */
proto.event.web_partnership.EventInfo.prototype.getStateDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventInfo} returns this
 */
proto.event.web_partnership.EventInfo.prototype.setStateDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_partnership.Event.repeatedFields_ = [10,11,12,15,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 4, 0),
    priceDescription: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    bookingStartTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    bookingEndTime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    timezone: jspb.Message.getFieldWithDefault(msg, 9, ""),
    hashtagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    eventImageUrlsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    programsImageUrlsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    isHot: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isPublic: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    artistsList: jspb.Message.toObjectList(msg.getArtistsList(),
    event_web_partnership_artist_pb.ArtistInfo.toObject, includeInstance),
    sponsorsList: jspb.Message.toObjectList(msg.getSponsorsList(),
    proto.event.web_partnership.EventSponsorFullInfo.toObject, includeInstance),
    createdAt: jspb.Message.getFieldWithDefault(msg, 17, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 18, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 19, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 20, ""),
    location: (f = msg.getLocation()) && event_web_partnership_event_location_pb.EventLocationInfo.toObject(includeInstance, f),
    stats: (f = msg.getStats()) && proto.event.web_partnership.EventStats.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 23, 0),
    stateDescription: jspb.Message.getFieldWithDefault(msg, 24, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.Event}
 */
proto.event.web_partnership.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.Event;
  return proto.event.web_partnership.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.Event}
 */
proto.event.web_partnership.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingStartTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingEndTime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addHashtags(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addEventImageUrls(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addProgramsImageUrls(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHot(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    case 15:
      var value = new event_web_partnership_artist_pb.ArtistInfo;
      reader.readMessage(value,event_web_partnership_artist_pb.ArtistInfo.deserializeBinaryFromReader);
      msg.addArtists(value);
      break;
    case 16:
      var value = new proto.event.web_partnership.EventSponsorFullInfo;
      reader.readMessage(value,proto.event.web_partnership.EventSponsorFullInfo.deserializeBinaryFromReader);
      msg.addSponsors(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 21:
      var value = new event_web_partnership_event_location_pb.EventLocationInfo;
      reader.readMessage(value,event_web_partnership_event_location_pb.EventLocationInfo.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 22:
      var value = new proto.event.web_partnership.EventStats;
      reader.readMessage(value,proto.event.web_partnership.EventStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    case 23:
      var value = /** @type {!proto.event.enum.EventState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPriceDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBookingStartTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getBookingEndTime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getHashtagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getEventImageUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getProgramsImageUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getIsHot();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getArtistsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      event_web_partnership_artist_pb.ArtistInfo.serializeBinaryToWriter
    );
  }
  f = message.getSponsorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.event.web_partnership.EventSponsorFullInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      event_web_partnership_event_location_pb.EventLocationInfo.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.event.web_partnership.EventStats.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      23,
      f
    );
  }
  f = message.getStateDescription();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 duration = 4;
 * @return {number}
 */
proto.event.web_partnership.Event.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string price_description = 5;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getPriceDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setPriceDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 booking_start_time = 7;
 * @return {number}
 */
proto.event.web_partnership.Event.prototype.getBookingStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setBookingStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 booking_end_time = 8;
 * @return {number}
 */
proto.event.web_partnership.Event.prototype.getBookingEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setBookingEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string timezone = 9;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string hashtags = 10;
 * @return {!Array<string>}
 */
proto.event.web_partnership.Event.prototype.getHashtagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setHashtagsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.addHashtags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.clearHashtagsList = function() {
  return this.setHashtagsList([]);
};


/**
 * repeated string event_image_urls = 11;
 * @return {!Array<string>}
 */
proto.event.web_partnership.Event.prototype.getEventImageUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setEventImageUrlsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.addEventImageUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.clearEventImageUrlsList = function() {
  return this.setEventImageUrlsList([]);
};


/**
 * repeated string programs_image_urls = 12;
 * @return {!Array<string>}
 */
proto.event.web_partnership.Event.prototype.getProgramsImageUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setProgramsImageUrlsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.addProgramsImageUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.clearProgramsImageUrlsList = function() {
  return this.setProgramsImageUrlsList([]);
};


/**
 * optional bool is_hot = 13;
 * @return {boolean}
 */
proto.event.web_partnership.Event.prototype.getIsHot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setIsHot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool is_public = 14;
 * @return {boolean}
 */
proto.event.web_partnership.Event.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * repeated ArtistInfo artists = 15;
 * @return {!Array<!proto.event.web_partnership.ArtistInfo>}
 */
proto.event.web_partnership.Event.prototype.getArtistsList = function() {
  return /** @type{!Array<!proto.event.web_partnership.ArtistInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, event_web_partnership_artist_pb.ArtistInfo, 15));
};


/**
 * @param {!Array<!proto.event.web_partnership.ArtistInfo>} value
 * @return {!proto.event.web_partnership.Event} returns this
*/
proto.event.web_partnership.Event.prototype.setArtistsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.event.web_partnership.ArtistInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.ArtistInfo}
 */
proto.event.web_partnership.Event.prototype.addArtists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.event.web_partnership.ArtistInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.clearArtistsList = function() {
  return this.setArtistsList([]);
};


/**
 * repeated EventSponsorFullInfo sponsors = 16;
 * @return {!Array<!proto.event.web_partnership.EventSponsorFullInfo>}
 */
proto.event.web_partnership.Event.prototype.getSponsorsList = function() {
  return /** @type{!Array<!proto.event.web_partnership.EventSponsorFullInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event.web_partnership.EventSponsorFullInfo, 16));
};


/**
 * @param {!Array<!proto.event.web_partnership.EventSponsorFullInfo>} value
 * @return {!proto.event.web_partnership.Event} returns this
*/
proto.event.web_partnership.Event.prototype.setSponsorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.event.web_partnership.EventSponsorFullInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventSponsorFullInfo}
 */
proto.event.web_partnership.Event.prototype.addSponsors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.event.web_partnership.EventSponsorFullInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.clearSponsorsList = function() {
  return this.setSponsorsList([]);
};


/**
 * optional int64 created_at = 17;
 * @return {number}
 */
proto.event.web_partnership.Event.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int64 updated_at = 18;
 * @return {number}
 */
proto.event.web_partnership.Event.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string created_by = 19;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string updated_by = 20;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional EventLocationInfo location = 21;
 * @return {?proto.event.web_partnership.EventLocationInfo}
 */
proto.event.web_partnership.Event.prototype.getLocation = function() {
  return /** @type{?proto.event.web_partnership.EventLocationInfo} */ (
    jspb.Message.getWrapperField(this, event_web_partnership_event_location_pb.EventLocationInfo, 21));
};


/**
 * @param {?proto.event.web_partnership.EventLocationInfo|undefined} value
 * @return {!proto.event.web_partnership.Event} returns this
*/
proto.event.web_partnership.Event.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.Event.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional EventStats stats = 22;
 * @return {?proto.event.web_partnership.EventStats}
 */
proto.event.web_partnership.Event.prototype.getStats = function() {
  return /** @type{?proto.event.web_partnership.EventStats} */ (
    jspb.Message.getWrapperField(this, proto.event.web_partnership.EventStats, 22));
};


/**
 * @param {?proto.event.web_partnership.EventStats|undefined} value
 * @return {!proto.event.web_partnership.Event} returns this
*/
proto.event.web_partnership.Event.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.Event.prototype.hasStats = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional event.enum.EventState state = 23;
 * @return {!proto.event.enum.EventState}
 */
proto.event.web_partnership.Event.prototype.getState = function() {
  return /** @type {!proto.event.enum.EventState} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {!proto.event.enum.EventState} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 23, value);
};


/**
 * optional string state_description = 24;
 * @return {string}
 */
proto.event.web_partnership.Event.prototype.getStateDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.Event} returns this
 */
proto.event.web_partnership.Event.prototype.setStateDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_partnership.EventListInfo.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventListInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventListInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventListInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventListInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 4, 0),
    priceDescription: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    location: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bookingStartTime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    bookingEndTime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    hashtagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    eventImageUrlsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    isHot: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isPublic: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    stats: (f = msg.getStats()) && proto.event.web_partnership.EventStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventListInfo}
 */
proto.event.web_partnership.EventListInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventListInfo;
  return proto.event.web_partnership.EventListInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventListInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventListInfo}
 */
proto.event.web_partnership.EventListInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingStartTime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookingEndTime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addHashtags(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addEventImageUrls(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHot(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    case 14:
      var value = new proto.event.web_partnership.EventStats;
      reader.readMessage(value,proto.event.web_partnership.EventStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventListInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventListInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventListInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventListInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPriceDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBookingStartTime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getBookingEndTime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getHashtagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getEventImageUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getIsHot();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.event.web_partnership.EventStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.EventListInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.event.web_partnership.EventListInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.event.web_partnership.EventListInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 duration = 4;
 * @return {number}
 */
proto.event.web_partnership.EventListInfo.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string price_description = 5;
 * @return {string}
 */
proto.event.web_partnership.EventListInfo.prototype.getPriceDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setPriceDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.event.web_partnership.EventListInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string location = 7;
 * @return {string}
 */
proto.event.web_partnership.EventListInfo.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 booking_start_time = 8;
 * @return {number}
 */
proto.event.web_partnership.EventListInfo.prototype.getBookingStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setBookingStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 booking_end_time = 9;
 * @return {number}
 */
proto.event.web_partnership.EventListInfo.prototype.getBookingEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setBookingEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string hashtags = 10;
 * @return {!Array<string>}
 */
proto.event.web_partnership.EventListInfo.prototype.getHashtagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setHashtagsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.addHashtags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.clearHashtagsList = function() {
  return this.setHashtagsList([]);
};


/**
 * repeated string event_image_urls = 11;
 * @return {!Array<string>}
 */
proto.event.web_partnership.EventListInfo.prototype.getEventImageUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setEventImageUrlsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.addEventImageUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.clearEventImageUrlsList = function() {
  return this.setEventImageUrlsList([]);
};


/**
 * optional bool is_hot = 12;
 * @return {boolean}
 */
proto.event.web_partnership.EventListInfo.prototype.getIsHot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setIsHot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool is_public = 13;
 * @return {boolean}
 */
proto.event.web_partnership.EventListInfo.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional EventStats stats = 14;
 * @return {?proto.event.web_partnership.EventStats}
 */
proto.event.web_partnership.EventListInfo.prototype.getStats = function() {
  return /** @type{?proto.event.web_partnership.EventStats} */ (
    jspb.Message.getWrapperField(this, proto.event.web_partnership.EventStats, 14));
};


/**
 * @param {?proto.event.web_partnership.EventStats|undefined} value
 * @return {!proto.event.web_partnership.EventListInfo} returns this
*/
proto.event.web_partnership.EventListInfo.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.EventListInfo} returns this
 */
proto.event.web_partnership.EventListInfo.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.EventListInfo.prototype.hasStats = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventStats.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isBookingAvailable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isSoldOut: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    numberOfSeat: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventStats}
 */
proto.event.web_partnership.EventStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventStats;
  return proto.event.web_partnership.EventStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventStats}
 */
proto.event.web_partnership.EventStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {!proto.event.web_partnership.EventStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBookingAvailable(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSoldOut(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberOfSeat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getIsBookingAvailable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsSoldOut();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getNumberOfSeat();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int64 start_time = 1;
 * @return {number}
 */
proto.event.web_partnership.EventStats.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventStats} returns this
 */
proto.event.web_partnership.EventStats.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 end_time = 2;
 * @return {number}
 */
proto.event.web_partnership.EventStats.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventStats} returns this
 */
proto.event.web_partnership.EventStats.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional EventStatus status = 3;
 * @return {!proto.event.web_partnership.EventStatus}
 */
proto.event.web_partnership.EventStats.prototype.getStatus = function() {
  return /** @type {!proto.event.web_partnership.EventStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.event.web_partnership.EventStatus} value
 * @return {!proto.event.web_partnership.EventStats} returns this
 */
proto.event.web_partnership.EventStats.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool is_booking_available = 4;
 * @return {boolean}
 */
proto.event.web_partnership.EventStats.prototype.getIsBookingAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventStats} returns this
 */
proto.event.web_partnership.EventStats.prototype.setIsBookingAvailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool is_sold_out = 5;
 * @return {boolean}
 */
proto.event.web_partnership.EventStats.prototype.getIsSoldOut = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventStats} returns this
 */
proto.event.web_partnership.EventStats.prototype.setIsSoldOut = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 number_of_seat = 6;
 * @return {number}
 */
proto.event.web_partnership.EventStats.prototype.getNumberOfSeat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventStats} returns this
 */
proto.event.web_partnership.EventStats.prototype.setNumberOfSeat = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventSponsor.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventSponsor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventSponsor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventSponsor.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sponsorId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventSponsor}
 */
proto.event.web_partnership.EventSponsor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventSponsor;
  return proto.event.web_partnership.EventSponsor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventSponsor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventSponsor}
 */
proto.event.web_partnership.EventSponsor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRank(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSponsorId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventSponsor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventSponsor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventSponsor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventSponsor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRank();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSponsorId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string rank = 1;
 * @return {string}
 */
proto.event.web_partnership.EventSponsor.prototype.getRank = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventSponsor} returns this
 */
proto.event.web_partnership.EventSponsor.prototype.setRank = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sponsor_id = 2;
 * @return {string}
 */
proto.event.web_partnership.EventSponsor.prototype.getSponsorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventSponsor} returns this
 */
proto.event.web_partnership.EventSponsor.prototype.setSponsorId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventSponsorFullInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventSponsorFullInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventSponsorFullInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventSponsorFullInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sponsor: (f = msg.getSponsor()) && event_web_partnership_sponsor_pb.SponsorInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventSponsorFullInfo}
 */
proto.event.web_partnership.EventSponsorFullInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventSponsorFullInfo;
  return proto.event.web_partnership.EventSponsorFullInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventSponsorFullInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventSponsorFullInfo}
 */
proto.event.web_partnership.EventSponsorFullInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRank(value);
      break;
    case 2:
      var value = new event_web_partnership_sponsor_pb.SponsorInfo;
      reader.readMessage(value,event_web_partnership_sponsor_pb.SponsorInfo.deserializeBinaryFromReader);
      msg.setSponsor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventSponsorFullInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventSponsorFullInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventSponsorFullInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventSponsorFullInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRank();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSponsor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      event_web_partnership_sponsor_pb.SponsorInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string rank = 1;
 * @return {string}
 */
proto.event.web_partnership.EventSponsorFullInfo.prototype.getRank = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventSponsorFullInfo} returns this
 */
proto.event.web_partnership.EventSponsorFullInfo.prototype.setRank = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SponsorInfo sponsor = 2;
 * @return {?proto.event.web_partnership.SponsorInfo}
 */
proto.event.web_partnership.EventSponsorFullInfo.prototype.getSponsor = function() {
  return /** @type{?proto.event.web_partnership.SponsorInfo} */ (
    jspb.Message.getWrapperField(this, event_web_partnership_sponsor_pb.SponsorInfo, 2));
};


/**
 * @param {?proto.event.web_partnership.SponsorInfo|undefined} value
 * @return {!proto.event.web_partnership.EventSponsorFullInfo} returns this
*/
proto.event.web_partnership.EventSponsorFullInfo.prototype.setSponsor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.EventSponsorFullInfo} returns this
 */
proto.event.web_partnership.EventSponsorFullInfo.prototype.clearSponsor = function() {
  return this.setSponsor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.EventSponsorFullInfo.prototype.hasSponsor = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventSeatMap.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventSeatMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventSeatMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventSeatMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mapPicture: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventSeatMap}
 */
proto.event.web_partnership.EventSeatMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventSeatMap;
  return proto.event.web_partnership.EventSeatMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventSeatMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventSeatMap}
 */
proto.event.web_partnership.EventSeatMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapPicture(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventSeatMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventSeatMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventSeatMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventSeatMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMapPicture();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.EventSeatMap.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventSeatMap} returns this
 */
proto.event.web_partnership.EventSeatMap.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.event.web_partnership.EventSeatMap.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventSeatMap} returns this
 */
proto.event.web_partnership.EventSeatMap.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string map_picture = 3;
 * @return {string}
 */
proto.event.web_partnership.EventSeatMap.prototype.getMapPicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventSeatMap} returns this
 */
proto.event.web_partnership.EventSeatMap.prototype.setMapPicture = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.event.web_partnership.EventSeatMap.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventSeatMap} returns this
 */
proto.event.web_partnership.EventSeatMap.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_partnership.EventScheduleBasicInfo.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventScheduleBasicInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventScheduleBasicInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventScheduleBasicInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    checkInStartTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    checkInEndTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    isPublic: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    eventType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    seatMapsIdsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo}
 */
proto.event.web_partnership.EventScheduleBasicInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventScheduleBasicInfo;
  return proto.event.web_partnership.EventScheduleBasicInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventScheduleBasicInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo}
 */
proto.event.web_partnership.EventScheduleBasicInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCheckInStartTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCheckInEndTime(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    case 8:
      var value = /** @type {!proto.event.web_partnership.EventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addSeatMapsIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventScheduleBasicInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventScheduleBasicInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventScheduleBasicInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCheckInStartTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCheckInEndTime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getSeatMapsIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
};


/**
 * optional string event_id = 1;
 * @return {string}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 start_time = 3;
 * @return {number}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 end_time = 4;
 * @return {number}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 check_in_start_time = 5;
 * @return {number}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getCheckInStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setCheckInStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 check_in_end_time = 6;
 * @return {number}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getCheckInEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setCheckInEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool is_public = 7;
 * @return {boolean}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional EventType event_type = 8;
 * @return {!proto.event.web_partnership.EventType}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getEventType = function() {
  return /** @type {!proto.event.web_partnership.EventType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.event.web_partnership.EventType} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setEventType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * repeated string seat_maps_ids = 9;
 * @return {!Array<string>}
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.getSeatMapsIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.setSeatMapsIdsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.addSeatMapsIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventScheduleBasicInfo} returns this
 */
proto.event.web_partnership.EventScheduleBasicInfo.prototype.clearSeatMapsIdsList = function() {
  return this.setSeatMapsIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_partnership.EventScheduleInfo.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.EventScheduleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.EventScheduleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventScheduleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    checkInStartTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    checkInEndTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    isPublic: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    eventType: jspb.Message.getFieldWithDefault(msg, 9, 0),
    seatMapsList: jspb.Message.toObjectList(msg.getSeatMapsList(),
    proto.event.web_partnership.EventSeatMap.toObject, includeInstance),
    isSoldOut: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.EventScheduleInfo}
 */
proto.event.web_partnership.EventScheduleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.EventScheduleInfo;
  return proto.event.web_partnership.EventScheduleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.EventScheduleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.EventScheduleInfo}
 */
proto.event.web_partnership.EventScheduleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCheckInStartTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCheckInEndTime(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    case 9:
      var value = /** @type {!proto.event.web_partnership.EventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 10:
      var value = new proto.event.web_partnership.EventSeatMap;
      reader.readMessage(value,proto.event.web_partnership.EventSeatMap.deserializeBinaryFromReader);
      msg.addSeatMaps(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSoldOut(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.EventScheduleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.EventScheduleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.EventScheduleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCheckInStartTime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCheckInEndTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getSeatMapsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.event.web_partnership.EventSeatMap.serializeBinaryToWriter
    );
  }
  f = message.getIsSoldOut();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string event_id = 2;
 * @return {string}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 start_time = 4;
 * @return {number}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 end_time = 5;
 * @return {number}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 check_in_start_time = 6;
 * @return {number}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getCheckInStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setCheckInStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 check_in_end_time = 7;
 * @return {number}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getCheckInEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setCheckInEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool is_public = 8;
 * @return {boolean}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional EventType event_type = 9;
 * @return {!proto.event.web_partnership.EventType}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getEventType = function() {
  return /** @type {!proto.event.web_partnership.EventType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.event.web_partnership.EventType} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setEventType = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * repeated EventSeatMap seat_maps = 10;
 * @return {!Array<!proto.event.web_partnership.EventSeatMap>}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getSeatMapsList = function() {
  return /** @type{!Array<!proto.event.web_partnership.EventSeatMap>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event.web_partnership.EventSeatMap, 10));
};


/**
 * @param {!Array<!proto.event.web_partnership.EventSeatMap>} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
*/
proto.event.web_partnership.EventScheduleInfo.prototype.setSeatMapsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.event.web_partnership.EventSeatMap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventSeatMap}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.addSeatMaps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.event.web_partnership.EventSeatMap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.clearSeatMapsList = function() {
  return this.setSeatMapsList([]);
};


/**
 * optional bool is_sold_out = 11;
 * @return {boolean}
 */
proto.event.web_partnership.EventScheduleInfo.prototype.getIsSoldOut = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event.web_partnership.EventScheduleInfo} returns this
 */
proto.event.web_partnership.EventScheduleInfo.prototype.setIsSoldOut = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.CreateEventReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.CreateEventReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.CreateEventReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.CreateEventReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.event.web_partnership.EventBasicInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.CreateEventReq}
 */
proto.event.web_partnership.CreateEventReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.CreateEventReq;
  return proto.event.web_partnership.CreateEventReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.CreateEventReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.CreateEventReq}
 */
proto.event.web_partnership.CreateEventReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event.web_partnership.EventBasicInfo;
      reader.readMessage(value,proto.event.web_partnership.EventBasicInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.CreateEventReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.CreateEventReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.CreateEventReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.CreateEventReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event.web_partnership.EventBasicInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventBasicInfo info = 1;
 * @return {?proto.event.web_partnership.EventBasicInfo}
 */
proto.event.web_partnership.CreateEventReq.prototype.getInfo = function() {
  return /** @type{?proto.event.web_partnership.EventBasicInfo} */ (
    jspb.Message.getWrapperField(this, proto.event.web_partnership.EventBasicInfo, 1));
};


/**
 * @param {?proto.event.web_partnership.EventBasicInfo|undefined} value
 * @return {!proto.event.web_partnership.CreateEventReq} returns this
*/
proto.event.web_partnership.CreateEventReq.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.CreateEventReq} returns this
 */
proto.event.web_partnership.CreateEventReq.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.CreateEventReq.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.UpdateEventReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.UpdateEventReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.UpdateEventReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.UpdateEventReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && proto.event.web_partnership.EventInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.UpdateEventReq}
 */
proto.event.web_partnership.UpdateEventReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.UpdateEventReq;
  return proto.event.web_partnership.UpdateEventReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.UpdateEventReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.UpdateEventReq}
 */
proto.event.web_partnership.UpdateEventReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.event.web_partnership.EventInfo;
      reader.readMessage(value,proto.event.web_partnership.EventInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.UpdateEventReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.UpdateEventReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.UpdateEventReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.UpdateEventReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event.web_partnership.EventInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.UpdateEventReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.UpdateEventReq} returns this
 */
proto.event.web_partnership.UpdateEventReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EventInfo info = 2;
 * @return {?proto.event.web_partnership.EventInfo}
 */
proto.event.web_partnership.UpdateEventReq.prototype.getInfo = function() {
  return /** @type{?proto.event.web_partnership.EventInfo} */ (
    jspb.Message.getWrapperField(this, proto.event.web_partnership.EventInfo, 2));
};


/**
 * @param {?proto.event.web_partnership.EventInfo|undefined} value
 * @return {!proto.event.web_partnership.UpdateEventReq} returns this
*/
proto.event.web_partnership.UpdateEventReq.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.UpdateEventReq} returns this
 */
proto.event.web_partnership.UpdateEventReq.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.UpdateEventReq.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.RetrieveEventReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.RetrieveEventReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.RetrieveEventReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.RetrieveEventReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.RetrieveEventReq}
 */
proto.event.web_partnership.RetrieveEventReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.RetrieveEventReq;
  return proto.event.web_partnership.RetrieveEventReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.RetrieveEventReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.RetrieveEventReq}
 */
proto.event.web_partnership.RetrieveEventReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.RetrieveEventReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.RetrieveEventReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.RetrieveEventReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.RetrieveEventReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.RetrieveEventReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.RetrieveEventReq} returns this
 */
proto.event.web_partnership.RetrieveEventReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.DeleteEventReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.DeleteEventReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.DeleteEventReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.DeleteEventReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.DeleteEventReq}
 */
proto.event.web_partnership.DeleteEventReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.DeleteEventReq;
  return proto.event.web_partnership.DeleteEventReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.DeleteEventReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.DeleteEventReq}
 */
proto.event.web_partnership.DeleteEventReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.DeleteEventReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.DeleteEventReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.DeleteEventReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.DeleteEventReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.DeleteEventReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.DeleteEventReq} returns this
 */
proto.event.web_partnership.DeleteEventReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.CreateScheduleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.CreateScheduleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.CreateScheduleReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.CreateScheduleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.event.web_partnership.EventScheduleBasicInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.CreateScheduleReq}
 */
proto.event.web_partnership.CreateScheduleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.CreateScheduleReq;
  return proto.event.web_partnership.CreateScheduleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.CreateScheduleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.CreateScheduleReq}
 */
proto.event.web_partnership.CreateScheduleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event.web_partnership.EventScheduleBasicInfo;
      reader.readMessage(value,proto.event.web_partnership.EventScheduleBasicInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.CreateScheduleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.CreateScheduleReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.CreateScheduleReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.CreateScheduleReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event.web_partnership.EventScheduleBasicInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventScheduleBasicInfo info = 1;
 * @return {?proto.event.web_partnership.EventScheduleBasicInfo}
 */
proto.event.web_partnership.CreateScheduleReq.prototype.getInfo = function() {
  return /** @type{?proto.event.web_partnership.EventScheduleBasicInfo} */ (
    jspb.Message.getWrapperField(this, proto.event.web_partnership.EventScheduleBasicInfo, 1));
};


/**
 * @param {?proto.event.web_partnership.EventScheduleBasicInfo|undefined} value
 * @return {!proto.event.web_partnership.CreateScheduleReq} returns this
*/
proto.event.web_partnership.CreateScheduleReq.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.CreateScheduleReq} returns this
 */
proto.event.web_partnership.CreateScheduleReq.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.CreateScheduleReq.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.UpdateScheduleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.UpdateScheduleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.UpdateScheduleReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.UpdateScheduleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && proto.event.web_partnership.EventScheduleBasicInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.UpdateScheduleReq}
 */
proto.event.web_partnership.UpdateScheduleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.UpdateScheduleReq;
  return proto.event.web_partnership.UpdateScheduleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.UpdateScheduleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.UpdateScheduleReq}
 */
proto.event.web_partnership.UpdateScheduleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.event.web_partnership.EventScheduleBasicInfo;
      reader.readMessage(value,proto.event.web_partnership.EventScheduleBasicInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.UpdateScheduleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.UpdateScheduleReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.UpdateScheduleReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.UpdateScheduleReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event.web_partnership.EventScheduleBasicInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.UpdateScheduleReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.UpdateScheduleReq} returns this
 */
proto.event.web_partnership.UpdateScheduleReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EventScheduleBasicInfo info = 2;
 * @return {?proto.event.web_partnership.EventScheduleBasicInfo}
 */
proto.event.web_partnership.UpdateScheduleReq.prototype.getInfo = function() {
  return /** @type{?proto.event.web_partnership.EventScheduleBasicInfo} */ (
    jspb.Message.getWrapperField(this, proto.event.web_partnership.EventScheduleBasicInfo, 2));
};


/**
 * @param {?proto.event.web_partnership.EventScheduleBasicInfo|undefined} value
 * @return {!proto.event.web_partnership.UpdateScheduleReq} returns this
*/
proto.event.web_partnership.UpdateScheduleReq.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.UpdateScheduleReq} returns this
 */
proto.event.web_partnership.UpdateScheduleReq.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.UpdateScheduleReq.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.DeleteEventScheduleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.DeleteEventScheduleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.DeleteEventScheduleReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.DeleteEventScheduleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.DeleteEventScheduleReq}
 */
proto.event.web_partnership.DeleteEventScheduleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.DeleteEventScheduleReq;
  return proto.event.web_partnership.DeleteEventScheduleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.DeleteEventScheduleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.DeleteEventScheduleReq}
 */
proto.event.web_partnership.DeleteEventScheduleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.DeleteEventScheduleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.DeleteEventScheduleReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.DeleteEventScheduleReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.DeleteEventScheduleReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.DeleteEventScheduleReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.DeleteEventScheduleReq} returns this
 */
proto.event.web_partnership.DeleteEventScheduleReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_partnership.ListEventsReq.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.ListEventsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.ListEventsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.ListEventsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.ListEventsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchText: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isPublic: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pagination: (f = msg.getPagination()) && base_base_pb.PaginationReq.toObject(includeInstance, f),
    orderByList: jspb.Message.toObjectList(msg.getOrderByList(),
    base_base_pb.OrderByItem.toObject, includeInstance),
    statusesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    orStatusesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.ListEventsReq}
 */
proto.event.web_partnership.ListEventsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.ListEventsReq;
  return proto.event.web_partnership.ListEventsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.ListEventsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.ListEventsReq}
 */
proto.event.web_partnership.ListEventsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchText(value);
      break;
    case 2:
      var value = /** @type {!proto.event.web_partnership.SearchEventStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsPublic(value);
      break;
    case 4:
      var value = new base_base_pb.PaginationReq;
      reader.readMessage(value,base_base_pb.PaginationReq.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 5:
      var value = new base_base_pb.OrderByItem;
      reader.readMessage(value,base_base_pb.OrderByItem.deserializeBinaryFromReader);
      msg.addOrderBy(value);
      break;
    case 6:
      var values = /** @type {!Array<!proto.event.web_partnership.SearchEventStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatuses(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<!proto.event.web_partnership.SearchEventStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addOrStatuses(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.ListEventsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.ListEventsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.ListEventsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.ListEventsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIsPublic();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_base_pb.PaginationReq.serializeBinaryToWriter
    );
  }
  f = message.getOrderByList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      base_base_pb.OrderByItem.serializeBinaryToWriter
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getOrStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      7,
      f
    );
  }
};


/**
 * optional string search_text = 1;
 * @return {string}
 */
proto.event.web_partnership.ListEventsReq.prototype.getSearchText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.setSearchText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SearchEventStatus status = 2;
 * @return {!proto.event.web_partnership.SearchEventStatus}
 */
proto.event.web_partnership.ListEventsReq.prototype.getStatus = function() {
  return /** @type {!proto.event.web_partnership.SearchEventStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.event.web_partnership.SearchEventStatus} value
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string is_public = 3;
 * @return {string}
 */
proto.event.web_partnership.ListEventsReq.prototype.getIsPublic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional base.PaginationReq pagination = 4;
 * @return {?proto.base.PaginationReq}
 */
proto.event.web_partnership.ListEventsReq.prototype.getPagination = function() {
  return /** @type{?proto.base.PaginationReq} */ (
    jspb.Message.getWrapperField(this, base_base_pb.PaginationReq, 4));
};


/**
 * @param {?proto.base.PaginationReq|undefined} value
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
*/
proto.event.web_partnership.ListEventsReq.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.ListEventsReq.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated base.OrderByItem order_by = 5;
 * @return {!Array<!proto.base.OrderByItem>}
 */
proto.event.web_partnership.ListEventsReq.prototype.getOrderByList = function() {
  return /** @type{!Array<!proto.base.OrderByItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, base_base_pb.OrderByItem, 5));
};


/**
 * @param {!Array<!proto.base.OrderByItem>} value
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
*/
proto.event.web_partnership.ListEventsReq.prototype.setOrderByList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.base.OrderByItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.base.OrderByItem}
 */
proto.event.web_partnership.ListEventsReq.prototype.addOrderBy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.base.OrderByItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.clearOrderByList = function() {
  return this.setOrderByList([]);
};


/**
 * repeated SearchEventStatus statuses = 6;
 * @return {!Array<!proto.event.web_partnership.SearchEventStatus>}
 */
proto.event.web_partnership.ListEventsReq.prototype.getStatusesList = function() {
  return /** @type {!Array<!proto.event.web_partnership.SearchEventStatus>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.event.web_partnership.SearchEventStatus>} value
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.event.web_partnership.SearchEventStatus} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * repeated SearchEventStatus or_statuses = 7;
 * @return {!Array<!proto.event.web_partnership.SearchEventStatus>}
 */
proto.event.web_partnership.ListEventsReq.prototype.getOrStatusesList = function() {
  return /** @type {!Array<!proto.event.web_partnership.SearchEventStatus>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<!proto.event.web_partnership.SearchEventStatus>} value
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.setOrStatusesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!proto.event.web_partnership.SearchEventStatus} value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.addOrStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.ListEventsReq} returns this
 */
proto.event.web_partnership.ListEventsReq.prototype.clearOrStatusesList = function() {
  return this.setOrStatusesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.ListEventScheduleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.ListEventScheduleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.ListEventScheduleReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.ListEventScheduleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.ListEventScheduleReq}
 */
proto.event.web_partnership.ListEventScheduleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.ListEventScheduleReq;
  return proto.event.web_partnership.ListEventScheduleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.ListEventScheduleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.ListEventScheduleReq}
 */
proto.event.web_partnership.ListEventScheduleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.ListEventScheduleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.ListEventScheduleReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.ListEventScheduleReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.ListEventScheduleReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string event_id = 1;
 * @return {string}
 */
proto.event.web_partnership.ListEventScheduleReq.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.ListEventScheduleReq} returns this
 */
proto.event.web_partnership.ListEventScheduleReq.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.CreateEventRes.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.CreateEventRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.CreateEventRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.CreateEventRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.CreateEventRes}
 */
proto.event.web_partnership.CreateEventRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.CreateEventRes;
  return proto.event.web_partnership.CreateEventRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.CreateEventRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.CreateEventRes}
 */
proto.event.web_partnership.CreateEventRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.CreateEventRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.CreateEventRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.CreateEventRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.CreateEventRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.CreateEventRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.CreateEventRes} returns this
 */
proto.event.web_partnership.CreateEventRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.RetrieveEventRes.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.RetrieveEventRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.RetrieveEventRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.RetrieveEventRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.event.web_partnership.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.RetrieveEventRes}
 */
proto.event.web_partnership.RetrieveEventRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.RetrieveEventRes;
  return proto.event.web_partnership.RetrieveEventRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.RetrieveEventRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.RetrieveEventRes}
 */
proto.event.web_partnership.RetrieveEventRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event.web_partnership.Event;
      reader.readMessage(value,proto.event.web_partnership.Event.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.RetrieveEventRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.RetrieveEventRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.RetrieveEventRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.RetrieveEventRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event.web_partnership.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional Event info = 1;
 * @return {?proto.event.web_partnership.Event}
 */
proto.event.web_partnership.RetrieveEventRes.prototype.getInfo = function() {
  return /** @type{?proto.event.web_partnership.Event} */ (
    jspb.Message.getWrapperField(this, proto.event.web_partnership.Event, 1));
};


/**
 * @param {?proto.event.web_partnership.Event|undefined} value
 * @return {!proto.event.web_partnership.RetrieveEventRes} returns this
*/
proto.event.web_partnership.RetrieveEventRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.RetrieveEventRes} returns this
 */
proto.event.web_partnership.RetrieveEventRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.RetrieveEventRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_partnership.ListEventsRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.ListEventsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.ListEventsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.ListEventsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.ListEventsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.event.web_partnership.EventListInfo.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && base_base_pb.PaginationRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.ListEventsRes}
 */
proto.event.web_partnership.ListEventsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.ListEventsRes;
  return proto.event.web_partnership.ListEventsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.ListEventsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.ListEventsRes}
 */
proto.event.web_partnership.ListEventsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event.web_partnership.EventListInfo;
      reader.readMessage(value,proto.event.web_partnership.EventListInfo.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = new base_base_pb.PaginationRes;
      reader.readMessage(value,base_base_pb.PaginationRes.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.ListEventsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.ListEventsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.ListEventsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.ListEventsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.event.web_partnership.EventListInfo.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_base_pb.PaginationRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EventListInfo items = 1;
 * @return {!Array<!proto.event.web_partnership.EventListInfo>}
 */
proto.event.web_partnership.ListEventsRes.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.event.web_partnership.EventListInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event.web_partnership.EventListInfo, 1));
};


/**
 * @param {!Array<!proto.event.web_partnership.EventListInfo>} value
 * @return {!proto.event.web_partnership.ListEventsRes} returns this
*/
proto.event.web_partnership.ListEventsRes.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.event.web_partnership.EventListInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventListInfo}
 */
proto.event.web_partnership.ListEventsRes.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.event.web_partnership.EventListInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.ListEventsRes} returns this
 */
proto.event.web_partnership.ListEventsRes.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional base.PaginationRes pagination = 2;
 * @return {?proto.base.PaginationRes}
 */
proto.event.web_partnership.ListEventsRes.prototype.getPagination = function() {
  return /** @type{?proto.base.PaginationRes} */ (
    jspb.Message.getWrapperField(this, base_base_pb.PaginationRes, 2));
};


/**
 * @param {?proto.base.PaginationRes|undefined} value
 * @return {!proto.event.web_partnership.ListEventsRes} returns this
*/
proto.event.web_partnership.ListEventsRes.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_partnership.ListEventsRes} returns this
 */
proto.event.web_partnership.ListEventsRes.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_partnership.ListEventsRes.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.CreateEventScheduleRes.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.CreateEventScheduleRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.CreateEventScheduleRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.CreateEventScheduleRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.CreateEventScheduleRes}
 */
proto.event.web_partnership.CreateEventScheduleRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.CreateEventScheduleRes;
  return proto.event.web_partnership.CreateEventScheduleRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.CreateEventScheduleRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.CreateEventScheduleRes}
 */
proto.event.web_partnership.CreateEventScheduleRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.CreateEventScheduleRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.CreateEventScheduleRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.CreateEventScheduleRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.CreateEventScheduleRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_partnership.CreateEventScheduleRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_partnership.CreateEventScheduleRes} returns this
 */
proto.event.web_partnership.CreateEventScheduleRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_partnership.ListEventScheduleRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_partnership.ListEventScheduleRes.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_partnership.ListEventScheduleRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_partnership.ListEventScheduleRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.ListEventScheduleRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.event.web_partnership.EventScheduleInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_partnership.ListEventScheduleRes}
 */
proto.event.web_partnership.ListEventScheduleRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_partnership.ListEventScheduleRes;
  return proto.event.web_partnership.ListEventScheduleRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_partnership.ListEventScheduleRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_partnership.ListEventScheduleRes}
 */
proto.event.web_partnership.ListEventScheduleRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event.web_partnership.EventScheduleInfo;
      reader.readMessage(value,proto.event.web_partnership.EventScheduleInfo.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_partnership.ListEventScheduleRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_partnership.ListEventScheduleRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_partnership.ListEventScheduleRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_partnership.ListEventScheduleRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.event.web_partnership.EventScheduleInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EventScheduleInfo items = 1;
 * @return {!Array<!proto.event.web_partnership.EventScheduleInfo>}
 */
proto.event.web_partnership.ListEventScheduleRes.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.event.web_partnership.EventScheduleInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event.web_partnership.EventScheduleInfo, 1));
};


/**
 * @param {!Array<!proto.event.web_partnership.EventScheduleInfo>} value
 * @return {!proto.event.web_partnership.ListEventScheduleRes} returns this
*/
proto.event.web_partnership.ListEventScheduleRes.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.event.web_partnership.EventScheduleInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_partnership.EventScheduleInfo}
 */
proto.event.web_partnership.ListEventScheduleRes.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.event.web_partnership.EventScheduleInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_partnership.ListEventScheduleRes} returns this
 */
proto.event.web_partnership.ListEventScheduleRes.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * @enum {number}
 */
proto.event.web_partnership.EventType = {
  EVENT_TYPE_INVALID: 0,
  EVENT_TYPE_OFFLINE: 1,
  EVENT_TYPE_ONLINE: 2
};

/**
 * @enum {number}
 */
proto.event.web_partnership.SearchEventStatus = {
  EVENT_FILTER_STATUS_NONE: 0,
  EVENT_FILTER_STATUS_SALE_COMING_SOON: 1,
  EVENT_FILTER_STATUS_ON_SALE: 2,
  EVENT_FILTER_STATUS_STOP_SALE: 3,
  EVENT_FILTER_STATUS_SOLD_OUT: 4,
  EVENT_FILTER_STATUS_UPCOMING: 5,
  EVENT_FILTER_STATUS_GOING_ON: 6,
  EVENT_FILTER_STATUS_ENDED: 7,
  EVENT_FILTER_STATUS_HOT: 8,
  EVENT_FILTER_STATUS_PUBLISHED: 9,
  EVENT_FILTER_STATUS_UNPUBLISHED: 10
};

/**
 * @enum {number}
 */
proto.event.web_partnership.EventStatus = {
  EVENT_DISPLAY_STATUS_NONE: 0,
  EVENT_DISPLAY_STATUS_SALE_COMING_SOON: 1,
  EVENT_DISPLAY_STATUS_ON_SALE: 2,
  EVENT_DISPLAY_STATUS_STOP_SALE: 3,
  EVENT_DISPLAY_STATUS_SOLD_OUT: 4,
  EVENT_DISPLAY_STATUS_UPCOMING: 5,
  EVENT_DISPLAY_STATUS_GOING_ON: 6,
  EVENT_DISPLAY_STATUS_ENDED: 7
};

goog.object.extend(exports, proto.event.web_partnership);
