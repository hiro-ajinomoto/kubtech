/**
 * @fileoverview gRPC-Web generated client stub for event.web_admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: event/web_admin/sponsor_level.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var event_web_admin_base_pb = require('../../event/web_admin/base_pb.js')
const proto = {};
proto.event = {};
proto.event.web_admin = require('./sponsor_level_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.event.web_admin.SponsorLevelServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.event.web_admin.SponsorLevelServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.CreateSponsorLevelReq,
 *   !proto.event.web_admin.CreateSponsorLevelRes>}
 */
const methodDescriptor_SponsorLevelService_CreateSponsorLevel = new grpc.web.MethodDescriptor(
  '/event.web_admin.SponsorLevelService/CreateSponsorLevel',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.CreateSponsorLevelReq,
  proto.event.web_admin.CreateSponsorLevelRes,
  /**
   * @param {!proto.event.web_admin.CreateSponsorLevelReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.web_admin.CreateSponsorLevelRes.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.CreateSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.CreateSponsorLevelRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.CreateSponsorLevelRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.SponsorLevelServiceClient.prototype.createSponsorLevel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/CreateSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_CreateSponsorLevel,
      callback);
};


/**
 * @param {!proto.event.web_admin.CreateSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.CreateSponsorLevelRes>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.SponsorLevelServicePromiseClient.prototype.createSponsorLevel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/CreateSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_CreateSponsorLevel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.UpdateSponsorLevelReq,
 *   !proto.event.web_admin.Empty>}
 */
const methodDescriptor_SponsorLevelService_UpdateSponsorLevel = new grpc.web.MethodDescriptor(
  '/event.web_admin.SponsorLevelService/UpdateSponsorLevel',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.UpdateSponsorLevelReq,
  event_web_admin_base_pb.Empty,
  /**
   * @param {!proto.event.web_admin.UpdateSponsorLevelReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  event_web_admin_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.UpdateSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.SponsorLevelServiceClient.prototype.updateSponsorLevel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/UpdateSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_UpdateSponsorLevel,
      callback);
};


/**
 * @param {!proto.event.web_admin.UpdateSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.Empty>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.SponsorLevelServicePromiseClient.prototype.updateSponsorLevel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/UpdateSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_UpdateSponsorLevel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.DeleteSponsorLevelReq,
 *   !proto.event.web_admin.Empty>}
 */
const methodDescriptor_SponsorLevelService_DeleteSponsorLevel = new grpc.web.MethodDescriptor(
  '/event.web_admin.SponsorLevelService/DeleteSponsorLevel',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.DeleteSponsorLevelReq,
  event_web_admin_base_pb.Empty,
  /**
   * @param {!proto.event.web_admin.DeleteSponsorLevelReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  event_web_admin_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.DeleteSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.SponsorLevelServiceClient.prototype.deleteSponsorLevel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/DeleteSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_DeleteSponsorLevel,
      callback);
};


/**
 * @param {!proto.event.web_admin.DeleteSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.Empty>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.SponsorLevelServicePromiseClient.prototype.deleteSponsorLevel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/DeleteSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_DeleteSponsorLevel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.GetSponsorLevelReq,
 *   !proto.event.web_admin.GetSponsorLevelRes>}
 */
const methodDescriptor_SponsorLevelService_GetSponsorLevel = new grpc.web.MethodDescriptor(
  '/event.web_admin.SponsorLevelService/GetSponsorLevel',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.GetSponsorLevelReq,
  proto.event.web_admin.GetSponsorLevelRes,
  /**
   * @param {!proto.event.web_admin.GetSponsorLevelReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.web_admin.GetSponsorLevelRes.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.GetSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.GetSponsorLevelRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.GetSponsorLevelRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.SponsorLevelServiceClient.prototype.getSponsorLevel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/GetSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_GetSponsorLevel,
      callback);
};


/**
 * @param {!proto.event.web_admin.GetSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.GetSponsorLevelRes>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.SponsorLevelServicePromiseClient.prototype.getSponsorLevel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/GetSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_GetSponsorLevel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.ListSponsorLevelReq,
 *   !proto.event.web_admin.ListSponsorLevelRes>}
 */
const methodDescriptor_SponsorLevelService_ListSponsorLevel = new grpc.web.MethodDescriptor(
  '/event.web_admin.SponsorLevelService/ListSponsorLevel',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.ListSponsorLevelReq,
  proto.event.web_admin.ListSponsorLevelRes,
  /**
   * @param {!proto.event.web_admin.ListSponsorLevelReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.web_admin.ListSponsorLevelRes.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.ListSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.ListSponsorLevelRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.ListSponsorLevelRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.SponsorLevelServiceClient.prototype.listSponsorLevel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/ListSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_ListSponsorLevel,
      callback);
};


/**
 * @param {!proto.event.web_admin.ListSponsorLevelReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.ListSponsorLevelRes>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.SponsorLevelServicePromiseClient.prototype.listSponsorLevel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.SponsorLevelService/ListSponsorLevel',
      request,
      metadata || {},
      methodDescriptor_SponsorLevelService_ListSponsorLevel);
};


module.exports = proto.event.web_admin;

