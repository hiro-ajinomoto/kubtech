// source: event/web_admin/artist.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var event_web_admin_base_pb = require('../../event/web_admin/base_pb.js');
goog.object.extend(proto, event_web_admin_base_pb);
goog.exportSymbol('proto.event.web_admin.ArtistBasicInfo', null, global);
goog.exportSymbol('proto.event.web_admin.ArtistListInfo', null, global);
goog.exportSymbol('proto.event.web_admin.ArtistTypeInfo', null, global);
goog.exportSymbol('proto.event.web_admin.CreateArtistReq', null, global);
goog.exportSymbol('proto.event.web_admin.CreateArtistRes', null, global);
goog.exportSymbol('proto.event.web_admin.DeleteArtistReq', null, global);
goog.exportSymbol('proto.event.web_admin.GetArtistDetailReq', null, global);
goog.exportSymbol('proto.event.web_admin.GetArtistDetailRes', null, global);
goog.exportSymbol('proto.event.web_admin.ListArtistReq', null, global);
goog.exportSymbol('proto.event.web_admin.ListArtistRes', null, global);
goog.exportSymbol('proto.event.web_admin.UpdateArtistReq', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.ArtistBasicInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_admin.ArtistBasicInfo.repeatedFields_, null);
};
goog.inherits(proto.event.web_admin.ArtistBasicInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.ArtistBasicInfo.displayName = 'proto.event.web_admin.ArtistBasicInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.ArtistListInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_admin.ArtistListInfo.repeatedFields_, null);
};
goog.inherits(proto.event.web_admin.ArtistListInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.ArtistListInfo.displayName = 'proto.event.web_admin.ArtistListInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.ArtistTypeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_admin.ArtistTypeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.ArtistTypeInfo.displayName = 'proto.event.web_admin.ArtistTypeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.CreateArtistReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_admin.CreateArtistReq.repeatedFields_, null);
};
goog.inherits(proto.event.web_admin.CreateArtistReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.CreateArtistReq.displayName = 'proto.event.web_admin.CreateArtistReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.UpdateArtistReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_admin.UpdateArtistReq.repeatedFields_, null);
};
goog.inherits(proto.event.web_admin.UpdateArtistReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.UpdateArtistReq.displayName = 'proto.event.web_admin.UpdateArtistReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.DeleteArtistReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_admin.DeleteArtistReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.DeleteArtistReq.displayName = 'proto.event.web_admin.DeleteArtistReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.ListArtistReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_admin.ListArtistReq.repeatedFields_, null);
};
goog.inherits(proto.event.web_admin.ListArtistReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.ListArtistReq.displayName = 'proto.event.web_admin.ListArtistReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.GetArtistDetailReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_admin.GetArtistDetailReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.GetArtistDetailReq.displayName = 'proto.event.web_admin.GetArtistDetailReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.CreateArtistRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_admin.CreateArtistRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.CreateArtistRes.displayName = 'proto.event.web_admin.CreateArtistRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.GetArtistDetailRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.web_admin.GetArtistDetailRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.GetArtistDetailRes.displayName = 'proto.event.web_admin.GetArtistDetailRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.web_admin.ListArtistRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.web_admin.ListArtistRes.repeatedFields_, null);
};
goog.inherits(proto.event.web_admin.ListArtistRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.web_admin.ListArtistRes.displayName = 'proto.event.web_admin.ListArtistRes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_admin.ArtistBasicInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.ArtistBasicInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.ArtistBasicInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ArtistBasicInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 2, ""),
    typeList: jspb.Message.toObjectList(msg.getTypeList(),
    proto.event.web_admin.ArtistTypeInfo.toObject, includeInstance),
    personalUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    facebookUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    instagramUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    intro: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.ArtistBasicInfo}
 */
proto.event.web_admin.ArtistBasicInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.ArtistBasicInfo;
  return proto.event.web_admin.ArtistBasicInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.ArtistBasicInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.ArtistBasicInfo}
 */
proto.event.web_admin.ArtistBasicInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 3:
      var value = new proto.event.web_admin.ArtistTypeInfo;
      reader.readMessage(value,proto.event.web_admin.ArtistTypeInfo.deserializeBinaryFromReader);
      msg.addType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFacebookUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstagramUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntro(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.ArtistBasicInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.ArtistBasicInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ArtistBasicInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.event.web_admin.ArtistTypeInfo.serializeBinaryToWriter
    );
  }
  f = message.getPersonalUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFacebookUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInstagramUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIntro();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistBasicInfo} returns this
 */
proto.event.web_admin.ArtistBasicInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string avatar = 2;
 * @return {string}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistBasicInfo} returns this
 */
proto.event.web_admin.ArtistBasicInfo.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ArtistTypeInfo type = 3;
 * @return {!Array<!proto.event.web_admin.ArtistTypeInfo>}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.getTypeList = function() {
  return /** @type{!Array<!proto.event.web_admin.ArtistTypeInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event.web_admin.ArtistTypeInfo, 3));
};


/**
 * @param {!Array<!proto.event.web_admin.ArtistTypeInfo>} value
 * @return {!proto.event.web_admin.ArtistBasicInfo} returns this
*/
proto.event.web_admin.ArtistBasicInfo.prototype.setTypeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.event.web_admin.ArtistTypeInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_admin.ArtistTypeInfo}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.addType = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.event.web_admin.ArtistTypeInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_admin.ArtistBasicInfo} returns this
 */
proto.event.web_admin.ArtistBasicInfo.prototype.clearTypeList = function() {
  return this.setTypeList([]);
};


/**
 * optional string personal_url = 4;
 * @return {string}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.getPersonalUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistBasicInfo} returns this
 */
proto.event.web_admin.ArtistBasicInfo.prototype.setPersonalUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string facebook_url = 5;
 * @return {string}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.getFacebookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistBasicInfo} returns this
 */
proto.event.web_admin.ArtistBasicInfo.prototype.setFacebookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string instagram_url = 6;
 * @return {string}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.getInstagramUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistBasicInfo} returns this
 */
proto.event.web_admin.ArtistBasicInfo.prototype.setInstagramUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string intro = 7;
 * @return {string}
 */
proto.event.web_admin.ArtistBasicInfo.prototype.getIntro = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistBasicInfo} returns this
 */
proto.event.web_admin.ArtistBasicInfo.prototype.setIntro = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_admin.ArtistListInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.ArtistListInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.ArtistListInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.ArtistListInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ArtistListInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 3, ""),
    typeList: jspb.Message.toObjectList(msg.getTypeList(),
    proto.event.web_admin.ArtistTypeInfo.toObject, includeInstance),
    createdAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 7, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 8, ""),
    intro: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.ArtistListInfo}
 */
proto.event.web_admin.ArtistListInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.ArtistListInfo;
  return proto.event.web_admin.ArtistListInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.ArtistListInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.ArtistListInfo}
 */
proto.event.web_admin.ArtistListInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 4:
      var value = new proto.event.web_admin.ArtistTypeInfo;
      reader.readMessage(value,proto.event.web_admin.ArtistTypeInfo.deserializeBinaryFromReader);
      msg.addType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntro(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.ArtistListInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.ArtistListInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.ArtistListInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ArtistListInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.event.web_admin.ArtistTypeInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIntro();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_admin.ArtistListInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.event.web_admin.ArtistListInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string avatar = 3;
 * @return {string}
 */
proto.event.web_admin.ArtistListInfo.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ArtistTypeInfo type = 4;
 * @return {!Array<!proto.event.web_admin.ArtistTypeInfo>}
 */
proto.event.web_admin.ArtistListInfo.prototype.getTypeList = function() {
  return /** @type{!Array<!proto.event.web_admin.ArtistTypeInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event.web_admin.ArtistTypeInfo, 4));
};


/**
 * @param {!Array<!proto.event.web_admin.ArtistTypeInfo>} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
*/
proto.event.web_admin.ArtistListInfo.prototype.setTypeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.event.web_admin.ArtistTypeInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_admin.ArtistTypeInfo}
 */
proto.event.web_admin.ArtistListInfo.prototype.addType = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.event.web_admin.ArtistTypeInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.clearTypeList = function() {
  return this.setTypeList([]);
};


/**
 * optional int64 created_at = 5;
 * @return {number}
 */
proto.event.web_admin.ArtistListInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 updated_at = 6;
 * @return {number}
 */
proto.event.web_admin.ArtistListInfo.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string created_by = 7;
 * @return {string}
 */
proto.event.web_admin.ArtistListInfo.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string updated_by = 8;
 * @return {string}
 */
proto.event.web_admin.ArtistListInfo.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string intro = 9;
 * @return {string}
 */
proto.event.web_admin.ArtistListInfo.prototype.getIntro = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistListInfo} returns this
 */
proto.event.web_admin.ArtistListInfo.prototype.setIntro = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.ArtistTypeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.ArtistTypeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.ArtistTypeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ArtistTypeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.ArtistTypeInfo}
 */
proto.event.web_admin.ArtistTypeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.ArtistTypeInfo;
  return proto.event.web_admin.ArtistTypeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.ArtistTypeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.ArtistTypeInfo}
 */
proto.event.web_admin.ArtistTypeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.ArtistTypeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.ArtistTypeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.ArtistTypeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ArtistTypeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_admin.ArtistTypeInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistTypeInfo} returns this
 */
proto.event.web_admin.ArtistTypeInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.event.web_admin.ArtistTypeInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistTypeInfo} returns this
 */
proto.event.web_admin.ArtistTypeInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string icon = 3;
 * @return {string}
 */
proto.event.web_admin.ArtistTypeInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ArtistTypeInfo} returns this
 */
proto.event.web_admin.ArtistTypeInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_admin.CreateArtistReq.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.CreateArtistReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.CreateArtistReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.CreateArtistReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.CreateArtistReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 2, ""),
    typeIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    personalUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    facebookUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    instagramUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    intro: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lang: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.CreateArtistReq}
 */
proto.event.web_admin.CreateArtistReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.CreateArtistReq;
  return proto.event.web_admin.CreateArtistReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.CreateArtistReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.CreateArtistReq}
 */
proto.event.web_admin.CreateArtistReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTypeIds(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFacebookUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstagramUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntro(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.CreateArtistReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.CreateArtistReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.CreateArtistReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.CreateArtistReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTypeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getPersonalUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFacebookUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInstagramUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIntro();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLang();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event.web_admin.CreateArtistReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string avatar = 2;
 * @return {string}
 */
proto.event.web_admin.CreateArtistReq.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string type_ids = 3;
 * @return {!Array<string>}
 */
proto.event.web_admin.CreateArtistReq.prototype.getTypeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.setTypeIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.addTypeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.clearTypeIdsList = function() {
  return this.setTypeIdsList([]);
};


/**
 * optional string personal_url = 4;
 * @return {string}
 */
proto.event.web_admin.CreateArtistReq.prototype.getPersonalUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.setPersonalUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string facebook_url = 5;
 * @return {string}
 */
proto.event.web_admin.CreateArtistReq.prototype.getFacebookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.setFacebookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string instagram_url = 6;
 * @return {string}
 */
proto.event.web_admin.CreateArtistReq.prototype.getInstagramUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.setInstagramUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string intro = 7;
 * @return {string}
 */
proto.event.web_admin.CreateArtistReq.prototype.getIntro = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.setIntro = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string lang = 8;
 * @return {string}
 */
proto.event.web_admin.CreateArtistReq.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.CreateArtistReq} returns this
 */
proto.event.web_admin.CreateArtistReq.prototype.setLang = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_admin.UpdateArtistReq.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.UpdateArtistReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.UpdateArtistReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.UpdateArtistReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.UpdateArtistReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 3, ""),
    typeIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    personalUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    facebookUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    instagramUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    intro: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lang: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.UpdateArtistReq}
 */
proto.event.web_admin.UpdateArtistReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.UpdateArtistReq;
  return proto.event.web_admin.UpdateArtistReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.UpdateArtistReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.UpdateArtistReq}
 */
proto.event.web_admin.UpdateArtistReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTypeIds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFacebookUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstagramUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntro(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.UpdateArtistReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.UpdateArtistReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.UpdateArtistReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.UpdateArtistReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTypeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getPersonalUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFacebookUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInstagramUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIntro();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLang();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string avatar = 3;
 * @return {string}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string type_ids = 4;
 * @return {!Array<string>}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getTypeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setTypeIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.addTypeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.clearTypeIdsList = function() {
  return this.setTypeIdsList([]);
};


/**
 * optional string personal_url = 5;
 * @return {string}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getPersonalUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setPersonalUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string facebook_url = 6;
 * @return {string}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getFacebookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setFacebookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string instagram_url = 7;
 * @return {string}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getInstagramUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setInstagramUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string intro = 8;
 * @return {string}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getIntro = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setIntro = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string lang = 9;
 * @return {string}
 */
proto.event.web_admin.UpdateArtistReq.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.UpdateArtistReq} returns this
 */
proto.event.web_admin.UpdateArtistReq.prototype.setLang = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.DeleteArtistReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.DeleteArtistReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.DeleteArtistReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.DeleteArtistReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.DeleteArtistReq}
 */
proto.event.web_admin.DeleteArtistReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.DeleteArtistReq;
  return proto.event.web_admin.DeleteArtistReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.DeleteArtistReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.DeleteArtistReq}
 */
proto.event.web_admin.DeleteArtistReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.DeleteArtistReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.DeleteArtistReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.DeleteArtistReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.DeleteArtistReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_admin.DeleteArtistReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.DeleteArtistReq} returns this
 */
proto.event.web_admin.DeleteArtistReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_admin.ListArtistReq.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.ListArtistReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.ListArtistReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.ListArtistReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ListArtistReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchText: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && event_web_admin_base_pb.PaginationReq.toObject(includeInstance, f),
    orderByList: jspb.Message.toObjectList(msg.getOrderByList(),
    event_web_admin_base_pb.OrderByItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.ListArtistReq}
 */
proto.event.web_admin.ListArtistReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.ListArtistReq;
  return proto.event.web_admin.ListArtistReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.ListArtistReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.ListArtistReq}
 */
proto.event.web_admin.ListArtistReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchText(value);
      break;
    case 2:
      var value = new event_web_admin_base_pb.PaginationReq;
      reader.readMessage(value,event_web_admin_base_pb.PaginationReq.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new event_web_admin_base_pb.OrderByItem;
      reader.readMessage(value,event_web_admin_base_pb.OrderByItem.deserializeBinaryFromReader);
      msg.addOrderBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.ListArtistReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.ListArtistReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.ListArtistReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ListArtistReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      event_web_admin_base_pb.PaginationReq.serializeBinaryToWriter
    );
  }
  f = message.getOrderByList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      event_web_admin_base_pb.OrderByItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string search_text = 1;
 * @return {string}
 */
proto.event.web_admin.ListArtistReq.prototype.getSearchText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.ListArtistReq} returns this
 */
proto.event.web_admin.ListArtistReq.prototype.setSearchText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PaginationReq pagination = 2;
 * @return {?proto.event.web_admin.PaginationReq}
 */
proto.event.web_admin.ListArtistReq.prototype.getPagination = function() {
  return /** @type{?proto.event.web_admin.PaginationReq} */ (
    jspb.Message.getWrapperField(this, event_web_admin_base_pb.PaginationReq, 2));
};


/**
 * @param {?proto.event.web_admin.PaginationReq|undefined} value
 * @return {!proto.event.web_admin.ListArtistReq} returns this
*/
proto.event.web_admin.ListArtistReq.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_admin.ListArtistReq} returns this
 */
proto.event.web_admin.ListArtistReq.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_admin.ListArtistReq.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated OrderByItem order_by = 3;
 * @return {!Array<!proto.event.web_admin.OrderByItem>}
 */
proto.event.web_admin.ListArtistReq.prototype.getOrderByList = function() {
  return /** @type{!Array<!proto.event.web_admin.OrderByItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, event_web_admin_base_pb.OrderByItem, 3));
};


/**
 * @param {!Array<!proto.event.web_admin.OrderByItem>} value
 * @return {!proto.event.web_admin.ListArtistReq} returns this
*/
proto.event.web_admin.ListArtistReq.prototype.setOrderByList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.event.web_admin.OrderByItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_admin.OrderByItem}
 */
proto.event.web_admin.ListArtistReq.prototype.addOrderBy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.event.web_admin.OrderByItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_admin.ListArtistReq} returns this
 */
proto.event.web_admin.ListArtistReq.prototype.clearOrderByList = function() {
  return this.setOrderByList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.GetArtistDetailReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.GetArtistDetailReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.GetArtistDetailReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.GetArtistDetailReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.GetArtistDetailReq}
 */
proto.event.web_admin.GetArtistDetailReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.GetArtistDetailReq;
  return proto.event.web_admin.GetArtistDetailReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.GetArtistDetailReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.GetArtistDetailReq}
 */
proto.event.web_admin.GetArtistDetailReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.GetArtistDetailReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.GetArtistDetailReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.GetArtistDetailReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.GetArtistDetailReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_admin.GetArtistDetailReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.GetArtistDetailReq} returns this
 */
proto.event.web_admin.GetArtistDetailReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.CreateArtistRes.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.CreateArtistRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.CreateArtistRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.CreateArtistRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.CreateArtistRes}
 */
proto.event.web_admin.CreateArtistRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.CreateArtistRes;
  return proto.event.web_admin.CreateArtistRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.CreateArtistRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.CreateArtistRes}
 */
proto.event.web_admin.CreateArtistRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.CreateArtistRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.CreateArtistRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.CreateArtistRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.CreateArtistRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_admin.CreateArtistRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.CreateArtistRes} returns this
 */
proto.event.web_admin.CreateArtistRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.GetArtistDetailRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.GetArtistDetailRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.GetArtistDetailRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    info: (f = msg.getInfo()) && proto.event.web_admin.ArtistBasicInfo.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.GetArtistDetailRes}
 */
proto.event.web_admin.GetArtistDetailRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.GetArtistDetailRes;
  return proto.event.web_admin.GetArtistDetailRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.GetArtistDetailRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.GetArtistDetailRes}
 */
proto.event.web_admin.GetArtistDetailRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 3:
      var value = new proto.event.web_admin.ArtistBasicInfo;
      reader.readMessage(value,proto.event.web_admin.ArtistBasicInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.GetArtistDetailRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.GetArtistDetailRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.GetArtistDetailRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event.web_admin.ArtistBasicInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.GetArtistDetailRes} returns this
 */
proto.event.web_admin.GetArtistDetailRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partnership_id = 2;
 * @return {string}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.GetArtistDetailRes} returns this
 */
proto.event.web_admin.GetArtistDetailRes.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ArtistBasicInfo info = 3;
 * @return {?proto.event.web_admin.ArtistBasicInfo}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.getInfo = function() {
  return /** @type{?proto.event.web_admin.ArtistBasicInfo} */ (
    jspb.Message.getWrapperField(this, proto.event.web_admin.ArtistBasicInfo, 3));
};


/**
 * @param {?proto.event.web_admin.ArtistBasicInfo|undefined} value
 * @return {!proto.event.web_admin.GetArtistDetailRes} returns this
*/
proto.event.web_admin.GetArtistDetailRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_admin.GetArtistDetailRes} returns this
 */
proto.event.web_admin.GetArtistDetailRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 created_at = 4;
 * @return {number}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_admin.GetArtistDetailRes} returns this
 */
proto.event.web_admin.GetArtistDetailRes.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 updated_at = 5;
 * @return {number}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.web_admin.GetArtistDetailRes} returns this
 */
proto.event.web_admin.GetArtistDetailRes.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string created_by = 6;
 * @return {string}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.GetArtistDetailRes} returns this
 */
proto.event.web_admin.GetArtistDetailRes.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_by = 7;
 * @return {string}
 */
proto.event.web_admin.GetArtistDetailRes.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event.web_admin.GetArtistDetailRes} returns this
 */
proto.event.web_admin.GetArtistDetailRes.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.web_admin.ListArtistRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.web_admin.ListArtistRes.prototype.toObject = function(opt_includeInstance) {
  return proto.event.web_admin.ListArtistRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.web_admin.ListArtistRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ListArtistRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoList: jspb.Message.toObjectList(msg.getInfoList(),
    proto.event.web_admin.ArtistListInfo.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && event_web_admin_base_pb.PaginationRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.web_admin.ListArtistRes}
 */
proto.event.web_admin.ListArtistRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.web_admin.ListArtistRes;
  return proto.event.web_admin.ListArtistRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.web_admin.ListArtistRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.web_admin.ListArtistRes}
 */
proto.event.web_admin.ListArtistRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event.web_admin.ArtistListInfo;
      reader.readMessage(value,proto.event.web_admin.ArtistListInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    case 2:
      var value = new event_web_admin_base_pb.PaginationRes;
      reader.readMessage(value,event_web_admin_base_pb.PaginationRes.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.web_admin.ListArtistRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.web_admin.ListArtistRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.web_admin.ListArtistRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.web_admin.ListArtistRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.event.web_admin.ArtistListInfo.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      event_web_admin_base_pb.PaginationRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ArtistListInfo info = 1;
 * @return {!Array<!proto.event.web_admin.ArtistListInfo>}
 */
proto.event.web_admin.ListArtistRes.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.event.web_admin.ArtistListInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event.web_admin.ArtistListInfo, 1));
};


/**
 * @param {!Array<!proto.event.web_admin.ArtistListInfo>} value
 * @return {!proto.event.web_admin.ListArtistRes} returns this
*/
proto.event.web_admin.ListArtistRes.prototype.setInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.event.web_admin.ArtistListInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event.web_admin.ArtistListInfo}
 */
proto.event.web_admin.ListArtistRes.prototype.addInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.event.web_admin.ArtistListInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.web_admin.ListArtistRes} returns this
 */
proto.event.web_admin.ListArtistRes.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};


/**
 * optional PaginationRes pagination = 2;
 * @return {?proto.event.web_admin.PaginationRes}
 */
proto.event.web_admin.ListArtistRes.prototype.getPagination = function() {
  return /** @type{?proto.event.web_admin.PaginationRes} */ (
    jspb.Message.getWrapperField(this, event_web_admin_base_pb.PaginationRes, 2));
};


/**
 * @param {?proto.event.web_admin.PaginationRes|undefined} value
 * @return {!proto.event.web_admin.ListArtistRes} returns this
*/
proto.event.web_admin.ListArtistRes.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.web_admin.ListArtistRes} returns this
 */
proto.event.web_admin.ListArtistRes.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.web_admin.ListArtistRes.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.event.web_admin);
