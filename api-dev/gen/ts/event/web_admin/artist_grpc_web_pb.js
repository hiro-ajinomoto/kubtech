/**
 * @fileoverview gRPC-Web generated client stub for event.web_admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: event/web_admin/artist.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var event_web_admin_base_pb = require('../../event/web_admin/base_pb.js')
const proto = {};
proto.event = {};
proto.event.web_admin = require('./artist_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.event.web_admin.ArtistServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.event.web_admin.ArtistServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.GetArtistDetailReq,
 *   !proto.event.web_admin.GetArtistDetailRes>}
 */
const methodDescriptor_ArtistService_GetArtistDetail = new grpc.web.MethodDescriptor(
  '/event.web_admin.ArtistService/GetArtistDetail',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.GetArtistDetailReq,
  proto.event.web_admin.GetArtistDetailRes,
  /**
   * @param {!proto.event.web_admin.GetArtistDetailReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.web_admin.GetArtistDetailRes.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.GetArtistDetailReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.GetArtistDetailRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.GetArtistDetailRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.ArtistServiceClient.prototype.getArtistDetail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.ArtistService/GetArtistDetail',
      request,
      metadata || {},
      methodDescriptor_ArtistService_GetArtistDetail,
      callback);
};


/**
 * @param {!proto.event.web_admin.GetArtistDetailReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.GetArtistDetailRes>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.ArtistServicePromiseClient.prototype.getArtistDetail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.ArtistService/GetArtistDetail',
      request,
      metadata || {},
      methodDescriptor_ArtistService_GetArtistDetail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.ListArtistReq,
 *   !proto.event.web_admin.ListArtistRes>}
 */
const methodDescriptor_ArtistService_ListArtist = new grpc.web.MethodDescriptor(
  '/event.web_admin.ArtistService/ListArtist',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.ListArtistReq,
  proto.event.web_admin.ListArtistRes,
  /**
   * @param {!proto.event.web_admin.ListArtistReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.web_admin.ListArtistRes.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.ListArtistReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.ListArtistRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.ListArtistRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.ArtistServiceClient.prototype.listArtist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.ArtistService/ListArtist',
      request,
      metadata || {},
      methodDescriptor_ArtistService_ListArtist,
      callback);
};


/**
 * @param {!proto.event.web_admin.ListArtistReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.ListArtistRes>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.ArtistServicePromiseClient.prototype.listArtist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.ArtistService/ListArtist',
      request,
      metadata || {},
      methodDescriptor_ArtistService_ListArtist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.CreateArtistReq,
 *   !proto.event.web_admin.CreateArtistRes>}
 */
const methodDescriptor_ArtistService_CreateArtist = new grpc.web.MethodDescriptor(
  '/event.web_admin.ArtistService/CreateArtist',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.CreateArtistReq,
  proto.event.web_admin.CreateArtistRes,
  /**
   * @param {!proto.event.web_admin.CreateArtistReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.event.web_admin.CreateArtistRes.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.CreateArtistReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.CreateArtistRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.CreateArtistRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.ArtistServiceClient.prototype.createArtist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.ArtistService/CreateArtist',
      request,
      metadata || {},
      methodDescriptor_ArtistService_CreateArtist,
      callback);
};


/**
 * @param {!proto.event.web_admin.CreateArtistReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.CreateArtistRes>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.ArtistServicePromiseClient.prototype.createArtist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.ArtistService/CreateArtist',
      request,
      metadata || {},
      methodDescriptor_ArtistService_CreateArtist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.UpdateArtistReq,
 *   !proto.event.web_admin.Empty>}
 */
const methodDescriptor_ArtistService_UpdateArtist = new grpc.web.MethodDescriptor(
  '/event.web_admin.ArtistService/UpdateArtist',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.UpdateArtistReq,
  event_web_admin_base_pb.Empty,
  /**
   * @param {!proto.event.web_admin.UpdateArtistReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  event_web_admin_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.UpdateArtistReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.ArtistServiceClient.prototype.updateArtist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.ArtistService/UpdateArtist',
      request,
      metadata || {},
      methodDescriptor_ArtistService_UpdateArtist,
      callback);
};


/**
 * @param {!proto.event.web_admin.UpdateArtistReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.Empty>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.ArtistServicePromiseClient.prototype.updateArtist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.ArtistService/UpdateArtist',
      request,
      metadata || {},
      methodDescriptor_ArtistService_UpdateArtist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.event.web_admin.DeleteArtistReq,
 *   !proto.event.web_admin.Empty>}
 */
const methodDescriptor_ArtistService_DeleteArtist = new grpc.web.MethodDescriptor(
  '/event.web_admin.ArtistService/DeleteArtist',
  grpc.web.MethodType.UNARY,
  proto.event.web_admin.DeleteArtistReq,
  event_web_admin_base_pb.Empty,
  /**
   * @param {!proto.event.web_admin.DeleteArtistReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  event_web_admin_base_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.event.web_admin.DeleteArtistReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.event.web_admin.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.event.web_admin.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.event.web_admin.ArtistServiceClient.prototype.deleteArtist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/event.web_admin.ArtistService/DeleteArtist',
      request,
      metadata || {},
      methodDescriptor_ArtistService_DeleteArtist,
      callback);
};


/**
 * @param {!proto.event.web_admin.DeleteArtistReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.event.web_admin.Empty>}
 *     Promise that resolves to the response
 */
proto.event.web_admin.ArtistServicePromiseClient.prototype.deleteArtist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/event.web_admin.ArtistService/DeleteArtist',
      request,
      metadata || {},
      methodDescriptor_ArtistService_DeleteArtist);
};


module.exports = proto.event.web_admin;

