// source: proto/search/backend/event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var proto_search_backend_base_pb = require('../../../proto/search/backend/base_pb.js');
goog.object.extend(proto, proto_search_backend_base_pb);
goog.exportSymbol('proto.search.backend.EventCurrencyInfo', null, global);
goog.exportSymbol('proto.search.backend.EventSimpleInfo', null, global);
goog.exportSymbol('proto.search.backend.InternalGetEventReq', null, global);
goog.exportSymbol('proto.search.backend.InternalGetEventRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.backend.EventCurrencyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.search.backend.EventCurrencyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.backend.EventCurrencyInfo.displayName = 'proto.search.backend.EventCurrencyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.backend.EventSimpleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.search.backend.EventSimpleInfo.repeatedFields_, null);
};
goog.inherits(proto.search.backend.EventSimpleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.backend.EventSimpleInfo.displayName = 'proto.search.backend.EventSimpleInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.backend.InternalGetEventReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.search.backend.InternalGetEventReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.backend.InternalGetEventReq.displayName = 'proto.search.backend.InternalGetEventReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.backend.InternalGetEventRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.search.backend.InternalGetEventRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.backend.InternalGetEventRes.displayName = 'proto.search.backend.InternalGetEventRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.backend.EventCurrencyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.search.backend.EventCurrencyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.backend.EventCurrencyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.backend.EventCurrencyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.backend.EventCurrencyInfo}
 */
proto.search.backend.EventCurrencyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.backend.EventCurrencyInfo;
  return proto.search.backend.EventCurrencyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.backend.EventCurrencyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.backend.EventCurrencyInfo}
 */
proto.search.backend.EventCurrencyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.backend.EventCurrencyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.backend.EventCurrencyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.backend.EventCurrencyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.backend.EventCurrencyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.search.backend.EventCurrencyInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventCurrencyInfo} returns this
 */
proto.search.backend.EventCurrencyInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.search.backend.EventCurrencyInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventCurrencyInfo} returns this
 */
proto.search.backend.EventCurrencyInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.search.backend.EventCurrencyInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventCurrencyInfo} returns this
 */
proto.search.backend.EventCurrencyInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon = 4;
 * @return {string}
 */
proto.search.backend.EventCurrencyInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventCurrencyInfo} returns this
 */
proto.search.backend.EventCurrencyInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.search.backend.EventSimpleInfo.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.backend.EventSimpleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.search.backend.EventSimpleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.backend.EventSimpleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.backend.EventSimpleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    esId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mediasList: jspb.Message.toObjectList(msg.getMediasList(),
    proto_search_backend_base_pb.Media.toObject, includeInstance),
    hightlightDateStr: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hightlightAddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currency: (f = msg.getCurrency()) && proto.search.backend.EventCurrencyInfo.toObject(includeInstance, f),
    prefixSecretCode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    numberOfTickets: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.backend.EventSimpleInfo}
 */
proto.search.backend.EventSimpleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.backend.EventSimpleInfo;
  return proto.search.backend.EventSimpleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.backend.EventSimpleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.backend.EventSimpleInfo}
 */
proto.search.backend.EventSimpleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEsId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = new proto_search_backend_base_pb.Media;
      reader.readMessage(value,proto_search_backend_base_pb.Media.deserializeBinaryFromReader);
      msg.addMedias(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHightlightDateStr(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHightlightAddress(value);
      break;
    case 8:
      var value = new proto.search.backend.EventCurrencyInfo;
      reader.readMessage(value,proto.search.backend.EventCurrencyInfo.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefixSecretCode(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumberOfTickets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.backend.EventSimpleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.backend.EventSimpleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.backend.EventSimpleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.backend.EventSimpleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEsId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMediasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto_search_backend_base_pb.Media.serializeBinaryToWriter
    );
  }
  f = message.getHightlightDateStr();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHightlightAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.search.backend.EventCurrencyInfo.serializeBinaryToWriter
    );
  }
  f = message.getPrefixSecretCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getNumberOfTickets();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional string es_id = 1;
 * @return {string}
 */
proto.search.backend.EventSimpleInfo.prototype.getEsId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.setEsId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string event_id = 2;
 * @return {string}
 */
proto.search.backend.EventSimpleInfo.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string partnership_id = 3;
 * @return {string}
 */
proto.search.backend.EventSimpleInfo.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.search.backend.EventSimpleInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Media medias = 5;
 * @return {!Array<!proto.search.backend.Media>}
 */
proto.search.backend.EventSimpleInfo.prototype.getMediasList = function() {
  return /** @type{!Array<!proto.search.backend.Media>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_search_backend_base_pb.Media, 5));
};


/**
 * @param {!Array<!proto.search.backend.Media>} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
*/
proto.search.backend.EventSimpleInfo.prototype.setMediasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.search.backend.Media=} opt_value
 * @param {number=} opt_index
 * @return {!proto.search.backend.Media}
 */
proto.search.backend.EventSimpleInfo.prototype.addMedias = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.search.backend.Media, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.clearMediasList = function() {
  return this.setMediasList([]);
};


/**
 * optional string hightlight_date_str = 6;
 * @return {string}
 */
proto.search.backend.EventSimpleInfo.prototype.getHightlightDateStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.setHightlightDateStr = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string hightlight_address = 7;
 * @return {string}
 */
proto.search.backend.EventSimpleInfo.prototype.getHightlightAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.setHightlightAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional EventCurrencyInfo currency = 8;
 * @return {?proto.search.backend.EventCurrencyInfo}
 */
proto.search.backend.EventSimpleInfo.prototype.getCurrency = function() {
  return /** @type{?proto.search.backend.EventCurrencyInfo} */ (
    jspb.Message.getWrapperField(this, proto.search.backend.EventCurrencyInfo, 8));
};


/**
 * @param {?proto.search.backend.EventCurrencyInfo|undefined} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
*/
proto.search.backend.EventSimpleInfo.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.backend.EventSimpleInfo.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string prefix_secret_code = 9;
 * @return {string}
 */
proto.search.backend.EventSimpleInfo.prototype.getPrefixSecretCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.setPrefixSecretCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 number_of_tickets = 10;
 * @return {number}
 */
proto.search.backend.EventSimpleInfo.prototype.getNumberOfTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.backend.EventSimpleInfo} returns this
 */
proto.search.backend.EventSimpleInfo.prototype.setNumberOfTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.backend.InternalGetEventReq.prototype.toObject = function(opt_includeInstance) {
  return proto.search.backend.InternalGetEventReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.backend.InternalGetEventReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.backend.InternalGetEventReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.backend.InternalGetEventReq}
 */
proto.search.backend.InternalGetEventReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.backend.InternalGetEventReq;
  return proto.search.backend.InternalGetEventReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.backend.InternalGetEventReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.backend.InternalGetEventReq}
 */
proto.search.backend.InternalGetEventReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.backend.InternalGetEventReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.backend.InternalGetEventReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.backend.InternalGetEventReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.backend.InternalGetEventReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.search.backend.InternalGetEventReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.InternalGetEventReq} returns this
 */
proto.search.backend.InternalGetEventReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partnership_id = 2;
 * @return {string}
 */
proto.search.backend.InternalGetEventReq.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.backend.InternalGetEventReq} returns this
 */
proto.search.backend.InternalGetEventReq.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.backend.InternalGetEventRes.prototype.toObject = function(opt_includeInstance) {
  return proto.search.backend.InternalGetEventRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.backend.InternalGetEventRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.backend.InternalGetEventRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.search.backend.EventSimpleInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.backend.InternalGetEventRes}
 */
proto.search.backend.InternalGetEventRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.backend.InternalGetEventRes;
  return proto.search.backend.InternalGetEventRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.backend.InternalGetEventRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.backend.InternalGetEventRes}
 */
proto.search.backend.InternalGetEventRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.search.backend.EventSimpleInfo;
      reader.readMessage(value,proto.search.backend.EventSimpleInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.backend.InternalGetEventRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.backend.InternalGetEventRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.backend.InternalGetEventRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.backend.InternalGetEventRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.search.backend.EventSimpleInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventSimpleInfo info = 1;
 * @return {?proto.search.backend.EventSimpleInfo}
 */
proto.search.backend.InternalGetEventRes.prototype.getInfo = function() {
  return /** @type{?proto.search.backend.EventSimpleInfo} */ (
    jspb.Message.getWrapperField(this, proto.search.backend.EventSimpleInfo, 1));
};


/**
 * @param {?proto.search.backend.EventSimpleInfo|undefined} value
 * @return {!proto.search.backend.InternalGetEventRes} returns this
*/
proto.search.backend.InternalGetEventRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.backend.InternalGetEventRes} returns this
 */
proto.search.backend.InternalGetEventRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.backend.InternalGetEventRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.search.backend);
