// source: proto/wallet/mobile/wallet.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var proto_wallet_mobile_base_pb = require('../../../proto/wallet/mobile/base_pb.js');
goog.object.extend(proto, proto_wallet_mobile_base_pb);
goog.exportSymbol('proto.wallet.mobile.CalculateTopUpAmountReq', null, global);
goog.exportSymbol('proto.wallet.mobile.CalculateTopUpAmountRes', null, global);
goog.exportSymbol('proto.wallet.mobile.GetWalletInfoReq', null, global);
goog.exportSymbol('proto.wallet.mobile.GetWalletInfoRes', null, global);
goog.exportSymbol('proto.wallet.mobile.Payoo', null, global);
goog.exportSymbol('proto.wallet.mobile.TopUpPaymentAction', null, global);
goog.exportSymbol('proto.wallet.mobile.TopUpPaymentActionData', null, global);
goog.exportSymbol('proto.wallet.mobile.TopUpPaymentInfo', null, global);
goog.exportSymbol('proto.wallet.mobile.TopUpPaymentMethod', null, global);
goog.exportSymbol('proto.wallet.mobile.TopUpPaymentSDK', null, global);
goog.exportSymbol('proto.wallet.mobile.TopUpReq', null, global);
goog.exportSymbol('proto.wallet.mobile.TopUpRes', null, global);
goog.exportSymbol('proto.wallet.mobile.Wallet', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.Wallet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.Wallet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.Wallet.displayName = 'proto.wallet.mobile.Wallet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.TopUpPaymentInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.TopUpPaymentInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.TopUpPaymentInfo.displayName = 'proto.wallet.mobile.TopUpPaymentInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.TopUpPaymentMethod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.TopUpPaymentMethod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.TopUpPaymentMethod.displayName = 'proto.wallet.mobile.TopUpPaymentMethod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.Payoo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.Payoo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.Payoo.displayName = 'proto.wallet.mobile.Payoo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.TopUpPaymentSDK = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.TopUpPaymentSDK, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.TopUpPaymentSDK.displayName = 'proto.wallet.mobile.TopUpPaymentSDK';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.TopUpPaymentActionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.TopUpPaymentActionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.TopUpPaymentActionData.displayName = 'proto.wallet.mobile.TopUpPaymentActionData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.GetWalletInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.GetWalletInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.GetWalletInfoReq.displayName = 'proto.wallet.mobile.GetWalletInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.TopUpReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.TopUpReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.TopUpReq.displayName = 'proto.wallet.mobile.TopUpReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.CalculateTopUpAmountReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.CalculateTopUpAmountReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.CalculateTopUpAmountReq.displayName = 'proto.wallet.mobile.CalculateTopUpAmountReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.GetWalletInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.GetWalletInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.GetWalletInfoRes.displayName = 'proto.wallet.mobile.GetWalletInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.TopUpRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.TopUpRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.TopUpRes.displayName = 'proto.wallet.mobile.TopUpRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.CalculateTopUpAmountRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.CalculateTopUpAmountRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.CalculateTopUpAmountRes.displayName = 'proto.wallet.mobile.CalculateTopUpAmountRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.Wallet.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.Wallet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.Wallet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.Wallet.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    balance: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.Wallet}
 */
proto.wallet.mobile.Wallet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.Wallet;
  return proto.wallet.mobile.Wallet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.Wallet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.Wallet}
 */
proto.wallet.mobile.Wallet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.Wallet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.Wallet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.Wallet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.Wallet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBalance();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wallet.mobile.Wallet.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.Wallet} returns this
 */
proto.wallet.mobile.Wallet.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.wallet.mobile.Wallet.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.Wallet} returns this
 */
proto.wallet.mobile.Wallet.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string partnership_id = 3;
 * @return {string}
 */
proto.wallet.mobile.Wallet.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.Wallet} returns this
 */
proto.wallet.mobile.Wallet.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double balance = 4;
 * @return {number}
 */
proto.wallet.mobile.Wallet.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.Wallet} returns this
 */
proto.wallet.mobile.Wallet.prototype.setBalance = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.TopUpPaymentInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.TopUpPaymentInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpPaymentInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transactionStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    totalPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    currencyCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    paymentMethod: (f = msg.getPaymentMethod()) && proto.wallet.mobile.TopUpPaymentMethod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.TopUpPaymentInfo}
 */
proto.wallet.mobile.TopUpPaymentInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.TopUpPaymentInfo;
  return proto.wallet.mobile.TopUpPaymentInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.TopUpPaymentInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.TopUpPaymentInfo}
 */
proto.wallet.mobile.TopUpPaymentInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    case 2:
      var value = /** @type {!proto.wallet.mobile.TransactionStatus} */ (reader.readEnum());
      msg.setTransactionStatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalPrice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    case 7:
      var value = new proto.wallet.mobile.TopUpPaymentMethod;
      reader.readMessage(value,proto.wallet.mobile.TopUpPaymentMethod.deserializeBinaryFromReader);
      msg.setPaymentMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.TopUpPaymentInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.TopUpPaymentInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpPaymentInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransactionStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTotalPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.wallet.mobile.TopUpPaymentMethod.serializeBinaryToWriter
    );
  }
};


/**
 * optional string transaction_id = 1;
 * @return {string}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpPaymentInfo} returns this
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.setTransactionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TransactionStatus transaction_status = 2;
 * @return {!proto.wallet.mobile.TransactionStatus}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.getTransactionStatus = function() {
  return /** @type {!proto.wallet.mobile.TransactionStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.wallet.mobile.TransactionStatus} value
 * @return {!proto.wallet.mobile.TopUpPaymentInfo} returns this
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.setTransactionStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional double amount = 3;
 * @return {number}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.TopUpPaymentInfo} returns this
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double fee = 4;
 * @return {number}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.TopUpPaymentInfo} returns this
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double total_price = 5;
 * @return {number}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.getTotalPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.TopUpPaymentInfo} returns this
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.setTotalPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string currency_code = 6;
 * @return {string}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpPaymentInfo} returns this
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional TopUpPaymentMethod payment_method = 7;
 * @return {?proto.wallet.mobile.TopUpPaymentMethod}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.getPaymentMethod = function() {
  return /** @type{?proto.wallet.mobile.TopUpPaymentMethod} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.TopUpPaymentMethod, 7));
};


/**
 * @param {?proto.wallet.mobile.TopUpPaymentMethod|undefined} value
 * @return {!proto.wallet.mobile.TopUpPaymentInfo} returns this
*/
proto.wallet.mobile.TopUpPaymentInfo.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.TopUpPaymentInfo} returns this
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.clearPaymentMethod = function() {
  return this.setPaymentMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.TopUpPaymentInfo.prototype.hasPaymentMethod = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.TopUpPaymentMethod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.TopUpPaymentMethod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpPaymentMethod.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    method: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    additionalFee: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    displayFee: jspb.Message.getFieldWithDefault(msg, 7, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.TopUpPaymentMethod}
 */
proto.wallet.mobile.TopUpPaymentMethod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.TopUpPaymentMethod;
  return proto.wallet.mobile.TopUpPaymentMethod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.TopUpPaymentMethod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.TopUpPaymentMethod}
 */
proto.wallet.mobile.TopUpPaymentMethod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMethod(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAdditionalFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayFee(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.TopUpPaymentMethod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.TopUpPaymentMethod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpPaymentMethod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getAdditionalFee();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getDisplayFee();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpPaymentMethod} returns this
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpPaymentMethod} returns this
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpPaymentMethod} returns this
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 method = 4;
 * @return {number}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.getMethod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.TopUpPaymentMethod} returns this
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.setMethod = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double fee = 5;
 * @return {number}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.TopUpPaymentMethod} returns this
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double additional_fee = 6;
 * @return {number}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.getAdditionalFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.TopUpPaymentMethod} returns this
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.setAdditionalFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string display_fee = 7;
 * @return {string}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.getDisplayFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpPaymentMethod} returns this
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.setDisplayFee = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string icon = 8;
 * @return {string}
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpPaymentMethod} returns this
 */
proto.wallet.mobile.TopUpPaymentMethod.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.Payoo.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.Payoo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.Payoo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.Payoo.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderXml: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orderChecksum: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.Payoo}
 */
proto.wallet.mobile.Payoo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.Payoo;
  return proto.wallet.mobile.Payoo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.Payoo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.Payoo}
 */
proto.wallet.mobile.Payoo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderXml(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.Payoo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.Payoo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.Payoo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.Payoo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderXml();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrderChecksum();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string order_xml = 1;
 * @return {string}
 */
proto.wallet.mobile.Payoo.prototype.getOrderXml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.Payoo} returns this
 */
proto.wallet.mobile.Payoo.prototype.setOrderXml = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string order_checksum = 2;
 * @return {string}
 */
proto.wallet.mobile.Payoo.prototype.getOrderChecksum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.Payoo} returns this
 */
proto.wallet.mobile.Payoo.prototype.setOrderChecksum = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.TopUpPaymentSDK.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.TopUpPaymentSDK.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.TopUpPaymentSDK} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpPaymentSDK.toObject = function(includeInstance, msg) {
  var f, obj = {
    payoo: (f = msg.getPayoo()) && proto.wallet.mobile.Payoo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.TopUpPaymentSDK}
 */
proto.wallet.mobile.TopUpPaymentSDK.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.TopUpPaymentSDK;
  return proto.wallet.mobile.TopUpPaymentSDK.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.TopUpPaymentSDK} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.TopUpPaymentSDK}
 */
proto.wallet.mobile.TopUpPaymentSDK.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wallet.mobile.Payoo;
      reader.readMessage(value,proto.wallet.mobile.Payoo.deserializeBinaryFromReader);
      msg.setPayoo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.TopUpPaymentSDK.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.TopUpPaymentSDK.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.TopUpPaymentSDK} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpPaymentSDK.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayoo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wallet.mobile.Payoo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Payoo payoo = 1;
 * @return {?proto.wallet.mobile.Payoo}
 */
proto.wallet.mobile.TopUpPaymentSDK.prototype.getPayoo = function() {
  return /** @type{?proto.wallet.mobile.Payoo} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.Payoo, 1));
};


/**
 * @param {?proto.wallet.mobile.Payoo|undefined} value
 * @return {!proto.wallet.mobile.TopUpPaymentSDK} returns this
*/
proto.wallet.mobile.TopUpPaymentSDK.prototype.setPayoo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.TopUpPaymentSDK} returns this
 */
proto.wallet.mobile.TopUpPaymentSDK.prototype.clearPayoo = function() {
  return this.setPayoo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.TopUpPaymentSDK.prototype.hasPayoo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.TopUpPaymentActionData.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.TopUpPaymentActionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.TopUpPaymentActionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpPaymentActionData.toObject = function(includeInstance, msg) {
  var f, obj = {
    webviewUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sdk: (f = msg.getSdk()) && proto.wallet.mobile.TopUpPaymentSDK.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.TopUpPaymentActionData}
 */
proto.wallet.mobile.TopUpPaymentActionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.TopUpPaymentActionData;
  return proto.wallet.mobile.TopUpPaymentActionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.TopUpPaymentActionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.TopUpPaymentActionData}
 */
proto.wallet.mobile.TopUpPaymentActionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebviewUrl(value);
      break;
    case 2:
      var value = new proto.wallet.mobile.TopUpPaymentSDK;
      reader.readMessage(value,proto.wallet.mobile.TopUpPaymentSDK.deserializeBinaryFromReader);
      msg.setSdk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.TopUpPaymentActionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.TopUpPaymentActionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.TopUpPaymentActionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpPaymentActionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebviewUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSdk();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wallet.mobile.TopUpPaymentSDK.serializeBinaryToWriter
    );
  }
};


/**
 * optional string webview_url = 1;
 * @return {string}
 */
proto.wallet.mobile.TopUpPaymentActionData.prototype.getWebviewUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpPaymentActionData} returns this
 */
proto.wallet.mobile.TopUpPaymentActionData.prototype.setWebviewUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TopUpPaymentSDK sdk = 2;
 * @return {?proto.wallet.mobile.TopUpPaymentSDK}
 */
proto.wallet.mobile.TopUpPaymentActionData.prototype.getSdk = function() {
  return /** @type{?proto.wallet.mobile.TopUpPaymentSDK} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.TopUpPaymentSDK, 2));
};


/**
 * @param {?proto.wallet.mobile.TopUpPaymentSDK|undefined} value
 * @return {!proto.wallet.mobile.TopUpPaymentActionData} returns this
*/
proto.wallet.mobile.TopUpPaymentActionData.prototype.setSdk = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.TopUpPaymentActionData} returns this
 */
proto.wallet.mobile.TopUpPaymentActionData.prototype.clearSdk = function() {
  return this.setSdk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.TopUpPaymentActionData.prototype.hasSdk = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.GetWalletInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.GetWalletInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.GetWalletInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetWalletInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.GetWalletInfoReq}
 */
proto.wallet.mobile.GetWalletInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.GetWalletInfoReq;
  return proto.wallet.mobile.GetWalletInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.GetWalletInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.GetWalletInfoReq}
 */
proto.wallet.mobile.GetWalletInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.GetWalletInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.GetWalletInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.GetWalletInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetWalletInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.TopUpReq.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.TopUpReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.TopUpReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    paymentMethodCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currencyCode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.TopUpReq}
 */
proto.wallet.mobile.TopUpReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.TopUpReq;
  return proto.wallet.mobile.TopUpReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.TopUpReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.TopUpReq}
 */
proto.wallet.mobile.TopUpReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethodCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.TopUpReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.TopUpReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.TopUpReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPaymentMethodCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional double amount = 1;
 * @return {number}
 */
proto.wallet.mobile.TopUpReq.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.TopUpReq} returns this
 */
proto.wallet.mobile.TopUpReq.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string payment_method_code = 2;
 * @return {string}
 */
proto.wallet.mobile.TopUpReq.prototype.getPaymentMethodCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpReq} returns this
 */
proto.wallet.mobile.TopUpReq.prototype.setPaymentMethodCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string currency_code = 3;
 * @return {string}
 */
proto.wallet.mobile.TopUpReq.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TopUpReq} returns this
 */
proto.wallet.mobile.TopUpReq.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.CalculateTopUpAmountReq.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.CalculateTopUpAmountReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.CalculateTopUpAmountReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.CalculateTopUpAmountReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    paymentMethodCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currencyCode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.CalculateTopUpAmountReq}
 */
proto.wallet.mobile.CalculateTopUpAmountReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.CalculateTopUpAmountReq;
  return proto.wallet.mobile.CalculateTopUpAmountReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.CalculateTopUpAmountReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.CalculateTopUpAmountReq}
 */
proto.wallet.mobile.CalculateTopUpAmountReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethodCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.CalculateTopUpAmountReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.CalculateTopUpAmountReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.CalculateTopUpAmountReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.CalculateTopUpAmountReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPaymentMethodCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional double amount = 1;
 * @return {number}
 */
proto.wallet.mobile.CalculateTopUpAmountReq.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.CalculateTopUpAmountReq} returns this
 */
proto.wallet.mobile.CalculateTopUpAmountReq.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string payment_method_code = 2;
 * @return {string}
 */
proto.wallet.mobile.CalculateTopUpAmountReq.prototype.getPaymentMethodCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.CalculateTopUpAmountReq} returns this
 */
proto.wallet.mobile.CalculateTopUpAmountReq.prototype.setPaymentMethodCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string currency_code = 3;
 * @return {string}
 */
proto.wallet.mobile.CalculateTopUpAmountReq.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.CalculateTopUpAmountReq} returns this
 */
proto.wallet.mobile.CalculateTopUpAmountReq.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.GetWalletInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.GetWalletInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.GetWalletInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetWalletInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    wallet: (f = msg.getWallet()) && proto.wallet.mobile.Wallet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.GetWalletInfoRes}
 */
proto.wallet.mobile.GetWalletInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.GetWalletInfoRes;
  return proto.wallet.mobile.GetWalletInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.GetWalletInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.GetWalletInfoRes}
 */
proto.wallet.mobile.GetWalletInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wallet.mobile.Wallet;
      reader.readMessage(value,proto.wallet.mobile.Wallet.deserializeBinaryFromReader);
      msg.setWallet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.GetWalletInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.GetWalletInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.GetWalletInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetWalletInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWallet();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wallet.mobile.Wallet.serializeBinaryToWriter
    );
  }
};


/**
 * optional Wallet wallet = 1;
 * @return {?proto.wallet.mobile.Wallet}
 */
proto.wallet.mobile.GetWalletInfoRes.prototype.getWallet = function() {
  return /** @type{?proto.wallet.mobile.Wallet} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.Wallet, 1));
};


/**
 * @param {?proto.wallet.mobile.Wallet|undefined} value
 * @return {!proto.wallet.mobile.GetWalletInfoRes} returns this
*/
proto.wallet.mobile.GetWalletInfoRes.prototype.setWallet = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.GetWalletInfoRes} returns this
 */
proto.wallet.mobile.GetWalletInfoRes.prototype.clearWallet = function() {
  return this.setWallet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.GetWalletInfoRes.prototype.hasWallet = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.TopUpRes.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.TopUpRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.TopUpRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    action: jspb.Message.getFieldWithDefault(msg, 2, 0),
    actionData: (f = msg.getActionData()) && proto.wallet.mobile.TopUpPaymentActionData.toObject(includeInstance, f),
    payment: (f = msg.getPayment()) && proto.wallet.mobile.TopUpPaymentInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.TopUpRes}
 */
proto.wallet.mobile.TopUpRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.TopUpRes;
  return proto.wallet.mobile.TopUpRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.TopUpRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.TopUpRes}
 */
proto.wallet.mobile.TopUpRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {!proto.wallet.mobile.TopUpPaymentAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 3:
      var value = new proto.wallet.mobile.TopUpPaymentActionData;
      reader.readMessage(value,proto.wallet.mobile.TopUpPaymentActionData.deserializeBinaryFromReader);
      msg.setActionData(value);
      break;
    case 4:
      var value = new proto.wallet.mobile.TopUpPaymentInfo;
      reader.readMessage(value,proto.wallet.mobile.TopUpPaymentInfo.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.TopUpRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.TopUpRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.TopUpRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TopUpRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getActionData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.wallet.mobile.TopUpPaymentActionData.serializeBinaryToWriter
    );
  }
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.wallet.mobile.TopUpPaymentInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.wallet.mobile.TopUpRes.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wallet.mobile.TopUpRes} returns this
 */
proto.wallet.mobile.TopUpRes.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional TopUpPaymentAction action = 2;
 * @return {!proto.wallet.mobile.TopUpPaymentAction}
 */
proto.wallet.mobile.TopUpRes.prototype.getAction = function() {
  return /** @type {!proto.wallet.mobile.TopUpPaymentAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.wallet.mobile.TopUpPaymentAction} value
 * @return {!proto.wallet.mobile.TopUpRes} returns this
 */
proto.wallet.mobile.TopUpRes.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional TopUpPaymentActionData action_data = 3;
 * @return {?proto.wallet.mobile.TopUpPaymentActionData}
 */
proto.wallet.mobile.TopUpRes.prototype.getActionData = function() {
  return /** @type{?proto.wallet.mobile.TopUpPaymentActionData} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.TopUpPaymentActionData, 3));
};


/**
 * @param {?proto.wallet.mobile.TopUpPaymentActionData|undefined} value
 * @return {!proto.wallet.mobile.TopUpRes} returns this
*/
proto.wallet.mobile.TopUpRes.prototype.setActionData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.TopUpRes} returns this
 */
proto.wallet.mobile.TopUpRes.prototype.clearActionData = function() {
  return this.setActionData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.TopUpRes.prototype.hasActionData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TopUpPaymentInfo payment = 4;
 * @return {?proto.wallet.mobile.TopUpPaymentInfo}
 */
proto.wallet.mobile.TopUpRes.prototype.getPayment = function() {
  return /** @type{?proto.wallet.mobile.TopUpPaymentInfo} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.TopUpPaymentInfo, 4));
};


/**
 * @param {?proto.wallet.mobile.TopUpPaymentInfo|undefined} value
 * @return {!proto.wallet.mobile.TopUpRes} returns this
*/
proto.wallet.mobile.TopUpRes.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.TopUpRes} returns this
 */
proto.wallet.mobile.TopUpRes.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.TopUpRes.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.CalculateTopUpAmountRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.CalculateTopUpAmountRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.CalculateTopUpAmountRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    totalPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    currencyCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    paymentMethod: (f = msg.getPaymentMethod()) && proto.wallet.mobile.TopUpPaymentMethod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.CalculateTopUpAmountRes}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.CalculateTopUpAmountRes;
  return proto.wallet.mobile.CalculateTopUpAmountRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.CalculateTopUpAmountRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.CalculateTopUpAmountRes}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalPrice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    case 7:
      var value = new proto.wallet.mobile.TopUpPaymentMethod;
      reader.readMessage(value,proto.wallet.mobile.TopUpPaymentMethod.deserializeBinaryFromReader);
      msg.setPaymentMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.CalculateTopUpAmountRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.CalculateTopUpAmountRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.CalculateTopUpAmountRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTotalPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.wallet.mobile.TopUpPaymentMethod.serializeBinaryToWriter
    );
  }
};


/**
 * optional double amount = 3;
 * @return {number}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.CalculateTopUpAmountRes} returns this
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double fee = 4;
 * @return {number}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.CalculateTopUpAmountRes} returns this
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double total_price = 5;
 * @return {number}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.getTotalPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.CalculateTopUpAmountRes} returns this
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.setTotalPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string currency_code = 6;
 * @return {string}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.CalculateTopUpAmountRes} returns this
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional TopUpPaymentMethod payment_method = 7;
 * @return {?proto.wallet.mobile.TopUpPaymentMethod}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.getPaymentMethod = function() {
  return /** @type{?proto.wallet.mobile.TopUpPaymentMethod} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.TopUpPaymentMethod, 7));
};


/**
 * @param {?proto.wallet.mobile.TopUpPaymentMethod|undefined} value
 * @return {!proto.wallet.mobile.CalculateTopUpAmountRes} returns this
*/
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.CalculateTopUpAmountRes} returns this
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.clearPaymentMethod = function() {
  return this.setPaymentMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.CalculateTopUpAmountRes.prototype.hasPaymentMethod = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * @enum {number}
 */
proto.wallet.mobile.TopUpPaymentAction = {
  TOP_UP_PAYMENT_ACTION_WEB_VIEW: 0,
  TOP_UP_PAYMENT_ACTION_BROWSER: 1,
  TOP_UP_PAYMENT_ACTION_IN_APP_SDK: 2
};

goog.object.extend(exports, proto.wallet.mobile);
