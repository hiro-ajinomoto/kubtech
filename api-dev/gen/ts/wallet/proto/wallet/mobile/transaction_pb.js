// source: proto/wallet/mobile/transaction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var proto_wallet_mobile_base_pb = require('../../../proto/wallet/mobile/base_pb.js');
goog.object.extend(proto, proto_wallet_mobile_base_pb);
goog.exportSymbol('proto.wallet.mobile.GetTransactionInfoReq', null, global);
goog.exportSymbol('proto.wallet.mobile.GetTransactionInfoRes', null, global);
goog.exportSymbol('proto.wallet.mobile.GetTransactionsHistoryReq', null, global);
goog.exportSymbol('proto.wallet.mobile.GetTransactionsHistoryRes', null, global);
goog.exportSymbol('proto.wallet.mobile.Transaction', null, global);
goog.exportSymbol('proto.wallet.mobile.TransactionMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.Transaction.displayName = 'proto.wallet.mobile.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.TransactionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.TransactionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.TransactionMetadata.displayName = 'proto.wallet.mobile.TransactionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.GetTransactionsHistoryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.GetTransactionsHistoryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.GetTransactionsHistoryReq.displayName = 'proto.wallet.mobile.GetTransactionsHistoryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.GetTransactionInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.GetTransactionInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.GetTransactionInfoReq.displayName = 'proto.wallet.mobile.GetTransactionInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.GetTransactionsHistoryRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wallet.mobile.GetTransactionsHistoryRes.repeatedFields_, null);
};
goog.inherits(proto.wallet.mobile.GetTransactionsHistoryRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.GetTransactionsHistoryRes.displayName = 'proto.wallet.mobile.GetTransactionsHistoryRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet.mobile.GetTransactionInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet.mobile.GetTransactionInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet.mobile.GetTransactionInfoRes.displayName = 'proto.wallet.mobile.GetTransactionInfoRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    time: jspb.Message.getFieldWithDefault(msg, 6, 0),
    fund: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lastBalance: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    metadata: (f = msg.getMetadata()) && proto.wallet.mobile.TransactionMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.Transaction}
 */
proto.wallet.mobile.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.Transaction;
  return proto.wallet.mobile.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.Transaction}
 */
proto.wallet.mobile.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.wallet.mobile.TransactionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.wallet.mobile.TransactionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFund(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastBalance(value);
      break;
    case 9:
      var value = new proto.wallet.mobile.TransactionMetadata;
      reader.readMessage(value,proto.wallet.mobile.TransactionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getFund();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLastBalance();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.wallet.mobile.TransactionMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wallet.mobile.Transaction.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TransactionStatus status = 2;
 * @return {!proto.wallet.mobile.TransactionStatus}
 */
proto.wallet.mobile.Transaction.prototype.getStatus = function() {
  return /** @type {!proto.wallet.mobile.TransactionStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.wallet.mobile.TransactionStatus} value
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional TransactionType type = 3;
 * @return {!proto.wallet.mobile.TransactionType}
 */
proto.wallet.mobile.Transaction.prototype.getType = function() {
  return /** @type {!proto.wallet.mobile.TransactionType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.wallet.mobile.TransactionType} value
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double amount = 4;
 * @return {number}
 */
proto.wallet.mobile.Transaction.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double fee = 5;
 * @return {number}
 */
proto.wallet.mobile.Transaction.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int64 time = 6;
 * @return {number}
 */
proto.wallet.mobile.Transaction.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string fund = 7;
 * @return {string}
 */
proto.wallet.mobile.Transaction.prototype.getFund = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.setFund = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double last_balance = 8;
 * @return {number}
 */
proto.wallet.mobile.Transaction.prototype.getLastBalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.setLastBalance = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional TransactionMetadata metadata = 9;
 * @return {?proto.wallet.mobile.TransactionMetadata}
 */
proto.wallet.mobile.Transaction.prototype.getMetadata = function() {
  return /** @type{?proto.wallet.mobile.TransactionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.TransactionMetadata, 9));
};


/**
 * @param {?proto.wallet.mobile.TransactionMetadata|undefined} value
 * @return {!proto.wallet.mobile.Transaction} returns this
*/
proto.wallet.mobile.Transaction.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.Transaction} returns this
 */
proto.wallet.mobile.Transaction.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.Transaction.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.TransactionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.TransactionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.TransactionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TransactionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serviceRefId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.TransactionMetadata}
 */
proto.wallet.mobile.TransactionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.TransactionMetadata;
  return proto.wallet.mobile.TransactionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.TransactionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.TransactionMetadata}
 */
proto.wallet.mobile.TransactionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceRefId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.TransactionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.TransactionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.TransactionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.TransactionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServiceRefId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.wallet.mobile.TransactionMetadata.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TransactionMetadata} returns this
 */
proto.wallet.mobile.TransactionMetadata.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string service_ref_id = 2;
 * @return {string}
 */
proto.wallet.mobile.TransactionMetadata.prototype.getServiceRefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TransactionMetadata} returns this
 */
proto.wallet.mobile.TransactionMetadata.prototype.setServiceRefId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.wallet.mobile.TransactionMetadata.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.TransactionMetadata} returns this
 */
proto.wallet.mobile.TransactionMetadata.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.GetTransactionsHistoryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.GetTransactionsHistoryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.GetTransactionsHistoryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetTransactionsHistoryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto_wallet_mobile_base_pb.PaginationReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.GetTransactionsHistoryReq}
 */
proto.wallet.mobile.GetTransactionsHistoryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.GetTransactionsHistoryReq;
  return proto.wallet.mobile.GetTransactionsHistoryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.GetTransactionsHistoryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.GetTransactionsHistoryReq}
 */
proto.wallet.mobile.GetTransactionsHistoryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_wallet_mobile_base_pb.PaginationReq;
      reader.readMessage(value,proto_wallet_mobile_base_pb.PaginationReq.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.GetTransactionsHistoryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.GetTransactionsHistoryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.GetTransactionsHistoryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetTransactionsHistoryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_wallet_mobile_base_pb.PaginationReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional PaginationReq pagination = 1;
 * @return {?proto.wallet.mobile.PaginationReq}
 */
proto.wallet.mobile.GetTransactionsHistoryReq.prototype.getPagination = function() {
  return /** @type{?proto.wallet.mobile.PaginationReq} */ (
    jspb.Message.getWrapperField(this, proto_wallet_mobile_base_pb.PaginationReq, 1));
};


/**
 * @param {?proto.wallet.mobile.PaginationReq|undefined} value
 * @return {!proto.wallet.mobile.GetTransactionsHistoryReq} returns this
*/
proto.wallet.mobile.GetTransactionsHistoryReq.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.GetTransactionsHistoryReq} returns this
 */
proto.wallet.mobile.GetTransactionsHistoryReq.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.GetTransactionsHistoryReq.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.GetTransactionInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.GetTransactionInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.GetTransactionInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetTransactionInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.GetTransactionInfoReq}
 */
proto.wallet.mobile.GetTransactionInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.GetTransactionInfoReq;
  return proto.wallet.mobile.GetTransactionInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.GetTransactionInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.GetTransactionInfoReq}
 */
proto.wallet.mobile.GetTransactionInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.GetTransactionInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.GetTransactionInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.GetTransactionInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetTransactionInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string transaction_id = 1;
 * @return {string}
 */
proto.wallet.mobile.GetTransactionInfoReq.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet.mobile.GetTransactionInfoReq} returns this
 */
proto.wallet.mobile.GetTransactionInfoReq.prototype.setTransactionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wallet.mobile.GetTransactionsHistoryRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.GetTransactionsHistoryRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.GetTransactionsHistoryRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetTransactionsHistoryRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.wallet.mobile.Transaction.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && proto_wallet_mobile_base_pb.PaginationRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.GetTransactionsHistoryRes}
 */
proto.wallet.mobile.GetTransactionsHistoryRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.GetTransactionsHistoryRes;
  return proto.wallet.mobile.GetTransactionsHistoryRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.GetTransactionsHistoryRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.GetTransactionsHistoryRes}
 */
proto.wallet.mobile.GetTransactionsHistoryRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wallet.mobile.Transaction;
      reader.readMessage(value,proto.wallet.mobile.Transaction.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    case 2:
      var value = new proto_wallet_mobile_base_pb.PaginationRes;
      reader.readMessage(value,proto_wallet_mobile_base_pb.PaginationRes.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.GetTransactionsHistoryRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.GetTransactionsHistoryRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetTransactionsHistoryRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.wallet.mobile.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_wallet_mobile_base_pb.PaginationRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Transaction transactions = 1;
 * @return {!Array<!proto.wallet.mobile.Transaction>}
 */
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.wallet.mobile.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wallet.mobile.Transaction, 1));
};


/**
 * @param {!Array<!proto.wallet.mobile.Transaction>} value
 * @return {!proto.wallet.mobile.GetTransactionsHistoryRes} returns this
*/
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.setTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.wallet.mobile.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wallet.mobile.Transaction}
 */
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.wallet.mobile.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wallet.mobile.GetTransactionsHistoryRes} returns this
 */
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.clearTransactionsList = function() {
  return this.setTransactionsList([]);
};


/**
 * optional PaginationRes pagination = 2;
 * @return {?proto.wallet.mobile.PaginationRes}
 */
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.getPagination = function() {
  return /** @type{?proto.wallet.mobile.PaginationRes} */ (
    jspb.Message.getWrapperField(this, proto_wallet_mobile_base_pb.PaginationRes, 2));
};


/**
 * @param {?proto.wallet.mobile.PaginationRes|undefined} value
 * @return {!proto.wallet.mobile.GetTransactionsHistoryRes} returns this
*/
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.GetTransactionsHistoryRes} returns this
 */
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.GetTransactionsHistoryRes.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet.mobile.GetTransactionInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet.mobile.GetTransactionInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet.mobile.GetTransactionInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetTransactionInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.wallet.mobile.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet.mobile.GetTransactionInfoRes}
 */
proto.wallet.mobile.GetTransactionInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet.mobile.GetTransactionInfoRes;
  return proto.wallet.mobile.GetTransactionInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet.mobile.GetTransactionInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet.mobile.GetTransactionInfoRes}
 */
proto.wallet.mobile.GetTransactionInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wallet.mobile.Transaction;
      reader.readMessage(value,proto.wallet.mobile.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet.mobile.GetTransactionInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet.mobile.GetTransactionInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet.mobile.GetTransactionInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet.mobile.GetTransactionInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wallet.mobile.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional Transaction transaction = 1;
 * @return {?proto.wallet.mobile.Transaction}
 */
proto.wallet.mobile.GetTransactionInfoRes.prototype.getTransaction = function() {
  return /** @type{?proto.wallet.mobile.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.wallet.mobile.Transaction, 1));
};


/**
 * @param {?proto.wallet.mobile.Transaction|undefined} value
 * @return {!proto.wallet.mobile.GetTransactionInfoRes} returns this
*/
proto.wallet.mobile.GetTransactionInfoRes.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet.mobile.GetTransactionInfoRes} returns this
 */
proto.wallet.mobile.GetTransactionInfoRes.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet.mobile.GetTransactionInfoRes.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.wallet.mobile);
