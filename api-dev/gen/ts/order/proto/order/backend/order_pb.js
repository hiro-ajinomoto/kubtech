// source: proto/order/backend/order.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var proto_order_backend_base_pb = require('../../../proto/order/backend/base_pb.js');
goog.object.extend(proto, proto_order_backend_base_pb);
goog.exportSymbol('proto.order.backend.ExpireOrdersReq', null, global);
goog.exportSymbol('proto.order.backend.ExpireOrdersRes', null, global);
goog.exportSymbol('proto.order.backend.GetOrderByIdsReq', null, global);
goog.exportSymbol('proto.order.backend.GetOrderByIdsRes', null, global);
goog.exportSymbol('proto.order.backend.InstallmentInfo', null, global);
goog.exportSymbol('proto.order.backend.OrderCurrencyInfo', null, global);
goog.exportSymbol('proto.order.backend.OrderInfo', null, global);
goog.exportSymbol('proto.order.backend.OrderPaymentMethod', null, global);
goog.exportSymbol('proto.order.backend.OrderPaymentMethodInfo', null, global);
goog.exportSymbol('proto.order.backend.OrderProductAttribute', null, global);
goog.exportSymbol('proto.order.backend.OrderProductAttribute.Value', null, global);
goog.exportSymbol('proto.order.backend.OrderProductCurrencyInfo', null, global);
goog.exportSymbol('proto.order.backend.OrderProductInfo', null, global);
goog.exportSymbol('proto.order.backend.OrderProductInfoItem', null, global);
goog.exportSymbol('proto.order.backend.OrderProductItem', null, global);
goog.exportSymbol('proto.order.backend.OrderProductPurchaseType', null, global);
goog.exportSymbol('proto.order.backend.OrderPromotionInfo', null, global);
goog.exportSymbol('proto.order.backend.OrderStatus', null, global);
goog.exportSymbol('proto.order.backend.OrderType', null, global);
goog.exportSymbol('proto.order.backend.ProductStatus', null, global);
goog.exportSymbol('proto.order.backend.ShippingAddressInfo', null, global);
goog.exportSymbol('proto.order.backend.ShippingAddressType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.backend.OrderInfo.repeatedFields_, null);
};
goog.inherits(proto.order.backend.OrderInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderInfo.displayName = 'proto.order.backend.OrderInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderProductInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.backend.OrderProductInfo.repeatedFields_, null);
};
goog.inherits(proto.order.backend.OrderProductInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderProductInfo.displayName = 'proto.order.backend.OrderProductInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderProductCurrencyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.OrderProductCurrencyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderProductCurrencyInfo.displayName = 'proto.order.backend.OrderProductCurrencyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderProductInfoItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.OrderProductInfoItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderProductInfoItem.displayName = 'proto.order.backend.OrderProductInfoItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderPaymentMethodInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.OrderPaymentMethodInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderPaymentMethodInfo.displayName = 'proto.order.backend.OrderPaymentMethodInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderPromotionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.OrderPromotionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderPromotionInfo.displayName = 'proto.order.backend.OrderPromotionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderCurrencyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.OrderCurrencyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderCurrencyInfo.displayName = 'proto.order.backend.OrderCurrencyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderProductItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.OrderProductItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderProductItem.displayName = 'proto.order.backend.OrderProductItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.ShippingAddressInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.ShippingAddressInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.ShippingAddressInfo.displayName = 'proto.order.backend.ShippingAddressInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.InstallmentInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.InstallmentInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.InstallmentInfo.displayName = 'proto.order.backend.InstallmentInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderProductAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.backend.OrderProductAttribute.repeatedFields_, null);
};
goog.inherits(proto.order.backend.OrderProductAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderProductAttribute.displayName = 'proto.order.backend.OrderProductAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.OrderProductAttribute.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.OrderProductAttribute.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.OrderProductAttribute.Value.displayName = 'proto.order.backend.OrderProductAttribute.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.GetOrderByIdsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.backend.GetOrderByIdsReq.repeatedFields_, null);
};
goog.inherits(proto.order.backend.GetOrderByIdsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.GetOrderByIdsReq.displayName = 'proto.order.backend.GetOrderByIdsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.ExpireOrdersReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.ExpireOrdersReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.ExpireOrdersReq.displayName = 'proto.order.backend.ExpireOrdersReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.GetOrderByIdsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.backend.GetOrderByIdsRes.repeatedFields_, null);
};
goog.inherits(proto.order.backend.GetOrderByIdsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.GetOrderByIdsRes.displayName = 'proto.order.backend.GetOrderByIdsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.backend.ExpireOrdersRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.backend.ExpireOrdersRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.backend.ExpireOrdersRes.displayName = 'proto.order.backend.ExpireOrdersRes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.backend.OrderInfo.repeatedFields_ = [10,13,19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cartId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    currency: (f = msg.getCurrency()) && proto.order.backend.OrderCurrencyInfo.toObject(includeInstance, f),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.order.backend.OrderProductInfoItem.toObject, includeInstance),
    totalProductAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    paymentMethod: (f = msg.getPaymentMethod()) && proto.order.backend.OrderPaymentMethodInfo.toObject(includeInstance, f),
    promotionsList: jspb.Message.toObjectList(msg.getPromotionsList(),
    proto.order.backend.OrderPromotionInfo.toObject, includeInstance),
    totalDiscountAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    status: jspb.Message.getFieldWithDefault(msg, 15, 0),
    shippingAddress: (f = msg.getShippingAddress()) && proto.order.backend.ShippingAddressInfo.toObject(includeInstance, f),
    shippingFeeAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    installment: (f = msg.getInstallment()) && proto.order.backend.InstallmentInfo.toObject(includeInstance, f),
    extraServicesList: jspb.Message.toObjectList(msg.getExtraServicesList(),
    proto.order.backend.OrderProductInfoItem.toObject, includeInstance),
    extraServicesAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    feeAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    totalAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
    orderCode: jspb.Message.getFieldWithDefault(msg, 23, ""),
    orderType: jspb.Message.getFieldWithDefault(msg, 24, 0),
    note: jspb.Message.getFieldWithDefault(msg, 25, ""),
    expiredTime: jspb.Message.getFieldWithDefault(msg, 26, 0),
    paymentId: jspb.Message.getFieldWithDefault(msg, 27, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderInfo}
 */
proto.order.backend.OrderInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderInfo;
  return proto.order.backend.OrderInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderInfo}
 */
proto.order.backend.OrderInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCartId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 9:
      var value = new proto.order.backend.OrderCurrencyInfo;
      reader.readMessage(value,proto.order.backend.OrderCurrencyInfo.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 10:
      var value = new proto.order.backend.OrderProductInfoItem;
      reader.readMessage(value,proto.order.backend.OrderProductInfoItem.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalProductAmount(value);
      break;
    case 12:
      var value = new proto.order.backend.OrderPaymentMethodInfo;
      reader.readMessage(value,proto.order.backend.OrderPaymentMethodInfo.deserializeBinaryFromReader);
      msg.setPaymentMethod(value);
      break;
    case 13:
      var value = new proto.order.backend.OrderPromotionInfo;
      reader.readMessage(value,proto.order.backend.OrderPromotionInfo.deserializeBinaryFromReader);
      msg.addPromotions(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalDiscountAmount(value);
      break;
    case 15:
      var value = /** @type {!proto.order.backend.OrderStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 16:
      var value = new proto.order.backend.ShippingAddressInfo;
      reader.readMessage(value,proto.order.backend.ShippingAddressInfo.deserializeBinaryFromReader);
      msg.setShippingAddress(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setShippingFeeAmount(value);
      break;
    case 18:
      var value = new proto.order.backend.InstallmentInfo;
      reader.readMessage(value,proto.order.backend.InstallmentInfo.deserializeBinaryFromReader);
      msg.setInstallment(value);
      break;
    case 19:
      var value = new proto.order.backend.OrderProductInfoItem;
      reader.readMessage(value,proto.order.backend.OrderProductInfoItem.deserializeBinaryFromReader);
      msg.addExtraServices(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExtraServicesAmount(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFeeAmount(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalAmount(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderCode(value);
      break;
    case 24:
      var value = /** @type {!proto.order.backend.OrderType} */ (reader.readEnum());
      msg.setOrderType(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiredTime(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCartId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.order.backend.OrderCurrencyInfo.serializeBinaryToWriter
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.order.backend.OrderProductInfoItem.serializeBinaryToWriter
    );
  }
  f = message.getTotalProductAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.order.backend.OrderPaymentMethodInfo.serializeBinaryToWriter
    );
  }
  f = message.getPromotionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.order.backend.OrderPromotionInfo.serializeBinaryToWriter
    );
  }
  f = message.getTotalDiscountAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getShippingAddress();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.order.backend.ShippingAddressInfo.serializeBinaryToWriter
    );
  }
  f = message.getShippingFeeAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getInstallment();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.order.backend.InstallmentInfo.serializeBinaryToWriter
    );
  }
  f = message.getExtraServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.order.backend.OrderProductInfoItem.serializeBinaryToWriter
    );
  }
  f = message.getExtraServicesAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getFeeAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getTotalAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = message.getOrderCode();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getOrderType();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getExpiredTime();
  if (f !== 0) {
    writer.writeInt64(
      26,
      f
    );
  }
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string created_by = 4;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_by = 5;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string partnership_id = 6;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string cart_id = 7;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getCartId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setCartId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string user_id = 8;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional OrderCurrencyInfo currency = 9;
 * @return {?proto.order.backend.OrderCurrencyInfo}
 */
proto.order.backend.OrderInfo.prototype.getCurrency = function() {
  return /** @type{?proto.order.backend.OrderCurrencyInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.backend.OrderCurrencyInfo, 9));
};


/**
 * @param {?proto.order.backend.OrderCurrencyInfo|undefined} value
 * @return {!proto.order.backend.OrderInfo} returns this
*/
proto.order.backend.OrderInfo.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.backend.OrderInfo.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated OrderProductInfoItem products = 10;
 * @return {!Array<!proto.order.backend.OrderProductInfoItem>}
 */
proto.order.backend.OrderInfo.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.order.backend.OrderProductInfoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.backend.OrderProductInfoItem, 10));
};


/**
 * @param {!Array<!proto.order.backend.OrderProductInfoItem>} value
 * @return {!proto.order.backend.OrderInfo} returns this
*/
proto.order.backend.OrderInfo.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.order.backend.OrderProductInfoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.backend.OrderProductInfoItem}
 */
proto.order.backend.OrderInfo.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.order.backend.OrderProductInfoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional double total_product_amount = 11;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getTotalProductAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setTotalProductAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional OrderPaymentMethodInfo payment_method = 12;
 * @return {?proto.order.backend.OrderPaymentMethodInfo}
 */
proto.order.backend.OrderInfo.prototype.getPaymentMethod = function() {
  return /** @type{?proto.order.backend.OrderPaymentMethodInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.backend.OrderPaymentMethodInfo, 12));
};


/**
 * @param {?proto.order.backend.OrderPaymentMethodInfo|undefined} value
 * @return {!proto.order.backend.OrderInfo} returns this
*/
proto.order.backend.OrderInfo.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.clearPaymentMethod = function() {
  return this.setPaymentMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.backend.OrderInfo.prototype.hasPaymentMethod = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated OrderPromotionInfo promotions = 13;
 * @return {!Array<!proto.order.backend.OrderPromotionInfo>}
 */
proto.order.backend.OrderInfo.prototype.getPromotionsList = function() {
  return /** @type{!Array<!proto.order.backend.OrderPromotionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.backend.OrderPromotionInfo, 13));
};


/**
 * @param {!Array<!proto.order.backend.OrderPromotionInfo>} value
 * @return {!proto.order.backend.OrderInfo} returns this
*/
proto.order.backend.OrderInfo.prototype.setPromotionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.order.backend.OrderPromotionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.backend.OrderPromotionInfo}
 */
proto.order.backend.OrderInfo.prototype.addPromotions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.order.backend.OrderPromotionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.clearPromotionsList = function() {
  return this.setPromotionsList([]);
};


/**
 * optional double total_discount_amount = 14;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getTotalDiscountAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setTotalDiscountAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional OrderStatus status = 15;
 * @return {!proto.order.backend.OrderStatus}
 */
proto.order.backend.OrderInfo.prototype.getStatus = function() {
  return /** @type {!proto.order.backend.OrderStatus} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.order.backend.OrderStatus} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional ShippingAddressInfo shipping_address = 16;
 * @return {?proto.order.backend.ShippingAddressInfo}
 */
proto.order.backend.OrderInfo.prototype.getShippingAddress = function() {
  return /** @type{?proto.order.backend.ShippingAddressInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.backend.ShippingAddressInfo, 16));
};


/**
 * @param {?proto.order.backend.ShippingAddressInfo|undefined} value
 * @return {!proto.order.backend.OrderInfo} returns this
*/
proto.order.backend.OrderInfo.prototype.setShippingAddress = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.clearShippingAddress = function() {
  return this.setShippingAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.backend.OrderInfo.prototype.hasShippingAddress = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double shipping_fee_amount = 17;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getShippingFeeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setShippingFeeAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional InstallmentInfo installment = 18;
 * @return {?proto.order.backend.InstallmentInfo}
 */
proto.order.backend.OrderInfo.prototype.getInstallment = function() {
  return /** @type{?proto.order.backend.InstallmentInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.backend.InstallmentInfo, 18));
};


/**
 * @param {?proto.order.backend.InstallmentInfo|undefined} value
 * @return {!proto.order.backend.OrderInfo} returns this
*/
proto.order.backend.OrderInfo.prototype.setInstallment = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.clearInstallment = function() {
  return this.setInstallment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.backend.OrderInfo.prototype.hasInstallment = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * repeated OrderProductInfoItem extra_services = 19;
 * @return {!Array<!proto.order.backend.OrderProductInfoItem>}
 */
proto.order.backend.OrderInfo.prototype.getExtraServicesList = function() {
  return /** @type{!Array<!proto.order.backend.OrderProductInfoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.backend.OrderProductInfoItem, 19));
};


/**
 * @param {!Array<!proto.order.backend.OrderProductInfoItem>} value
 * @return {!proto.order.backend.OrderInfo} returns this
*/
proto.order.backend.OrderInfo.prototype.setExtraServicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.order.backend.OrderProductInfoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.backend.OrderProductInfoItem}
 */
proto.order.backend.OrderInfo.prototype.addExtraServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.order.backend.OrderProductInfoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.clearExtraServicesList = function() {
  return this.setExtraServicesList([]);
};


/**
 * optional double extra_services_amount = 20;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getExtraServicesAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setExtraServicesAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional double fee_amount = 21;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getFeeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setFeeAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional double total_amount = 22;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getTotalAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setTotalAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional string order_code = 23;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getOrderCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setOrderCode = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional OrderType order_type = 24;
 * @return {!proto.order.backend.OrderType}
 */
proto.order.backend.OrderInfo.prototype.getOrderType = function() {
  return /** @type {!proto.order.backend.OrderType} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {!proto.order.backend.OrderType} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setOrderType = function(value) {
  return jspb.Message.setProto3EnumField(this, 24, value);
};


/**
 * optional string note = 25;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional int64 expired_time = 26;
 * @return {number}
 */
proto.order.backend.OrderInfo.prototype.getExpiredTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setExpiredTime = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string payment_id = 27;
 * @return {string}
 */
proto.order.backend.OrderInfo.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderInfo} returns this
 */
proto.order.backend.OrderInfo.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.backend.OrderProductInfo.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderProductInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderProductInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderProductInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mediasList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    tagsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    sku: jspb.Message.getFieldWithDefault(msg, 6, ""),
    listedPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    discountPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    uom: jspb.Message.getFieldWithDefault(msg, 10, ""),
    barcode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    currency: (f = msg.getCurrency()) && proto.order.backend.OrderProductCurrencyInfo.toObject(includeInstance, f),
    brand: jspb.Message.getFieldWithDefault(msg, 13, ""),
    unlimited: jspb.Message.getFieldWithDefault(msg, 14, 0),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    country: jspb.Message.getFieldWithDefault(msg, 16, ""),
    language: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderProductInfo}
 */
proto.order.backend.OrderProductInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderProductInfo;
  return proto.order.backend.OrderProductInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderProductInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderProductInfo}
 */
proto.order.backend.OrderProductInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.order.backend.ProductStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMedias(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setListedPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountPercent(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUom(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcode(value);
      break;
    case 12:
      var value = new proto.order.backend.OrderProductCurrencyInfo;
      reader.readMessage(value,proto.order.backend.OrderProductCurrencyInfo.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    case 14:
      var value = /** @type {!proto.order.backend.Boolean} */ (reader.readEnum());
      msg.setUnlimited(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderProductInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderProductInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderProductInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMediasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getListedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getDiscountPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getUom();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBarcode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.order.backend.OrderProductCurrencyInfo.serializeBinaryToWriter
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUnlimited();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ProductStatus status = 2;
 * @return {!proto.order.backend.ProductStatus}
 */
proto.order.backend.OrderProductInfo.prototype.getStatus = function() {
  return /** @type {!proto.order.backend.ProductStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.order.backend.ProductStatus} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string medias = 4;
 * @return {!Array<string>}
 */
proto.order.backend.OrderProductInfo.prototype.getMediasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setMediasList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.addMedias = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.clearMediasList = function() {
  return this.setMediasList([]);
};


/**
 * repeated string tags = 5;
 * @return {!Array<string>}
 */
proto.order.backend.OrderProductInfo.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string sku = 6;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double listed_price = 7;
 * @return {number}
 */
proto.order.backend.OrderProductInfo.prototype.getListedPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setListedPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double discount_percent = 8;
 * @return {number}
 */
proto.order.backend.OrderProductInfo.prototype.getDiscountPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setDiscountPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double price = 9;
 * @return {number}
 */
proto.order.backend.OrderProductInfo.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string uom = 10;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getUom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setUom = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string barcode = 11;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getBarcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setBarcode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional OrderProductCurrencyInfo currency = 12;
 * @return {?proto.order.backend.OrderProductCurrencyInfo}
 */
proto.order.backend.OrderProductInfo.prototype.getCurrency = function() {
  return /** @type{?proto.order.backend.OrderProductCurrencyInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.backend.OrderProductCurrencyInfo, 12));
};


/**
 * @param {?proto.order.backend.OrderProductCurrencyInfo|undefined} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
*/
proto.order.backend.OrderProductInfo.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.backend.OrderProductInfo.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string brand = 13;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setBrand = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional Boolean unlimited = 14;
 * @return {!proto.order.backend.Boolean}
 */
proto.order.backend.OrderProductInfo.prototype.getUnlimited = function() {
  return /** @type {!proto.order.backend.Boolean} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.order.backend.Boolean} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setUnlimited = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional string partnership_id = 15;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string country = 16;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string language = 17;
 * @return {string}
 */
proto.order.backend.OrderProductInfo.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductInfo} returns this
 */
proto.order.backend.OrderProductInfo.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderProductCurrencyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderProductCurrencyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductCurrencyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderProductCurrencyInfo}
 */
proto.order.backend.OrderProductCurrencyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderProductCurrencyInfo;
  return proto.order.backend.OrderProductCurrencyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderProductCurrencyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderProductCurrencyInfo}
 */
proto.order.backend.OrderProductCurrencyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderProductCurrencyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderProductCurrencyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductCurrencyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductCurrencyInfo} returns this
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductCurrencyInfo} returns this
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductCurrencyInfo} returns this
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon = 4;
 * @return {string}
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductCurrencyInfo} returns this
 */
proto.order.backend.OrderProductCurrencyInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderProductInfoItem.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderProductInfoItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderProductInfoItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductInfoItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    productInfo: (f = msg.getProductInfo()) && proto.order.backend.OrderProductInfo.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderProductInfoItem}
 */
proto.order.backend.OrderProductInfoItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderProductInfoItem;
  return proto.order.backend.OrderProductInfoItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderProductInfoItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderProductInfoItem}
 */
proto.order.backend.OrderProductInfoItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.backend.OrderProductInfo;
      reader.readMessage(value,proto.order.backend.OrderProductInfo.deserializeBinaryFromReader);
      msg.setProductInfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderProductInfoItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderProductInfoItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderProductInfoItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductInfoItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.order.backend.OrderProductInfo.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional OrderProductInfo product_info = 1;
 * @return {?proto.order.backend.OrderProductInfo}
 */
proto.order.backend.OrderProductInfoItem.prototype.getProductInfo = function() {
  return /** @type{?proto.order.backend.OrderProductInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.backend.OrderProductInfo, 1));
};


/**
 * @param {?proto.order.backend.OrderProductInfo|undefined} value
 * @return {!proto.order.backend.OrderProductInfoItem} returns this
*/
proto.order.backend.OrderProductInfoItem.prototype.setProductInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.backend.OrderProductInfoItem} returns this
 */
proto.order.backend.OrderProductInfoItem.prototype.clearProductInfo = function() {
  return this.setProductInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.backend.OrderProductInfoItem.prototype.hasProductInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 quantity = 2;
 * @return {number}
 */
proto.order.backend.OrderProductInfoItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderProductInfoItem} returns this
 */
proto.order.backend.OrderProductInfoItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderPaymentMethodInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderPaymentMethodInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderPaymentMethodInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    method: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    additionalFee: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    displayFee: jspb.Message.getFieldWithDefault(msg, 6, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 7, ""),
    id: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderPaymentMethodInfo}
 */
proto.order.backend.OrderPaymentMethodInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderPaymentMethodInfo;
  return proto.order.backend.OrderPaymentMethodInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderPaymentMethodInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderPaymentMethodInfo}
 */
proto.order.backend.OrderPaymentMethodInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {!proto.order.backend.OrderPaymentMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAdditionalFee(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderPaymentMethodInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderPaymentMethodInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderPaymentMethodInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getAdditionalFee();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getDisplayFee();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPaymentMethodInfo} returns this
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPaymentMethodInfo} returns this
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OrderPaymentMethod method = 3;
 * @return {!proto.order.backend.OrderPaymentMethod}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.getMethod = function() {
  return /** @type {!proto.order.backend.OrderPaymentMethod} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.order.backend.OrderPaymentMethod} value
 * @return {!proto.order.backend.OrderPaymentMethodInfo} returns this
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double fee = 4;
 * @return {number}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderPaymentMethodInfo} returns this
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double additional_fee = 5;
 * @return {number}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.getAdditionalFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderPaymentMethodInfo} returns this
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.setAdditionalFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string display_fee = 6;
 * @return {string}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.getDisplayFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPaymentMethodInfo} returns this
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.setDisplayFee = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string icon = 7;
 * @return {string}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPaymentMethodInfo} returns this
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPaymentMethodInfo} returns this
 */
proto.order.backend.OrderPaymentMethodInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderPromotionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderPromotionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderPromotionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderPromotionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shortDesc: jspb.Message.getFieldWithDefault(msg, 3, ""),
    code: jspb.Message.getFieldWithDefault(msg, 4, ""),
    coverImage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    discountPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderPromotionInfo}
 */
proto.order.backend.OrderPromotionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderPromotionInfo;
  return proto.order.backend.OrderPromotionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderPromotionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderPromotionInfo}
 */
proto.order.backend.OrderPromotionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortDesc(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoverImage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountPercent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderPromotionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderPromotionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderPromotionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderPromotionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShortDesc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCoverImage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDiscountPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.backend.OrderPromotionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPromotionInfo} returns this
 */
proto.order.backend.OrderPromotionInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.backend.OrderPromotionInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPromotionInfo} returns this
 */
proto.order.backend.OrderPromotionInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string short_desc = 3;
 * @return {string}
 */
proto.order.backend.OrderPromotionInfo.prototype.getShortDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPromotionInfo} returns this
 */
proto.order.backend.OrderPromotionInfo.prototype.setShortDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string code = 4;
 * @return {string}
 */
proto.order.backend.OrderPromotionInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPromotionInfo} returns this
 */
proto.order.backend.OrderPromotionInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string cover_image = 5;
 * @return {string}
 */
proto.order.backend.OrderPromotionInfo.prototype.getCoverImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderPromotionInfo} returns this
 */
proto.order.backend.OrderPromotionInfo.prototype.setCoverImage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double discount_percent = 6;
 * @return {number}
 */
proto.order.backend.OrderPromotionInfo.prototype.getDiscountPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderPromotionInfo} returns this
 */
proto.order.backend.OrderPromotionInfo.prototype.setDiscountPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderCurrencyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderCurrencyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderCurrencyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderCurrencyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderCurrencyInfo}
 */
proto.order.backend.OrderCurrencyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderCurrencyInfo;
  return proto.order.backend.OrderCurrencyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderCurrencyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderCurrencyInfo}
 */
proto.order.backend.OrderCurrencyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderCurrencyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderCurrencyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderCurrencyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderCurrencyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.backend.OrderCurrencyInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderCurrencyInfo} returns this
 */
proto.order.backend.OrderCurrencyInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.backend.OrderCurrencyInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderCurrencyInfo} returns this
 */
proto.order.backend.OrderCurrencyInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.order.backend.OrderCurrencyInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderCurrencyInfo} returns this
 */
proto.order.backend.OrderCurrencyInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon = 4;
 * @return {string}
 */
proto.order.backend.OrderCurrencyInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderCurrencyInfo} returns this
 */
proto.order.backend.OrderCurrencyInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderProductItem.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderProductItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderProductItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    packageId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderProductItem}
 */
proto.order.backend.OrderProductItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderProductItem;
  return proto.order.backend.OrderProductItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderProductItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderProductItem}
 */
proto.order.backend.OrderProductItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderProductItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderProductItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderProductItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPackageId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.order.backend.OrderProductItem.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductItem} returns this
 */
proto.order.backend.OrderProductItem.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string package_id = 2;
 * @return {string}
 */
proto.order.backend.OrderProductItem.prototype.getPackageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductItem} returns this
 */
proto.order.backend.OrderProductItem.prototype.setPackageId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 quantity = 3;
 * @return {number}
 */
proto.order.backend.OrderProductItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.OrderProductItem} returns this
 */
proto.order.backend.OrderProductItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.ShippingAddressInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.ShippingAddressInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.ShippingAddressInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.ShippingAddressInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    city: jspb.Message.getFieldWithDefault(msg, 3, ""),
    district: jspb.Message.getFieldWithDefault(msg, 4, ""),
    region: jspb.Message.getFieldWithDefault(msg, 5, ""),
    postcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    country: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    name: jspb.Message.getFieldWithDefault(msg, 10, ""),
    phoneCode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.ShippingAddressInfo}
 */
proto.order.backend.ShippingAddressInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.ShippingAddressInfo;
  return proto.order.backend.ShippingAddressInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.ShippingAddressInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.ShippingAddressInfo}
 */
proto.order.backend.ShippingAddressInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.order.backend.ShippingAddressType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistrict(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneCode(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.ShippingAddressInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.ShippingAddressInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.ShippingAddressInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.ShippingAddressInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDistrict();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPostcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPhoneCode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional ShippingAddressType type = 1;
 * @return {!proto.order.backend.ShippingAddressType}
 */
proto.order.backend.ShippingAddressInfo.prototype.getType = function() {
  return /** @type {!proto.order.backend.ShippingAddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.order.backend.ShippingAddressType} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string city = 3;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string district = 4;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getDistrict = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setDistrict = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string region = 5;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string postcode = 6;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double lat = 8;
 * @return {number}
 */
proto.order.backend.ShippingAddressInfo.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double lon = 9;
 * @return {number}
 */
proto.order.backend.ShippingAddressInfo.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string phone_code = 11;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getPhoneCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setPhoneCode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string phone_number = 12;
 * @return {string}
 */
proto.order.backend.ShippingAddressInfo.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.ShippingAddressInfo} returns this
 */
proto.order.backend.ShippingAddressInfo.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.InstallmentInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.InstallmentInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.InstallmentInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.InstallmentInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.InstallmentInfo}
 */
proto.order.backend.InstallmentInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.InstallmentInfo;
  return proto.order.backend.InstallmentInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.InstallmentInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.InstallmentInfo}
 */
proto.order.backend.InstallmentInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDuration(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.InstallmentInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.InstallmentInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.InstallmentInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.InstallmentInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDuration();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.backend.InstallmentInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.InstallmentInfo} returns this
 */
proto.order.backend.InstallmentInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string duration = 2;
 * @return {string}
 */
proto.order.backend.InstallmentInfo.prototype.getDuration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.InstallmentInfo} returns this
 */
proto.order.backend.InstallmentInfo.prototype.setDuration = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double fee = 3;
 * @return {number}
 */
proto.order.backend.InstallmentInfo.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.backend.InstallmentInfo} returns this
 */
proto.order.backend.InstallmentInfo.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.backend.OrderProductAttribute.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderProductAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderProductAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderProductAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    masterDataId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.order.backend.OrderProductAttribute.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderProductAttribute}
 */
proto.order.backend.OrderProductAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderProductAttribute;
  return proto.order.backend.OrderProductAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderProductAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderProductAttribute}
 */
proto.order.backend.OrderProductAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMasterDataId(value);
      break;
    case 2:
      var value = new proto.order.backend.OrderProductAttribute.Value;
      reader.readMessage(value,proto.order.backend.OrderProductAttribute.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderProductAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderProductAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderProductAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMasterDataId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.order.backend.OrderProductAttribute.Value.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.OrderProductAttribute.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.OrderProductAttribute.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.OrderProductAttribute.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductAttribute.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    language: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.OrderProductAttribute.Value}
 */
proto.order.backend.OrderProductAttribute.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.OrderProductAttribute.Value;
  return proto.order.backend.OrderProductAttribute.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.OrderProductAttribute.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.OrderProductAttribute.Value}
 */
proto.order.backend.OrderProductAttribute.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.OrderProductAttribute.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.OrderProductAttribute.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.OrderProductAttribute.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.OrderProductAttribute.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string language = 1;
 * @return {string}
 */
proto.order.backend.OrderProductAttribute.Value.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductAttribute.Value} returns this
 */
proto.order.backend.OrderProductAttribute.Value.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.order.backend.OrderProductAttribute.Value.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductAttribute.Value} returns this
 */
proto.order.backend.OrderProductAttribute.Value.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string master_data_id = 1;
 * @return {string}
 */
proto.order.backend.OrderProductAttribute.prototype.getMasterDataId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.backend.OrderProductAttribute} returns this
 */
proto.order.backend.OrderProductAttribute.prototype.setMasterDataId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Value values = 2;
 * @return {!Array<!proto.order.backend.OrderProductAttribute.Value>}
 */
proto.order.backend.OrderProductAttribute.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.order.backend.OrderProductAttribute.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.backend.OrderProductAttribute.Value, 2));
};


/**
 * @param {!Array<!proto.order.backend.OrderProductAttribute.Value>} value
 * @return {!proto.order.backend.OrderProductAttribute} returns this
*/
proto.order.backend.OrderProductAttribute.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.order.backend.OrderProductAttribute.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.backend.OrderProductAttribute.Value}
 */
proto.order.backend.OrderProductAttribute.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.order.backend.OrderProductAttribute.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.backend.OrderProductAttribute} returns this
 */
proto.order.backend.OrderProductAttribute.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.backend.GetOrderByIdsReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.GetOrderByIdsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.GetOrderByIdsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.GetOrderByIdsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.GetOrderByIdsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.GetOrderByIdsReq}
 */
proto.order.backend.GetOrderByIdsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.GetOrderByIdsReq;
  return proto.order.backend.GetOrderByIdsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.GetOrderByIdsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.GetOrderByIdsReq}
 */
proto.order.backend.GetOrderByIdsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrderIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.GetOrderByIdsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.GetOrderByIdsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.GetOrderByIdsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.GetOrderByIdsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string order_ids = 1;
 * @return {!Array<string>}
 */
proto.order.backend.GetOrderByIdsReq.prototype.getOrderIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.backend.GetOrderByIdsReq} returns this
 */
proto.order.backend.GetOrderByIdsReq.prototype.setOrderIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.backend.GetOrderByIdsReq} returns this
 */
proto.order.backend.GetOrderByIdsReq.prototype.addOrderIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.backend.GetOrderByIdsReq} returns this
 */
proto.order.backend.GetOrderByIdsReq.prototype.clearOrderIdsList = function() {
  return this.setOrderIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.ExpireOrdersReq.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.ExpireOrdersReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.ExpireOrdersReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.ExpireOrdersReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.ExpireOrdersReq}
 */
proto.order.backend.ExpireOrdersReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.ExpireOrdersReq;
  return proto.order.backend.ExpireOrdersReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.ExpireOrdersReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.ExpireOrdersReq}
 */
proto.order.backend.ExpireOrdersReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.ExpireOrdersReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.ExpireOrdersReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.ExpireOrdersReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.ExpireOrdersReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.backend.GetOrderByIdsRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.GetOrderByIdsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.GetOrderByIdsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.GetOrderByIdsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.GetOrderByIdsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.order.backend.OrderInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.GetOrderByIdsRes}
 */
proto.order.backend.GetOrderByIdsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.GetOrderByIdsRes;
  return proto.order.backend.GetOrderByIdsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.GetOrderByIdsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.GetOrderByIdsRes}
 */
proto.order.backend.GetOrderByIdsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.backend.OrderInfo;
      reader.readMessage(value,proto.order.backend.OrderInfo.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.GetOrderByIdsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.GetOrderByIdsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.GetOrderByIdsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.GetOrderByIdsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.order.backend.OrderInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OrderInfo orders = 1;
 * @return {!Array<!proto.order.backend.OrderInfo>}
 */
proto.order.backend.GetOrderByIdsRes.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.order.backend.OrderInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.backend.OrderInfo, 1));
};


/**
 * @param {!Array<!proto.order.backend.OrderInfo>} value
 * @return {!proto.order.backend.GetOrderByIdsRes} returns this
*/
proto.order.backend.GetOrderByIdsRes.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.order.backend.OrderInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.backend.OrderInfo}
 */
proto.order.backend.GetOrderByIdsRes.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.order.backend.OrderInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.backend.GetOrderByIdsRes} returns this
 */
proto.order.backend.GetOrderByIdsRes.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.backend.ExpireOrdersRes.prototype.toObject = function(opt_includeInstance) {
  return proto.order.backend.ExpireOrdersRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.backend.ExpireOrdersRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.ExpireOrdersRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.backend.ExpireOrdersRes}
 */
proto.order.backend.ExpireOrdersRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.backend.ExpireOrdersRes;
  return proto.order.backend.ExpireOrdersRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.backend.ExpireOrdersRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.backend.ExpireOrdersRes}
 */
proto.order.backend.ExpireOrdersRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.backend.ExpireOrdersRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.backend.ExpireOrdersRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.backend.ExpireOrdersRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.backend.ExpireOrdersRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.order.backend.OrderStatus = {
  ORDER_STATUS_INVALID: 0,
  ORDER_STATUS_DRAFT: 1,
  ORDER_STATUS_IN_PROGRESS: 2,
  ORDER_STATUS_PAID_SUCCESSFUL: 3,
  ORDER_STATUS_PAID_FAILED: 4,
  ORDER_STATUS_DELIVERING: 5,
  ORDER_STATUS_DELIVERED: 6,
  ORDER_STATUS_CANCELLED: 7,
  ORDER_STATUS_EXPIRED: 8
};

/**
 * @enum {number}
 */
proto.order.backend.OrderPaymentMethod = {
  ORDER_PAYMENT_METHOD_INVALID: 0,
  ORDER_PAYMENT_METHOD_E_WALLET: 1
};

/**
 * @enum {number}
 */
proto.order.backend.OrderType = {
  ORDER_TYPE_INVALID: 0,
  ORDER_TYPE_BUY: 1,
  ORDER_TYPE_RENT: 2
};

/**
 * @enum {number}
 */
proto.order.backend.ShippingAddressType = {
  SHIPPING_ADDRESS_TYPE_INVALID: 0,
  SHIPPING_ADDRESS_TYPE_CENTER_ADDRESS: 1,
  SHIPPING_ADDRESS_TYPE_USER_ADDRESS: 2
};

/**
 * @enum {number}
 */
proto.order.backend.OrderProductPurchaseType = {
  ORDER_PRODUCT_PURCHASE_TYPE_INVALID: 0,
  ORDER_PRODUCT_PURCHASE_TYPE_RENT_OR_SELL: 1,
  ORDER_PRODUCT_PURCHASE_TYPE_RENT_ONLY: 2,
  ORDER_PRODUCT_PURCHASE_TYPE_SELL_ONLY: 3
};

/**
 * @enum {number}
 */
proto.order.backend.ProductStatus = {
  PRODUCT_STATUS_INVALID: 0,
  PRODUCT_STATUS_PUBLISHED: 1,
  PRODUCT_STATUS_UNPUBLISHED: 2,
  PRODUCT_STATUS_DRAFT: 3,
  PRODUCT_STATUS_DELETED: 4
};

goog.object.extend(exports, proto.order.backend);
