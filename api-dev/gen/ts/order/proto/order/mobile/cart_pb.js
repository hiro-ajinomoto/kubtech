// source: proto/order/mobile/cart.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var proto_order_mobile_base_pb = require('../../../proto/order/mobile/base_pb.js');
goog.object.extend(proto, proto_order_mobile_base_pb);
goog.exportSymbol('proto.order.mobile.AddProductToCartReq', null, global);
goog.exportSymbol('proto.order.mobile.AddProductToCartRes', null, global);
goog.exportSymbol('proto.order.mobile.CartInfo', null, global);
goog.exportSymbol('proto.order.mobile.CartProductAttribute', null, global);
goog.exportSymbol('proto.order.mobile.CartProductAttribute.Value', null, global);
goog.exportSymbol('proto.order.mobile.CartProductCurrencyInfo', null, global);
goog.exportSymbol('proto.order.mobile.CartProductInfo', null, global);
goog.exportSymbol('proto.order.mobile.CartProductInfoItem', null, global);
goog.exportSymbol('proto.order.mobile.CartProductItem', null, global);
goog.exportSymbol('proto.order.mobile.CartProductPurchaseType', null, global);
goog.exportSymbol('proto.order.mobile.GetMyCartReq', null, global);
goog.exportSymbol('proto.order.mobile.GetMyCartRes', null, global);
goog.exportSymbol('proto.order.mobile.RemoveProductFromCartReq', null, global);
goog.exportSymbol('proto.order.mobile.RemoveProductFromCartRes', null, global);
goog.exportSymbol('proto.order.mobile.SeatInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.CartInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.mobile.CartInfo.repeatedFields_, null);
};
goog.inherits(proto.order.mobile.CartInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.CartInfo.displayName = 'proto.order.mobile.CartInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.CartProductInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.mobile.CartProductInfo.repeatedFields_, null);
};
goog.inherits(proto.order.mobile.CartProductInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.CartProductInfo.displayName = 'proto.order.mobile.CartProductInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.SeatInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.SeatInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.SeatInfo.displayName = 'proto.order.mobile.SeatInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.CartProductCurrencyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.CartProductCurrencyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.CartProductCurrencyInfo.displayName = 'proto.order.mobile.CartProductCurrencyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.CartProductInfoItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.CartProductInfoItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.CartProductInfoItem.displayName = 'proto.order.mobile.CartProductInfoItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.CartProductItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.CartProductItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.CartProductItem.displayName = 'proto.order.mobile.CartProductItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.CartProductAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.mobile.CartProductAttribute.repeatedFields_, null);
};
goog.inherits(proto.order.mobile.CartProductAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.CartProductAttribute.displayName = 'proto.order.mobile.CartProductAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.CartProductAttribute.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.CartProductAttribute.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.CartProductAttribute.Value.displayName = 'proto.order.mobile.CartProductAttribute.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.AddProductToCartReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.mobile.AddProductToCartReq.repeatedFields_, null);
};
goog.inherits(proto.order.mobile.AddProductToCartReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.AddProductToCartReq.displayName = 'proto.order.mobile.AddProductToCartReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.RemoveProductFromCartReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.mobile.RemoveProductFromCartReq.repeatedFields_, null);
};
goog.inherits(proto.order.mobile.RemoveProductFromCartReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.RemoveProductFromCartReq.displayName = 'proto.order.mobile.RemoveProductFromCartReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.GetMyCartReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.GetMyCartReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.GetMyCartReq.displayName = 'proto.order.mobile.GetMyCartReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.AddProductToCartRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.AddProductToCartRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.AddProductToCartRes.displayName = 'proto.order.mobile.AddProductToCartRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.RemoveProductFromCartRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.RemoveProductFromCartRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.RemoveProductFromCartRes.displayName = 'proto.order.mobile.RemoveProductFromCartRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.mobile.GetMyCartRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.mobile.GetMyCartRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.mobile.GetMyCartRes.displayName = 'proto.order.mobile.GetMyCartRes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.mobile.CartInfo.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.CartInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.CartInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.CartInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.order.mobile.CartProductInfoItem.toObject, includeInstance),
    totalPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    convertedTotalPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.CartInfo}
 */
proto.order.mobile.CartInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.CartInfo;
  return proto.order.mobile.CartInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.CartInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.CartInfo}
 */
proto.order.mobile.CartInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 8:
      var value = new proto.order.mobile.CartProductInfoItem;
      reader.readMessage(value,proto.order.mobile.CartProductInfoItem.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConvertedTotalPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.CartInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.CartInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.CartInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.order.mobile.CartProductInfoItem.serializeBinaryToWriter
    );
  }
  f = message.getTotalPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getConvertedTotalPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.mobile.CartInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.order.mobile.CartInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.order.mobile.CartInfo.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string created_by = 4;
 * @return {string}
 */
proto.order.mobile.CartInfo.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_by = 5;
 * @return {string}
 */
proto.order.mobile.CartInfo.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string partnership_id = 6;
 * @return {string}
 */
proto.order.mobile.CartInfo.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user_id = 7;
 * @return {string}
 */
proto.order.mobile.CartInfo.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated CartProductInfoItem products = 8;
 * @return {!Array<!proto.order.mobile.CartProductInfoItem>}
 */
proto.order.mobile.CartInfo.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.order.mobile.CartProductInfoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.mobile.CartProductInfoItem, 8));
};


/**
 * @param {!Array<!proto.order.mobile.CartProductInfoItem>} value
 * @return {!proto.order.mobile.CartInfo} returns this
*/
proto.order.mobile.CartInfo.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.order.mobile.CartProductInfoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.mobile.CartProductInfoItem}
 */
proto.order.mobile.CartInfo.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.order.mobile.CartProductInfoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional double total_price = 9;
 * @return {number}
 */
proto.order.mobile.CartInfo.prototype.getTotalPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setTotalPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double converted_total_price = 10;
 * @return {number}
 */
proto.order.mobile.CartInfo.prototype.getConvertedTotalPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartInfo} returns this
 */
proto.order.mobile.CartInfo.prototype.setConvertedTotalPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.mobile.CartProductInfo.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.CartProductInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.CartProductInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.CartProductInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mediasList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    tagsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    sku: jspb.Message.getFieldWithDefault(msg, 6, ""),
    listedPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    discountPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    uom: jspb.Message.getFieldWithDefault(msg, 10, ""),
    barcode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    currency: (f = msg.getCurrency()) && proto.order.mobile.CartProductCurrencyInfo.toObject(includeInstance, f),
    brand: jspb.Message.getFieldWithDefault(msg, 13, ""),
    unlimited: jspb.Message.getFieldWithDefault(msg, 14, 0),
    partnershipId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    country: jspb.Message.getFieldWithDefault(msg, 16, ""),
    language: jspb.Message.getFieldWithDefault(msg, 17, ""),
    seatInfo: (f = msg.getSeatInfo()) && proto.order.mobile.SeatInfo.toObject(includeInstance, f),
    additionalDataMap: (f = msg.getAdditionalDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.CartProductInfo}
 */
proto.order.mobile.CartProductInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.CartProductInfo;
  return proto.order.mobile.CartProductInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.CartProductInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.CartProductInfo}
 */
proto.order.mobile.CartProductInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.order.mobile.ProductStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMedias(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setListedPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountPercent(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUom(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcode(value);
      break;
    case 12:
      var value = new proto.order.mobile.CartProductCurrencyInfo;
      reader.readMessage(value,proto.order.mobile.CartProductCurrencyInfo.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    case 14:
      var value = /** @type {!proto.order.mobile.CustomBoolean} */ (reader.readEnum());
      msg.setUnlimited(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnershipId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 18:
      var value = new proto.order.mobile.SeatInfo;
      reader.readMessage(value,proto.order.mobile.SeatInfo.deserializeBinaryFromReader);
      msg.setSeatInfo(value);
      break;
    case 19:
      var value = msg.getAdditionalDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.CartProductInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.CartProductInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.CartProductInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMediasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getListedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getDiscountPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getUom();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBarcode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.order.mobile.CartProductCurrencyInfo.serializeBinaryToWriter
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUnlimited();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getPartnershipId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getSeatInfo();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.order.mobile.SeatInfo.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(19, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ProductStatus status = 2;
 * @return {!proto.order.mobile.ProductStatus}
 */
proto.order.mobile.CartProductInfo.prototype.getStatus = function() {
  return /** @type {!proto.order.mobile.ProductStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.order.mobile.ProductStatus} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string medias = 4;
 * @return {!Array<string>}
 */
proto.order.mobile.CartProductInfo.prototype.getMediasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setMediasList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.addMedias = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.clearMediasList = function() {
  return this.setMediasList([]);
};


/**
 * repeated string tags = 5;
 * @return {!Array<string>}
 */
proto.order.mobile.CartProductInfo.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string sku = 6;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double listed_price = 7;
 * @return {number}
 */
proto.order.mobile.CartProductInfo.prototype.getListedPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setListedPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double discount_percent = 8;
 * @return {number}
 */
proto.order.mobile.CartProductInfo.prototype.getDiscountPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setDiscountPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double price = 9;
 * @return {number}
 */
proto.order.mobile.CartProductInfo.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string uom = 10;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getUom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setUom = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string barcode = 11;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getBarcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setBarcode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional CartProductCurrencyInfo currency = 12;
 * @return {?proto.order.mobile.CartProductCurrencyInfo}
 */
proto.order.mobile.CartProductInfo.prototype.getCurrency = function() {
  return /** @type{?proto.order.mobile.CartProductCurrencyInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.mobile.CartProductCurrencyInfo, 12));
};


/**
 * @param {?proto.order.mobile.CartProductCurrencyInfo|undefined} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
*/
proto.order.mobile.CartProductInfo.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.mobile.CartProductInfo.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string brand = 13;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setBrand = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional CustomBoolean unlimited = 14;
 * @return {!proto.order.mobile.CustomBoolean}
 */
proto.order.mobile.CartProductInfo.prototype.getUnlimited = function() {
  return /** @type {!proto.order.mobile.CustomBoolean} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.order.mobile.CustomBoolean} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setUnlimited = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional string partnership_id = 15;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getPartnershipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setPartnershipId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string country = 16;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string language = 17;
 * @return {string}
 */
proto.order.mobile.CartProductInfo.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional SeatInfo seat_info = 18;
 * @return {?proto.order.mobile.SeatInfo}
 */
proto.order.mobile.CartProductInfo.prototype.getSeatInfo = function() {
  return /** @type{?proto.order.mobile.SeatInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.mobile.SeatInfo, 18));
};


/**
 * @param {?proto.order.mobile.SeatInfo|undefined} value
 * @return {!proto.order.mobile.CartProductInfo} returns this
*/
proto.order.mobile.CartProductInfo.prototype.setSeatInfo = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.clearSeatInfo = function() {
  return this.setSeatInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.mobile.CartProductInfo.prototype.hasSeatInfo = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * map<string, string> additional_data = 19;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.order.mobile.CartProductInfo.prototype.getAdditionalDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 19, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.order.mobile.CartProductInfo} returns this
 */
proto.order.mobile.CartProductInfo.prototype.clearAdditionalDataMap = function() {
  this.getAdditionalDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.SeatInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.SeatInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.SeatInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.SeatInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    seatName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    seatBlockId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    seatmapId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scheduleId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    eventId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.SeatInfo}
 */
proto.order.mobile.SeatInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.SeatInfo;
  return proto.order.mobile.SeatInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.SeatInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.SeatInfo}
 */
proto.order.mobile.SeatInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeatName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeatBlockId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeatmapId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduleId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.SeatInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.SeatInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.SeatInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.SeatInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSeatName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSeatBlockId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSeatmapId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScheduleId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.mobile.SeatInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.SeatInfo} returns this
 */
proto.order.mobile.SeatInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string seat_name = 2;
 * @return {string}
 */
proto.order.mobile.SeatInfo.prototype.getSeatName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.SeatInfo} returns this
 */
proto.order.mobile.SeatInfo.prototype.setSeatName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string seat_block_id = 3;
 * @return {string}
 */
proto.order.mobile.SeatInfo.prototype.getSeatBlockId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.SeatInfo} returns this
 */
proto.order.mobile.SeatInfo.prototype.setSeatBlockId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string seatmap_id = 4;
 * @return {string}
 */
proto.order.mobile.SeatInfo.prototype.getSeatmapId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.SeatInfo} returns this
 */
proto.order.mobile.SeatInfo.prototype.setSeatmapId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string schedule_id = 5;
 * @return {string}
 */
proto.order.mobile.SeatInfo.prototype.getScheduleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.SeatInfo} returns this
 */
proto.order.mobile.SeatInfo.prototype.setScheduleId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string event_id = 6;
 * @return {string}
 */
proto.order.mobile.SeatInfo.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.SeatInfo} returns this
 */
proto.order.mobile.SeatInfo.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.CartProductCurrencyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.CartProductCurrencyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductCurrencyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.CartProductCurrencyInfo}
 */
proto.order.mobile.CartProductCurrencyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.CartProductCurrencyInfo;
  return proto.order.mobile.CartProductCurrencyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.CartProductCurrencyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.CartProductCurrencyInfo}
 */
proto.order.mobile.CartProductCurrencyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.CartProductCurrencyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.CartProductCurrencyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductCurrencyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductCurrencyInfo} returns this
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductCurrencyInfo} returns this
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductCurrencyInfo} returns this
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon = 4;
 * @return {string}
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductCurrencyInfo} returns this
 */
proto.order.mobile.CartProductCurrencyInfo.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.CartProductInfoItem.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.CartProductInfoItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.CartProductInfoItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductInfoItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    productInfo: (f = msg.getProductInfo()) && proto.order.mobile.CartProductInfo.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.CartProductInfoItem}
 */
proto.order.mobile.CartProductInfoItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.CartProductInfoItem;
  return proto.order.mobile.CartProductInfoItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.CartProductInfoItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.CartProductInfoItem}
 */
proto.order.mobile.CartProductInfoItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.mobile.CartProductInfo;
      reader.readMessage(value,proto.order.mobile.CartProductInfo.deserializeBinaryFromReader);
      msg.setProductInfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.CartProductInfoItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.CartProductInfoItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.CartProductInfoItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductInfoItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.order.mobile.CartProductInfo.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional CartProductInfo product_info = 1;
 * @return {?proto.order.mobile.CartProductInfo}
 */
proto.order.mobile.CartProductInfoItem.prototype.getProductInfo = function() {
  return /** @type{?proto.order.mobile.CartProductInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.mobile.CartProductInfo, 1));
};


/**
 * @param {?proto.order.mobile.CartProductInfo|undefined} value
 * @return {!proto.order.mobile.CartProductInfoItem} returns this
*/
proto.order.mobile.CartProductInfoItem.prototype.setProductInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.mobile.CartProductInfoItem} returns this
 */
proto.order.mobile.CartProductInfoItem.prototype.clearProductInfo = function() {
  return this.setProductInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.mobile.CartProductInfoItem.prototype.hasProductInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 quantity = 2;
 * @return {number}
 */
proto.order.mobile.CartProductInfoItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartProductInfoItem} returns this
 */
proto.order.mobile.CartProductInfoItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.CartProductItem.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.CartProductItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.CartProductItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.CartProductItem}
 */
proto.order.mobile.CartProductItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.CartProductItem;
  return proto.order.mobile.CartProductItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.CartProductItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.CartProductItem}
 */
proto.order.mobile.CartProductItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.CartProductItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.CartProductItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.CartProductItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.order.mobile.CartProductItem.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductItem} returns this
 */
proto.order.mobile.CartProductItem.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 quantity = 2;
 * @return {number}
 */
proto.order.mobile.CartProductItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.mobile.CartProductItem} returns this
 */
proto.order.mobile.CartProductItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.mobile.CartProductAttribute.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.CartProductAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.CartProductAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.CartProductAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    masterDataId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.order.mobile.CartProductAttribute.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.CartProductAttribute}
 */
proto.order.mobile.CartProductAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.CartProductAttribute;
  return proto.order.mobile.CartProductAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.CartProductAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.CartProductAttribute}
 */
proto.order.mobile.CartProductAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMasterDataId(value);
      break;
    case 2:
      var value = new proto.order.mobile.CartProductAttribute.Value;
      reader.readMessage(value,proto.order.mobile.CartProductAttribute.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.CartProductAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.CartProductAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.CartProductAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMasterDataId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.order.mobile.CartProductAttribute.Value.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.CartProductAttribute.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.CartProductAttribute.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.CartProductAttribute.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductAttribute.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    language: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.CartProductAttribute.Value}
 */
proto.order.mobile.CartProductAttribute.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.CartProductAttribute.Value;
  return proto.order.mobile.CartProductAttribute.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.CartProductAttribute.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.CartProductAttribute.Value}
 */
proto.order.mobile.CartProductAttribute.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.CartProductAttribute.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.CartProductAttribute.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.CartProductAttribute.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.CartProductAttribute.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string language = 1;
 * @return {string}
 */
proto.order.mobile.CartProductAttribute.Value.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductAttribute.Value} returns this
 */
proto.order.mobile.CartProductAttribute.Value.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.order.mobile.CartProductAttribute.Value.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductAttribute.Value} returns this
 */
proto.order.mobile.CartProductAttribute.Value.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string master_data_id = 1;
 * @return {string}
 */
proto.order.mobile.CartProductAttribute.prototype.getMasterDataId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.CartProductAttribute} returns this
 */
proto.order.mobile.CartProductAttribute.prototype.setMasterDataId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Value values = 2;
 * @return {!Array<!proto.order.mobile.CartProductAttribute.Value>}
 */
proto.order.mobile.CartProductAttribute.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.order.mobile.CartProductAttribute.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.mobile.CartProductAttribute.Value, 2));
};


/**
 * @param {!Array<!proto.order.mobile.CartProductAttribute.Value>} value
 * @return {!proto.order.mobile.CartProductAttribute} returns this
*/
proto.order.mobile.CartProductAttribute.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.order.mobile.CartProductAttribute.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.mobile.CartProductAttribute.Value}
 */
proto.order.mobile.CartProductAttribute.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.order.mobile.CartProductAttribute.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.mobile.CartProductAttribute} returns this
 */
proto.order.mobile.CartProductAttribute.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.mobile.AddProductToCartReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.AddProductToCartReq.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.AddProductToCartReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.AddProductToCartReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.AddProductToCartReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.order.mobile.CartProductItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.AddProductToCartReq}
 */
proto.order.mobile.AddProductToCartReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.AddProductToCartReq;
  return proto.order.mobile.AddProductToCartReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.AddProductToCartReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.AddProductToCartReq}
 */
proto.order.mobile.AddProductToCartReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.mobile.CartProductItem;
      reader.readMessage(value,proto.order.mobile.CartProductItem.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.AddProductToCartReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.AddProductToCartReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.AddProductToCartReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.AddProductToCartReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.order.mobile.CartProductItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CartProductItem products = 1;
 * @return {!Array<!proto.order.mobile.CartProductItem>}
 */
proto.order.mobile.AddProductToCartReq.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.order.mobile.CartProductItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.mobile.CartProductItem, 1));
};


/**
 * @param {!Array<!proto.order.mobile.CartProductItem>} value
 * @return {!proto.order.mobile.AddProductToCartReq} returns this
*/
proto.order.mobile.AddProductToCartReq.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.order.mobile.CartProductItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.mobile.CartProductItem}
 */
proto.order.mobile.AddProductToCartReq.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.order.mobile.CartProductItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.mobile.AddProductToCartReq} returns this
 */
proto.order.mobile.AddProductToCartReq.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.mobile.RemoveProductFromCartReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.RemoveProductFromCartReq.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.RemoveProductFromCartReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.RemoveProductFromCartReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.RemoveProductFromCartReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.order.mobile.CartProductItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.RemoveProductFromCartReq}
 */
proto.order.mobile.RemoveProductFromCartReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.RemoveProductFromCartReq;
  return proto.order.mobile.RemoveProductFromCartReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.RemoveProductFromCartReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.RemoveProductFromCartReq}
 */
proto.order.mobile.RemoveProductFromCartReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.mobile.CartProductItem;
      reader.readMessage(value,proto.order.mobile.CartProductItem.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.RemoveProductFromCartReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.RemoveProductFromCartReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.RemoveProductFromCartReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.RemoveProductFromCartReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.order.mobile.CartProductItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CartProductItem products = 1;
 * @return {!Array<!proto.order.mobile.CartProductItem>}
 */
proto.order.mobile.RemoveProductFromCartReq.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.order.mobile.CartProductItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.mobile.CartProductItem, 1));
};


/**
 * @param {!Array<!proto.order.mobile.CartProductItem>} value
 * @return {!proto.order.mobile.RemoveProductFromCartReq} returns this
*/
proto.order.mobile.RemoveProductFromCartReq.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.order.mobile.CartProductItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.mobile.CartProductItem}
 */
proto.order.mobile.RemoveProductFromCartReq.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.order.mobile.CartProductItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.mobile.RemoveProductFromCartReq} returns this
 */
proto.order.mobile.RemoveProductFromCartReq.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.GetMyCartReq.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.GetMyCartReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.GetMyCartReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.GetMyCartReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.GetMyCartReq}
 */
proto.order.mobile.GetMyCartReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.GetMyCartReq;
  return proto.order.mobile.GetMyCartReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.GetMyCartReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.GetMyCartReq}
 */
proto.order.mobile.GetMyCartReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.GetMyCartReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.GetMyCartReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.GetMyCartReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.GetMyCartReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.AddProductToCartRes.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.AddProductToCartRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.AddProductToCartRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.AddProductToCartRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    cartId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.AddProductToCartRes}
 */
proto.order.mobile.AddProductToCartRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.AddProductToCartRes;
  return proto.order.mobile.AddProductToCartRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.AddProductToCartRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.AddProductToCartRes}
 */
proto.order.mobile.AddProductToCartRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCartId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.AddProductToCartRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.AddProductToCartRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.AddProductToCartRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.AddProductToCartRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCartId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cart_id = 1;
 * @return {string}
 */
proto.order.mobile.AddProductToCartRes.prototype.getCartId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.AddProductToCartRes} returns this
 */
proto.order.mobile.AddProductToCartRes.prototype.setCartId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.RemoveProductFromCartRes.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.RemoveProductFromCartRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.RemoveProductFromCartRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.RemoveProductFromCartRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    cartId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.RemoveProductFromCartRes}
 */
proto.order.mobile.RemoveProductFromCartRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.RemoveProductFromCartRes;
  return proto.order.mobile.RemoveProductFromCartRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.RemoveProductFromCartRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.RemoveProductFromCartRes}
 */
proto.order.mobile.RemoveProductFromCartRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCartId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.RemoveProductFromCartRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.RemoveProductFromCartRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.RemoveProductFromCartRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.RemoveProductFromCartRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCartId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cart_id = 1;
 * @return {string}
 */
proto.order.mobile.RemoveProductFromCartRes.prototype.getCartId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.mobile.RemoveProductFromCartRes} returns this
 */
proto.order.mobile.RemoveProductFromCartRes.prototype.setCartId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.mobile.GetMyCartRes.prototype.toObject = function(opt_includeInstance) {
  return proto.order.mobile.GetMyCartRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.mobile.GetMyCartRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.GetMyCartRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.order.mobile.CartInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.mobile.GetMyCartRes}
 */
proto.order.mobile.GetMyCartRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.mobile.GetMyCartRes;
  return proto.order.mobile.GetMyCartRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.mobile.GetMyCartRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.mobile.GetMyCartRes}
 */
proto.order.mobile.GetMyCartRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.order.mobile.CartInfo;
      reader.readMessage(value,proto.order.mobile.CartInfo.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.mobile.GetMyCartRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.mobile.GetMyCartRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.mobile.GetMyCartRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.mobile.GetMyCartRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.order.mobile.CartInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CartInfo result = 1;
 * @return {?proto.order.mobile.CartInfo}
 */
proto.order.mobile.GetMyCartRes.prototype.getResult = function() {
  return /** @type{?proto.order.mobile.CartInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.mobile.CartInfo, 1));
};


/**
 * @param {?proto.order.mobile.CartInfo|undefined} value
 * @return {!proto.order.mobile.GetMyCartRes} returns this
*/
proto.order.mobile.GetMyCartRes.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.mobile.GetMyCartRes} returns this
 */
proto.order.mobile.GetMyCartRes.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.mobile.GetMyCartRes.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.order.mobile.CartProductPurchaseType = {
  CART_PRODUCT_PURCHASE_TYPE_INVALID: 0,
  CART_PRODUCT_PURCHASE_TYPE_RENT_OR_SELL: 1,
  CART_PRODUCT_PURCHASE_TYPE_RENT_ONLY: 2,
  CART_PRODUCT_PURCHASE_TYPE_SELL_ONLY: 3
};

goog.object.extend(exports, proto.order.mobile);
