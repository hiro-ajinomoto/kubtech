// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: event/web_inspector/seat_map.proto

package web_inspector

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LabelType int32

const (
	LabelType_LABEL_TYPE_INVALID   LabelType = 0
	LabelType_LABEL_TYPE_CHARACTER LabelType = 1
	LabelType_LABEL_TYPE_NUMBER    LabelType = 2
)

// Enum value maps for LabelType.
var (
	LabelType_name = map[int32]string{
		0: "LABEL_TYPE_INVALID",
		1: "LABEL_TYPE_CHARACTER",
		2: "LABEL_TYPE_NUMBER",
	}
	LabelType_value = map[string]int32{
		"LABEL_TYPE_INVALID":   0,
		"LABEL_TYPE_CHARACTER": 1,
		"LABEL_TYPE_NUMBER":    2,
	}
)

func (x LabelType) Enum() *LabelType {
	p := new(LabelType)
	*p = x
	return p
}

func (x LabelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LabelType) Descriptor() protoreflect.EnumDescriptor {
	return file_event_web_inspector_seat_map_proto_enumTypes[0].Descriptor()
}

func (LabelType) Type() protoreflect.EnumType {
	return &file_event_web_inspector_seat_map_proto_enumTypes[0]
}

func (x LabelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LabelType.Descriptor instead.
func (LabelType) EnumDescriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{0}
}

type SeatMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MapPicture  string       `protobuf:"bytes,4,opt,name=map_picture,json=mapPicture,proto3" json:"map_picture,omitempty"`
	Blocks      []*SeatBlock `protobuf:"bytes,5,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *SeatMap) Reset() {
	*x = SeatMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatMap) ProtoMessage() {}

func (x *SeatMap) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatMap.ProtoReflect.Descriptor instead.
func (*SeatMap) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{0}
}

func (x *SeatMap) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SeatMap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeatMap) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SeatMap) GetMapPicture() string {
	if x != nil {
		return x.MapPicture
	}
	return ""
}

func (x *SeatMap) GetBlocks() []*SeatBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type SeatMapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MapPicture  string       `protobuf:"bytes,4,opt,name=map_picture,json=mapPicture,proto3" json:"map_picture,omitempty"`
	Blocks      []*SeatBlock `protobuf:"bytes,5,rep,name=blocks,proto3" json:"blocks,omitempty"`
	CreatedAt   int64        `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy   string       `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt   int64        `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy   string       `protobuf:"bytes,9,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *SeatMapInfo) Reset() {
	*x = SeatMapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatMapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatMapInfo) ProtoMessage() {}

func (x *SeatMapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatMapInfo.ProtoReflect.Descriptor instead.
func (*SeatMapInfo) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{1}
}

func (x *SeatMapInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SeatMapInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeatMapInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SeatMapInfo) GetMapPicture() string {
	if x != nil {
		return x.MapPicture
	}
	return ""
}

func (x *SeatMapInfo) GetBlocks() []*SeatBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *SeatMapInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SeatMapInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *SeatMapInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SeatMapInfo) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type SeatBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color       string     `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Row         *SeatLabel `protobuf:"bytes,4,opt,name=row,proto3" json:"row,omitempty"`
	Col         *SeatLabel `protobuf:"bytes,5,opt,name=col,proto3" json:"col,omitempty"`
	Price       float64    `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	Currency    *Currency  `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	Position    *Position  `protobuf:"bytes,8,opt,name=position,proto3" json:"position,omitempty"`
	Description string     `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Seats       []*Seat    `protobuf:"bytes,10,rep,name=seats,proto3" json:"seats,omitempty"`
	SeatMapId   string     `protobuf:"bytes,11,opt,name=seat_map_id,json=seatMapId,proto3" json:"seat_map_id,omitempty"`
}

func (x *SeatBlock) Reset() {
	*x = SeatBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatBlock) ProtoMessage() {}

func (x *SeatBlock) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatBlock.ProtoReflect.Descriptor instead.
func (*SeatBlock) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{2}
}

func (x *SeatBlock) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SeatBlock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeatBlock) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SeatBlock) GetRow() *SeatLabel {
	if x != nil {
		return x.Row
	}
	return nil
}

func (x *SeatBlock) GetCol() *SeatLabel {
	if x != nil {
		return x.Col
	}
	return nil
}

func (x *SeatBlock) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SeatBlock) GetCurrency() *Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *SeatBlock) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SeatBlock) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SeatBlock) GetSeats() []*Seat {
	if x != nil {
		return x.Seats
	}
	return nil
}

func (x *SeatBlock) GetSeatMapId() string {
	if x != nil {
		return x.SeatMapId
	}
	return ""
}

type SeatLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSeat int64     `protobuf:"varint,1,opt,name=total_seat,json=totalSeat,proto3" json:"total_seat,omitempty"`
	LabelType LabelType `protobuf:"varint,2,opt,name=label_type,json=labelType,proto3,enum=event.web_inspector.LabelType" json:"label_type,omitempty"`
	StartWith string    `protobuf:"bytes,3,opt,name=start_with,json=startWith,proto3" json:"start_with,omitempty"`
}

func (x *SeatLabel) Reset() {
	*x = SeatLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatLabel) ProtoMessage() {}

func (x *SeatLabel) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatLabel.ProtoReflect.Descriptor instead.
func (*SeatLabel) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{3}
}

func (x *SeatLabel) GetTotalSeat() int64 {
	if x != nil {
		return x.TotalSeat
	}
	return 0
}

func (x *SeatLabel) GetLabelType() LabelType {
	if x != nil {
		return x.LabelType
	}
	return LabelType_LABEL_TYPE_INVALID
}

func (x *SeatLabel) GetStartWith() string {
	if x != nil {
		return x.StartWith
	}
	return ""
}

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{4}
}

func (x *Currency) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Currency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Currency) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int64 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int64 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{5}
}

func (x *Position) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Seat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Position *Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Seat) Reset() {
	*x = Seat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{6}
}

func (x *Seat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Seat) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type RetrieveSeatMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartnershipId string `protobuf:"bytes,2,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
}

func (x *RetrieveSeatMapReq) Reset() {
	*x = RetrieveSeatMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSeatMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSeatMapReq) ProtoMessage() {}

func (x *RetrieveSeatMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSeatMapReq.ProtoReflect.Descriptor instead.
func (*RetrieveSeatMapReq) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveSeatMapReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RetrieveSeatMapReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

type RetrieveSeatMapRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SeatMapInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *RetrieveSeatMapRes) Reset() {
	*x = RetrieveSeatMapRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_inspector_seat_map_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSeatMapRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSeatMapRes) ProtoMessage() {}

func (x *RetrieveSeatMapRes) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_inspector_seat_map_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSeatMapRes.ProtoReflect.Descriptor instead.
func (*RetrieveSeatMapRes) Descriptor() ([]byte, []int) {
	return file_event_web_inspector_seat_map_proto_rawDescGZIP(), []int{8}
}

func (x *RetrieveSeatMapRes) GetInfo() *SeatMapInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_event_web_inspector_seat_map_proto protoreflect.FileDescriptor

var file_event_web_inspector_seat_map_proto_rawDesc = []byte{
	0x0a, 0x22, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f,
	0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x07, 0x53, 0x65,
	0x61, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x36, 0x0a, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x22, 0xa8, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x70, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0xa8, 0x03, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62,
	0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x03, 0x63, 0x6f, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77,
	0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x61,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x03, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f,
	0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x39, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x65, 0x61,
	0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x65,
	0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x09, 0x53,
	0x65, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x22, 0x56, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x26, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x01, 0x79, 0x22, 0x55, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f,
	0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x12,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x12, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x12,
	0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x2a, 0x54, 0x0a, 0x09, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x41,
	0x42, 0x45, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x32, 0x75, 0x0a, 0x0e, 0x53,
	0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a,
	0x0f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70,
	0x12, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53,
	0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x52,
	0x65, 0x73, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x62, 0x63, 0x61,
	0x73, 0x69, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x74, 0x68, 0x75, 0x79, 0x6e, 0x67, 0x61, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2f, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x3b, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_web_inspector_seat_map_proto_rawDescOnce sync.Once
	file_event_web_inspector_seat_map_proto_rawDescData = file_event_web_inspector_seat_map_proto_rawDesc
)

func file_event_web_inspector_seat_map_proto_rawDescGZIP() []byte {
	file_event_web_inspector_seat_map_proto_rawDescOnce.Do(func() {
		file_event_web_inspector_seat_map_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_web_inspector_seat_map_proto_rawDescData)
	})
	return file_event_web_inspector_seat_map_proto_rawDescData
}

var file_event_web_inspector_seat_map_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_web_inspector_seat_map_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_event_web_inspector_seat_map_proto_goTypes = []interface{}{
	(LabelType)(0),             // 0: event.web_inspector.LabelType
	(*SeatMap)(nil),            // 1: event.web_inspector.SeatMap
	(*SeatMapInfo)(nil),        // 2: event.web_inspector.SeatMapInfo
	(*SeatBlock)(nil),          // 3: event.web_inspector.SeatBlock
	(*SeatLabel)(nil),          // 4: event.web_inspector.SeatLabel
	(*Currency)(nil),           // 5: event.web_inspector.Currency
	(*Position)(nil),           // 6: event.web_inspector.Position
	(*Seat)(nil),               // 7: event.web_inspector.Seat
	(*RetrieveSeatMapReq)(nil), // 8: event.web_inspector.RetrieveSeatMapReq
	(*RetrieveSeatMapRes)(nil), // 9: event.web_inspector.RetrieveSeatMapRes
}
var file_event_web_inspector_seat_map_proto_depIdxs = []int32{
	3,  // 0: event.web_inspector.SeatMap.blocks:type_name -> event.web_inspector.SeatBlock
	3,  // 1: event.web_inspector.SeatMapInfo.blocks:type_name -> event.web_inspector.SeatBlock
	4,  // 2: event.web_inspector.SeatBlock.row:type_name -> event.web_inspector.SeatLabel
	4,  // 3: event.web_inspector.SeatBlock.col:type_name -> event.web_inspector.SeatLabel
	5,  // 4: event.web_inspector.SeatBlock.currency:type_name -> event.web_inspector.Currency
	6,  // 5: event.web_inspector.SeatBlock.position:type_name -> event.web_inspector.Position
	7,  // 6: event.web_inspector.SeatBlock.seats:type_name -> event.web_inspector.Seat
	0,  // 7: event.web_inspector.SeatLabel.label_type:type_name -> event.web_inspector.LabelType
	6,  // 8: event.web_inspector.Seat.position:type_name -> event.web_inspector.Position
	2,  // 9: event.web_inspector.RetrieveSeatMapRes.info:type_name -> event.web_inspector.SeatMapInfo
	8,  // 10: event.web_inspector.SeatMapService.RetrieveSeatMap:input_type -> event.web_inspector.RetrieveSeatMapReq
	9,  // 11: event.web_inspector.SeatMapService.RetrieveSeatMap:output_type -> event.web_inspector.RetrieveSeatMapRes
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_event_web_inspector_seat_map_proto_init() }
func file_event_web_inspector_seat_map_proto_init() {
	if File_event_web_inspector_seat_map_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_web_inspector_seat_map_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_inspector_seat_map_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatMapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_inspector_seat_map_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_inspector_seat_map_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_inspector_seat_map_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_inspector_seat_map_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_inspector_seat_map_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Seat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_inspector_seat_map_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSeatMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_inspector_seat_map_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSeatMapRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_web_inspector_seat_map_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_web_inspector_seat_map_proto_goTypes,
		DependencyIndexes: file_event_web_inspector_seat_map_proto_depIdxs,
		EnumInfos:         file_event_web_inspector_seat_map_proto_enumTypes,
		MessageInfos:      file_event_web_inspector_seat_map_proto_msgTypes,
	}.Build()
	File_event_web_inspector_seat_map_proto = out.File
	file_event_web_inspector_seat_map_proto_rawDesc = nil
	file_event_web_inspector_seat_map_proto_goTypes = nil
	file_event_web_inspector_seat_map_proto_depIdxs = nil
}
