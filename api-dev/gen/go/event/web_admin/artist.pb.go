// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: event/web_admin/artist.proto

package web_admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArtistBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Avatar       string            `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Type         []*ArtistTypeInfo `protobuf:"bytes,3,rep,name=type,proto3" json:"type,omitempty"`
	PersonalUrl  string            `protobuf:"bytes,4,opt,name=personal_url,json=personalUrl,proto3" json:"personal_url,omitempty"`
	FacebookUrl  string            `protobuf:"bytes,5,opt,name=facebook_url,json=facebookUrl,proto3" json:"facebook_url,omitempty"`
	InstagramUrl string            `protobuf:"bytes,6,opt,name=instagram_url,json=instagramUrl,proto3" json:"instagram_url,omitempty"`
	Intro        string            `protobuf:"bytes,7,opt,name=intro,proto3" json:"intro,omitempty"`
}

func (x *ArtistBasicInfo) Reset() {
	*x = ArtistBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistBasicInfo) ProtoMessage() {}

func (x *ArtistBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistBasicInfo.ProtoReflect.Descriptor instead.
func (*ArtistBasicInfo) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{0}
}

func (x *ArtistBasicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtistBasicInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ArtistBasicInfo) GetType() []*ArtistTypeInfo {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ArtistBasicInfo) GetPersonalUrl() string {
	if x != nil {
		return x.PersonalUrl
	}
	return ""
}

func (x *ArtistBasicInfo) GetFacebookUrl() string {
	if x != nil {
		return x.FacebookUrl
	}
	return ""
}

func (x *ArtistBasicInfo) GetInstagramUrl() string {
	if x != nil {
		return x.InstagramUrl
	}
	return ""
}

func (x *ArtistBasicInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

type ArtistListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar    string            `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Type      []*ArtistTypeInfo `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	CreatedAt int64             `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64             `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy string            `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy string            `protobuf:"bytes,8,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Intro     string            `protobuf:"bytes,9,opt,name=intro,proto3" json:"intro,omitempty"`
}

func (x *ArtistListInfo) Reset() {
	*x = ArtistListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistListInfo) ProtoMessage() {}

func (x *ArtistListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistListInfo.ProtoReflect.Descriptor instead.
func (*ArtistListInfo) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{1}
}

func (x *ArtistListInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArtistListInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtistListInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ArtistListInfo) GetType() []*ArtistTypeInfo {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ArtistListInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ArtistListInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ArtistListInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ArtistListInfo) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *ArtistListInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

type ArtistTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ArtistTypeInfo) Reset() {
	*x = ArtistTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistTypeInfo) ProtoMessage() {}

func (x *ArtistTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistTypeInfo.ProtoReflect.Descriptor instead.
func (*ArtistTypeInfo) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{2}
}

func (x *ArtistTypeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArtistTypeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtistTypeInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type CreateArtistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Avatar       string   `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	TypeIds      []string `protobuf:"bytes,3,rep,name=type_ids,json=typeIds,proto3" json:"type_ids,omitempty"`
	PersonalUrl  string   `protobuf:"bytes,4,opt,name=personal_url,json=personalUrl,proto3" json:"personal_url,omitempty"`
	FacebookUrl  string   `protobuf:"bytes,5,opt,name=facebook_url,json=facebookUrl,proto3" json:"facebook_url,omitempty"`
	InstagramUrl string   `protobuf:"bytes,6,opt,name=instagram_url,json=instagramUrl,proto3" json:"instagram_url,omitempty"`
	Intro        string   `protobuf:"bytes,7,opt,name=intro,proto3" json:"intro,omitempty"`
	Lang         string   `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *CreateArtistReq) Reset() {
	*x = CreateArtistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArtistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArtistReq) ProtoMessage() {}

func (x *CreateArtistReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArtistReq.ProtoReflect.Descriptor instead.
func (*CreateArtistReq) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{3}
}

func (x *CreateArtistReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateArtistReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateArtistReq) GetTypeIds() []string {
	if x != nil {
		return x.TypeIds
	}
	return nil
}

func (x *CreateArtistReq) GetPersonalUrl() string {
	if x != nil {
		return x.PersonalUrl
	}
	return ""
}

func (x *CreateArtistReq) GetFacebookUrl() string {
	if x != nil {
		return x.FacebookUrl
	}
	return ""
}

func (x *CreateArtistReq) GetInstagramUrl() string {
	if x != nil {
		return x.InstagramUrl
	}
	return ""
}

func (x *CreateArtistReq) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *CreateArtistReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type UpdateArtistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar       string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	TypeIds      []string `protobuf:"bytes,4,rep,name=type_ids,json=typeIds,proto3" json:"type_ids,omitempty"`
	PersonalUrl  string   `protobuf:"bytes,5,opt,name=personal_url,json=personalUrl,proto3" json:"personal_url,omitempty"`
	FacebookUrl  string   `protobuf:"bytes,6,opt,name=facebook_url,json=facebookUrl,proto3" json:"facebook_url,omitempty"`
	InstagramUrl string   `protobuf:"bytes,7,opt,name=instagram_url,json=instagramUrl,proto3" json:"instagram_url,omitempty"`
	Intro        string   `protobuf:"bytes,8,opt,name=intro,proto3" json:"intro,omitempty"`
	Lang         string   `protobuf:"bytes,9,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *UpdateArtistReq) Reset() {
	*x = UpdateArtistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArtistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArtistReq) ProtoMessage() {}

func (x *UpdateArtistReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArtistReq.ProtoReflect.Descriptor instead.
func (*UpdateArtistReq) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateArtistReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateArtistReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateArtistReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateArtistReq) GetTypeIds() []string {
	if x != nil {
		return x.TypeIds
	}
	return nil
}

func (x *UpdateArtistReq) GetPersonalUrl() string {
	if x != nil {
		return x.PersonalUrl
	}
	return ""
}

func (x *UpdateArtistReq) GetFacebookUrl() string {
	if x != nil {
		return x.FacebookUrl
	}
	return ""
}

func (x *UpdateArtistReq) GetInstagramUrl() string {
	if x != nil {
		return x.InstagramUrl
	}
	return ""
}

func (x *UpdateArtistReq) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *UpdateArtistReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type DeleteArtistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteArtistReq) Reset() {
	*x = DeleteArtistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArtistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArtistReq) ProtoMessage() {}

func (x *DeleteArtistReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArtistReq.ProtoReflect.Descriptor instead.
func (*DeleteArtistReq) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteArtistReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListArtistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchText string         `protobuf:"bytes,1,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"` // TODO: Vi và Toàn support
	Pagination *PaginationReq `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OrderBy    []*OrderByItem `protobuf:"bytes,3,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListArtistReq) Reset() {
	*x = ListArtistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtistReq) ProtoMessage() {}

func (x *ListArtistReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtistReq.ProtoReflect.Descriptor instead.
func (*ListArtistReq) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{6}
}

func (x *ListArtistReq) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *ListArtistReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListArtistReq) GetOrderBy() []*OrderByItem {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

type GetArtistDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetArtistDetailReq) Reset() {
	*x = GetArtistDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtistDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistDetailReq) ProtoMessage() {}

func (x *GetArtistDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistDetailReq.ProtoReflect.Descriptor instead.
func (*GetArtistDetailReq) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{7}
}

func (x *GetArtistDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateArtistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateArtistRes) Reset() {
	*x = CreateArtistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArtistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArtistRes) ProtoMessage() {}

func (x *CreateArtistRes) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArtistRes.ProtoReflect.Descriptor instead.
func (*CreateArtistRes) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{8}
}

func (x *CreateArtistRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetArtistDetailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartnershipId string           `protobuf:"bytes,2,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Info          *ArtistBasicInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	CreatedAt     int64            `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64            `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string           `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy     string           `protobuf:"bytes,7,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *GetArtistDetailRes) Reset() {
	*x = GetArtistDetailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtistDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistDetailRes) ProtoMessage() {}

func (x *GetArtistDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistDetailRes.ProtoReflect.Descriptor instead.
func (*GetArtistDetailRes) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{9}
}

func (x *GetArtistDetailRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetArtistDetailRes) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *GetArtistDetailRes) GetInfo() *ArtistBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetArtistDetailRes) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetArtistDetailRes) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetArtistDetailRes) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetArtistDetailRes) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type ListArtistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*ArtistListInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListArtistRes) Reset() {
	*x = ListArtistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_web_admin_artist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtistRes) ProtoMessage() {}

func (x *ListArtistRes) ProtoReflect() protoreflect.Message {
	mi := &file_event_web_admin_artist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtistRes.ProtoReflect.Descriptor instead.
func (*ListArtistRes) Descriptor() ([]byte, []int) {
	return file_event_web_admin_artist_proto_rawDescGZIP(), []int{10}
}

func (x *ListArtistRes) GetInfo() []*ArtistListInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ListArtistRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_event_web_admin_artist_proto protoreflect.FileDescriptor

var file_event_web_admin_artist_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a,
	0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x01, 0x0a, 0x0f,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x22, 0x93, 0x02, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x22, 0x48, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x22, 0xed, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x67, 0x72, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x67, 0x72, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x22, 0x21, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65,
	0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0xa2, 0x03, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65,
	0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12,
	0x4c, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x52, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x48, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x62, 0x63, 0x61, 0x73, 0x69, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x74, 0x68, 0x75, 0x79, 0x6e, 0x67,
	0x61, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x3b, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_event_web_admin_artist_proto_rawDescOnce sync.Once
	file_event_web_admin_artist_proto_rawDescData = file_event_web_admin_artist_proto_rawDesc
)

func file_event_web_admin_artist_proto_rawDescGZIP() []byte {
	file_event_web_admin_artist_proto_rawDescOnce.Do(func() {
		file_event_web_admin_artist_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_web_admin_artist_proto_rawDescData)
	})
	return file_event_web_admin_artist_proto_rawDescData
}

var file_event_web_admin_artist_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_event_web_admin_artist_proto_goTypes = []interface{}{
	(*ArtistBasicInfo)(nil),    // 0: event.web_admin.ArtistBasicInfo
	(*ArtistListInfo)(nil),     // 1: event.web_admin.ArtistListInfo
	(*ArtistTypeInfo)(nil),     // 2: event.web_admin.ArtistTypeInfo
	(*CreateArtistReq)(nil),    // 3: event.web_admin.CreateArtistReq
	(*UpdateArtistReq)(nil),    // 4: event.web_admin.UpdateArtistReq
	(*DeleteArtistReq)(nil),    // 5: event.web_admin.DeleteArtistReq
	(*ListArtistReq)(nil),      // 6: event.web_admin.ListArtistReq
	(*GetArtistDetailReq)(nil), // 7: event.web_admin.GetArtistDetailReq
	(*CreateArtistRes)(nil),    // 8: event.web_admin.CreateArtistRes
	(*GetArtistDetailRes)(nil), // 9: event.web_admin.GetArtistDetailRes
	(*ListArtistRes)(nil),      // 10: event.web_admin.ListArtistRes
	(*PaginationReq)(nil),      // 11: event.web_admin.PaginationReq
	(*OrderByItem)(nil),        // 12: event.web_admin.OrderByItem
	(*PaginationRes)(nil),      // 13: event.web_admin.PaginationRes
	(*Empty)(nil),              // 14: event.web_admin.Empty
}
var file_event_web_admin_artist_proto_depIdxs = []int32{
	2,  // 0: event.web_admin.ArtistBasicInfo.type:type_name -> event.web_admin.ArtistTypeInfo
	2,  // 1: event.web_admin.ArtistListInfo.type:type_name -> event.web_admin.ArtistTypeInfo
	11, // 2: event.web_admin.ListArtistReq.pagination:type_name -> event.web_admin.PaginationReq
	12, // 3: event.web_admin.ListArtistReq.order_by:type_name -> event.web_admin.OrderByItem
	0,  // 4: event.web_admin.GetArtistDetailRes.info:type_name -> event.web_admin.ArtistBasicInfo
	1,  // 5: event.web_admin.ListArtistRes.info:type_name -> event.web_admin.ArtistListInfo
	13, // 6: event.web_admin.ListArtistRes.pagination:type_name -> event.web_admin.PaginationRes
	7,  // 7: event.web_admin.ArtistService.GetArtistDetail:input_type -> event.web_admin.GetArtistDetailReq
	6,  // 8: event.web_admin.ArtistService.ListArtist:input_type -> event.web_admin.ListArtistReq
	3,  // 9: event.web_admin.ArtistService.CreateArtist:input_type -> event.web_admin.CreateArtistReq
	4,  // 10: event.web_admin.ArtistService.UpdateArtist:input_type -> event.web_admin.UpdateArtistReq
	5,  // 11: event.web_admin.ArtistService.DeleteArtist:input_type -> event.web_admin.DeleteArtistReq
	9,  // 12: event.web_admin.ArtistService.GetArtistDetail:output_type -> event.web_admin.GetArtistDetailRes
	10, // 13: event.web_admin.ArtistService.ListArtist:output_type -> event.web_admin.ListArtistRes
	8,  // 14: event.web_admin.ArtistService.CreateArtist:output_type -> event.web_admin.CreateArtistRes
	14, // 15: event.web_admin.ArtistService.UpdateArtist:output_type -> event.web_admin.Empty
	14, // 16: event.web_admin.ArtistService.DeleteArtist:output_type -> event.web_admin.Empty
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_event_web_admin_artist_proto_init() }
func file_event_web_admin_artist_proto_init() {
	if File_event_web_admin_artist_proto != nil {
		return
	}
	file_event_web_admin_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_event_web_admin_artist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArtistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArtistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArtistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtistDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArtistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtistDetailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_web_admin_artist_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_web_admin_artist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_web_admin_artist_proto_goTypes,
		DependencyIndexes: file_event_web_admin_artist_proto_depIdxs,
		MessageInfos:      file_event_web_admin_artist_proto_msgTypes,
	}.Build()
	File_event_web_admin_artist_proto = out.File
	file_event_web_admin_artist_proto_rawDesc = nil
	file_event_web_admin_artist_proto_goTypes = nil
	file_event_web_admin_artist_proto_depIdxs = nil
}
