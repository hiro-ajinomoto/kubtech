// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: event/backend/event.proto

package backend

import (
	base "gitlab.bcasia.io/thuynga/apps/api/gen/go/base"
	enum "gitlab.bcasia.io/thuynga/apps/api/gen/go/event/enum"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ================================= BASIC ===================================
type EventForm int32

const (
	EventForm_EVENT_FORM_INVALID EventForm = 0
	EventForm_EVENT_FORM_OFFLINE EventForm = 1
	EventForm_EVENT_FORM_ONLINE  EventForm = 2
)

// Enum value maps for EventForm.
var (
	EventForm_name = map[int32]string{
		0: "EVENT_FORM_INVALID",
		1: "EVENT_FORM_OFFLINE",
		2: "EVENT_FORM_ONLINE",
	}
	EventForm_value = map[string]int32{
		"EVENT_FORM_INVALID": 0,
		"EVENT_FORM_OFFLINE": 1,
		"EVENT_FORM_ONLINE":  2,
	}
)

func (x EventForm) Enum() *EventForm {
	p := new(EventForm)
	*p = x
	return p
}

func (x EventForm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventForm) Descriptor() protoreflect.EnumDescriptor {
	return file_event_backend_event_proto_enumTypes[0].Descriptor()
}

func (EventForm) Type() protoreflect.EnumType {
	return &file_event_backend_event_proto_enumTypes[0]
}

func (x EventForm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventForm.Descriptor instead.
func (EventForm) EnumDescriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{0}
}

type EventBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code              string             `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	EventImageUrls    []string           `protobuf:"bytes,3,rep,name=event_image_urls,json=eventImageUrls,proto3" json:"event_image_urls,omitempty"`
	Artists           []*EventArtist     `protobuf:"bytes,4,rep,name=artists,proto3" json:"artists,omitempty"`
	HashTags          []string           `protobuf:"bytes,5,rep,name=hash_tags,json=hashTags,proto3" json:"hash_tags,omitempty"`
	ProgramsImageUrls []string           `protobuf:"bytes,6,rep,name=programs_image_urls,json=programsImageUrls,proto3" json:"programs_image_urls,omitempty"`
	Description       string             `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Schedules         []*EventSchedule   `protobuf:"bytes,8,rep,name=schedules,proto3" json:"schedules,omitempty"`
	IsHot             bool               `protobuf:"varint,9,opt,name=is_hot,json=isHot,proto3" json:"is_hot,omitempty"`
	IsPublic          bool               `protobuf:"varint,11,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	Duration          int64              `protobuf:"varint,12,opt,name=duration,proto3" json:"duration,omitempty"`
	NumberOfTickets   int64              `protobuf:"varint,16,opt,name=number_of_tickets,json=numberOfTickets,proto3" json:"number_of_tickets,omitempty"`
	MinTicketPrice    float64            `protobuf:"fixed64,17,opt,name=min_ticket_price,json=minTicketPrice,proto3" json:"min_ticket_price,omitempty"`
	MaxTicketPrice    float64            `protobuf:"fixed64,18,opt,name=max_ticket_price,json=maxTicketPrice,proto3" json:"max_ticket_price,omitempty"`
	Currency          *EventCurrencyInfo `protobuf:"bytes,19,opt,name=currency,proto3" json:"currency,omitempty"`
	Location          *EventLocation     `protobuf:"bytes,20,opt,name=location,proto3" json:"location,omitempty"`
	Sponsors          []*EventSponsor    `protobuf:"bytes,21,rep,name=sponsors,proto3" json:"sponsors,omitempty"`
}

func (x *EventBasicInfo) Reset() {
	*x = EventBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBasicInfo) ProtoMessage() {}

func (x *EventBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBasicInfo.ProtoReflect.Descriptor instead.
func (*EventBasicInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventBasicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventBasicInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EventBasicInfo) GetEventImageUrls() []string {
	if x != nil {
		return x.EventImageUrls
	}
	return nil
}

func (x *EventBasicInfo) GetArtists() []*EventArtist {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *EventBasicInfo) GetHashTags() []string {
	if x != nil {
		return x.HashTags
	}
	return nil
}

func (x *EventBasicInfo) GetProgramsImageUrls() []string {
	if x != nil {
		return x.ProgramsImageUrls
	}
	return nil
}

func (x *EventBasicInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventBasicInfo) GetSchedules() []*EventSchedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *EventBasicInfo) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *EventBasicInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *EventBasicInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *EventBasicInfo) GetNumberOfTickets() int64 {
	if x != nil {
		return x.NumberOfTickets
	}
	return 0
}

func (x *EventBasicInfo) GetMinTicketPrice() float64 {
	if x != nil {
		return x.MinTicketPrice
	}
	return 0
}

func (x *EventBasicInfo) GetMaxTicketPrice() float64 {
	if x != nil {
		return x.MaxTicketPrice
	}
	return 0
}

func (x *EventBasicInfo) GetCurrency() *EventCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *EventBasicInfo) GetLocation() *EventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EventBasicInfo) GetSponsors() []*EventSponsor {
	if x != nil {
		return x.Sponsors
	}
	return nil
}

type EventSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code              string         `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	EventImageUrls    []string       `protobuf:"bytes,3,rep,name=event_image_urls,json=eventImageUrls,proto3" json:"event_image_urls,omitempty"`
	Artists           []*EventArtist `protobuf:"bytes,4,rep,name=artists,proto3" json:"artists,omitempty"`
	HashTags          []string       `protobuf:"bytes,5,rep,name=hash_tags,json=hashTags,proto3" json:"hash_tags,omitempty"`
	ProgramsImageUrls []string       `protobuf:"bytes,6,rep,name=programs_image_urls,json=programsImageUrls,proto3" json:"programs_image_urls,omitempty"`
	Description       string         `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *EventSimpleInfo) Reset() {
	*x = EventSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimpleInfo) ProtoMessage() {}

func (x *EventSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimpleInfo.ProtoReflect.Descriptor instead.
func (*EventSimpleInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventSimpleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSimpleInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EventSimpleInfo) GetEventImageUrls() []string {
	if x != nil {
		return x.EventImageUrls
	}
	return nil
}

func (x *EventSimpleInfo) GetArtists() []*EventArtist {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *EventSimpleInfo) GetHashTags() []string {
	if x != nil {
		return x.HashTags
	}
	return nil
}

func (x *EventSimpleInfo) GetProgramsImageUrls() []string {
	if x != nil {
		return x.ProgramsImageUrls
	}
	return nil
}

func (x *EventSimpleInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type EventCurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *EventCurrencyInfo) Reset() {
	*x = EventCurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCurrencyInfo) ProtoMessage() {}

func (x *EventCurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCurrencyInfo.ProtoReflect.Descriptor instead.
func (*EventCurrencyInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventCurrencyInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventCurrencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventCurrencyInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EventCurrencyInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type EventLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Ward     string `protobuf:"bytes,3,opt,name=ward,proto3" json:"ward,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Name     string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EventLocation) Reset() {
	*x = EventLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLocation) ProtoMessage() {}

func (x *EventLocation) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLocation.ProtoReflect.Descriptor instead.
func (*EventLocation) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{3}
}

func (x *EventLocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EventLocation) GetWard() string {
	if x != nil {
		return x.Ward
	}
	return ""
}

func (x *EventLocation) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *EventLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *EventLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *EventLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EventSeatMaps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MapPicture string `protobuf:"bytes,3,opt,name=map_picture,json=mapPicture,proto3" json:"map_picture,omitempty"`
}

func (x *EventSeatMaps) Reset() {
	*x = EventSeatMaps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSeatMaps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSeatMaps) ProtoMessage() {}

func (x *EventSeatMaps) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSeatMaps.ProtoReflect.Descriptor instead.
func (*EventSeatMaps) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{4}
}

func (x *EventSeatMaps) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSeatMaps) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSeatMaps) GetMapPicture() string {
	if x != nil {
		return x.MapPicture
	}
	return ""
}

type EventSponsor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Level  *EventSponsorLevelInfo `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *EventSponsor) Reset() {
	*x = EventSponsor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSponsor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSponsor) ProtoMessage() {}

func (x *EventSponsor) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSponsor.ProtoReflect.Descriptor instead.
func (*EventSponsor) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{5}
}

func (x *EventSponsor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSponsor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSponsor) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *EventSponsor) GetLevel() *EventSponsorLevelInfo {
	if x != nil {
		return x.Level
	}
	return nil
}

type EventSponsorLevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *EventSponsorLevelInfo) Reset() {
	*x = EventSponsorLevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSponsorLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSponsorLevelInfo) ProtoMessage() {}

func (x *EventSponsorLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSponsorLevelInfo.ProtoReflect.Descriptor instead.
func (*EventSponsorLevelInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{6}
}

func (x *EventSponsorLevelInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSponsorLevelInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSponsorLevelInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type EventSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GeneralSeatMaps  []*EventSeatMaps `protobuf:"bytes,2,rep,name=general_seat_maps,json=generalSeatMaps,proto3" json:"general_seat_maps,omitempty"`
	StartTime        int64            `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          int64            `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	BookingStartTime int64            `protobuf:"varint,5,opt,name=booking_start_time,json=bookingStartTime,proto3" json:"booking_start_time,omitempty"`
	BookingEndTime   int64            `protobuf:"varint,6,opt,name=booking_end_time,json=bookingEndTime,proto3" json:"booking_end_time,omitempty"`
	CheckinStartTime int64            `protobuf:"varint,7,opt,name=checkin_start_time,json=checkinStartTime,proto3" json:"checkin_start_time,omitempty"`
	CheckinEndTime   int64            `protobuf:"varint,8,opt,name=checkin_end_time,json=checkinEndTime,proto3" json:"checkin_end_time,omitempty"`
	Timezone         string           `protobuf:"bytes,9,opt,name=timezone,proto3" json:"timezone,omitempty"`
	IsSoldout        bool             `protobuf:"varint,10,opt,name=is_soldout,json=isSoldout,proto3" json:"is_soldout,omitempty"`
	IsPublic         bool             `protobuf:"varint,11,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	EventType        EventForm        `protobuf:"varint,12,opt,name=event_type,json=eventType,proto3,enum=event.backend.EventForm" json:"event_type,omitempty"`
	Name             string           `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EventSchedule) Reset() {
	*x = EventSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSchedule) ProtoMessage() {}

func (x *EventSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSchedule.ProtoReflect.Descriptor instead.
func (*EventSchedule) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{7}
}

func (x *EventSchedule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSchedule) GetGeneralSeatMaps() []*EventSeatMaps {
	if x != nil {
		return x.GeneralSeatMaps
	}
	return nil
}

func (x *EventSchedule) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *EventSchedule) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *EventSchedule) GetBookingStartTime() int64 {
	if x != nil {
		return x.BookingStartTime
	}
	return 0
}

func (x *EventSchedule) GetBookingEndTime() int64 {
	if x != nil {
		return x.BookingEndTime
	}
	return 0
}

func (x *EventSchedule) GetCheckinStartTime() int64 {
	if x != nil {
		return x.CheckinStartTime
	}
	return 0
}

func (x *EventSchedule) GetCheckinEndTime() int64 {
	if x != nil {
		return x.CheckinEndTime
	}
	return 0
}

func (x *EventSchedule) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *EventSchedule) GetIsSoldout() bool {
	if x != nil {
		return x.IsSoldout
	}
	return false
}

func (x *EventSchedule) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *EventSchedule) GetEventType() EventForm {
	if x != nil {
		return x.EventType
	}
	return EventForm_EVENT_FORM_INVALID
}

func (x *EventSchedule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EventArtist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Type   []*EventArtistTypeInfo `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	Intro  string                 `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
}

func (x *EventArtist) Reset() {
	*x = EventArtist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventArtist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventArtist) ProtoMessage() {}

func (x *EventArtist) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventArtist.ProtoReflect.Descriptor instead.
func (*EventArtist) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{8}
}

func (x *EventArtist) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventArtist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventArtist) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *EventArtist) GetType() []*EventArtistTypeInfo {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *EventArtist) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

type EventArtistTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *EventArtistTypeInfo) Reset() {
	*x = EventArtistTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventArtistTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventArtistTypeInfo) ProtoMessage() {}

func (x *EventArtistTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventArtistTypeInfo.ProtoReflect.Descriptor instead.
func (*EventArtistTypeInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{9}
}

func (x *EventArtistTypeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventArtistTypeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventArtistTypeInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type ProductEventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId  string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Timezone string `protobuf:"bytes,4,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *ProductEventInfo) Reset() {
	*x = ProductEventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductEventInfo) ProtoMessage() {}

func (x *ProductEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductEventInfo.ProtoReflect.Descriptor instead.
func (*ProductEventInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{10}
}

func (x *ProductEventInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ProductEventInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ProductEventInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductEventInfo) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type ProductEventScheduleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime        int64  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          int64  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CheckInStartTime int64  `protobuf:"varint,3,opt,name=check_in_start_time,json=checkInStartTime,proto3" json:"check_in_start_time,omitempty"`
	ScheduleId       string `protobuf:"bytes,4,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
}

func (x *ProductEventScheduleInfo) Reset() {
	*x = ProductEventScheduleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductEventScheduleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductEventScheduleInfo) ProtoMessage() {}

func (x *ProductEventScheduleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductEventScheduleInfo.ProtoReflect.Descriptor instead.
func (*ProductEventScheduleInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{11}
}

func (x *ProductEventScheduleInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProductEventScheduleInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProductEventScheduleInfo) GetCheckInStartTime() int64 {
	if x != nil {
		return x.CheckInStartTime
	}
	return 0
}

func (x *ProductEventScheduleInfo) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

type ProductEventSeatBlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatBlockId   string `protobuf:"bytes,1,opt,name=seat_block_id,json=seatBlockId,proto3" json:"seat_block_id,omitempty"`
	SeatBlockName string `protobuf:"bytes,2,opt,name=seat_block_name,json=seatBlockName,proto3" json:"seat_block_name,omitempty"`
}

func (x *ProductEventSeatBlockInfo) Reset() {
	*x = ProductEventSeatBlockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductEventSeatBlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductEventSeatBlockInfo) ProtoMessage() {}

func (x *ProductEventSeatBlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductEventSeatBlockInfo.ProtoReflect.Descriptor instead.
func (*ProductEventSeatBlockInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{12}
}

func (x *ProductEventSeatBlockInfo) GetSeatBlockId() string {
	if x != nil {
		return x.SeatBlockId
	}
	return ""
}

func (x *ProductEventSeatBlockInfo) GetSeatBlockName() string {
	if x != nil {
		return x.SeatBlockName
	}
	return ""
}

type ProductEventSeatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId   string `protobuf:"bytes,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	SeatName string `protobuf:"bytes,2,opt,name=seat_name,json=seatName,proto3" json:"seat_name,omitempty"`
}

func (x *ProductEventSeatInfo) Reset() {
	*x = ProductEventSeatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductEventSeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductEventSeatInfo) ProtoMessage() {}

func (x *ProductEventSeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductEventSeatInfo.ProtoReflect.Descriptor instead.
func (*ProductEventSeatInfo) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{13}
}

func (x *ProductEventSeatInfo) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

func (x *ProductEventSeatInfo) GetSeatName() string {
	if x != nil {
		return x.SeatName
	}
	return ""
}

type SearchProductEventSeatMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatMapId    string   `protobuf:"bytes,1,opt,name=seat_map_id,json=seatMapId,proto3" json:"seat_map_id,omitempty"`
	SeatBlockIds []string `protobuf:"bytes,2,rep,name=seat_block_ids,json=seatBlockIds,proto3" json:"seat_block_ids,omitempty"`
	SeatIds      []string `protobuf:"bytes,3,rep,name=seat_ids,json=seatIds,proto3" json:"seat_ids,omitempty"`
}

func (x *SearchProductEventSeatMap) Reset() {
	*x = SearchProductEventSeatMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductEventSeatMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductEventSeatMap) ProtoMessage() {}

func (x *SearchProductEventSeatMap) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductEventSeatMap.ProtoReflect.Descriptor instead.
func (*SearchProductEventSeatMap) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{14}
}

func (x *SearchProductEventSeatMap) GetSeatMapId() string {
	if x != nil {
		return x.SeatMapId
	}
	return ""
}

func (x *SearchProductEventSeatMap) GetSeatBlockIds() []string {
	if x != nil {
		return x.SeatBlockIds
	}
	return nil
}

func (x *SearchProductEventSeatMap) GetSeatIds() []string {
	if x != nil {
		return x.SeatIds
	}
	return nil
}

type SearchProductEventSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId string                       `protobuf:"bytes,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	SeatMaps   []*SearchProductEventSeatMap `protobuf:"bytes,2,rep,name=seat_maps,json=seatMaps,proto3" json:"seat_maps,omitempty"`
}

func (x *SearchProductEventSchedule) Reset() {
	*x = SearchProductEventSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductEventSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductEventSchedule) ProtoMessage() {}

func (x *SearchProductEventSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductEventSchedule.ProtoReflect.Descriptor instead.
func (*SearchProductEventSchedule) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{15}
}

func (x *SearchProductEventSchedule) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *SearchProductEventSchedule) GetSeatMaps() []*SearchProductEventSeatMap {
	if x != nil {
		return x.SeatMaps
	}
	return nil
}

type RetrieveSimpleEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveSimpleEventReq) Reset() {
	*x = RetrieveSimpleEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSimpleEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSimpleEventReq) ProtoMessage() {}

func (x *RetrieveSimpleEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSimpleEventReq.ProtoReflect.Descriptor instead.
func (*RetrieveSimpleEventReq) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{16}
}

func (x *RetrieveSimpleEventReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SearchEventsByNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *SearchEventsByNameReq) Reset() {
	*x = SearchEventsByNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEventsByNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEventsByNameReq) ProtoMessage() {}

func (x *SearchEventsByNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEventsByNameReq.ProtoReflect.Descriptor instead.
func (*SearchEventsByNameReq) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{17}
}

func (x *SearchEventsByNameReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetProductEventsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventIds  []string                      `protobuf:"bytes,1,rep,name=event_ids,json=eventIds,proto3" json:"event_ids,omitempty"`
	Schedules []*SearchProductEventSchedule `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *GetProductEventsInfoReq) Reset() {
	*x = GetProductEventsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductEventsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductEventsInfoReq) ProtoMessage() {}

func (x *GetProductEventsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductEventsInfoReq.ProtoReflect.Descriptor instead.
func (*GetProductEventsInfoReq) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{18}
}

func (x *GetProductEventsInfoReq) GetEventIds() []string {
	if x != nil {
		return x.EventIds
	}
	return nil
}

func (x *GetProductEventsInfoReq) GetSchedules() []*SearchProductEventSchedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type RetrieveSimpleEventRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *EventSimpleInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *RetrieveSimpleEventRes) Reset() {
	*x = RetrieveSimpleEventRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSimpleEventRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSimpleEventRes) ProtoMessage() {}

func (x *RetrieveSimpleEventRes) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSimpleEventRes.ProtoReflect.Descriptor instead.
func (*RetrieveSimpleEventRes) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{19}
}

func (x *RetrieveSimpleEventRes) GetInfo() *EventSimpleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SearchEventsByNameRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventIds []string `protobuf:"bytes,1,rep,name=event_ids,json=eventIds,proto3" json:"event_ids,omitempty"`
}

func (x *SearchEventsByNameRes) Reset() {
	*x = SearchEventsByNameRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEventsByNameRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEventsByNameRes) ProtoMessage() {}

func (x *SearchEventsByNameRes) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEventsByNameRes.ProtoReflect.Descriptor instead.
func (*SearchEventsByNameRes) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{20}
}

func (x *SearchEventsByNameRes) GetEventIds() []string {
	if x != nil {
		return x.EventIds
	}
	return nil
}

type GetProductEventsInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events     []*ProductEventInfo          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Schedules  []*ProductEventScheduleInfo  `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty"`
	SeatBlocks []*ProductEventSeatBlockInfo `protobuf:"bytes,3,rep,name=seat_blocks,json=seatBlocks,proto3" json:"seat_blocks,omitempty"`
	Seats      []*ProductEventSeatInfo      `protobuf:"bytes,4,rep,name=seats,proto3" json:"seats,omitempty"`
}

func (x *GetProductEventsInfoRes) Reset() {
	*x = GetProductEventsInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductEventsInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductEventsInfoRes) ProtoMessage() {}

func (x *GetProductEventsInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductEventsInfoRes.ProtoReflect.Descriptor instead.
func (*GetProductEventsInfoRes) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{21}
}

func (x *GetProductEventsInfoRes) GetEvents() []*ProductEventInfo {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetProductEventsInfoRes) GetSchedules() []*ProductEventScheduleInfo {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *GetProductEventsInfoRes) GetSeatBlocks() []*ProductEventSeatBlockInfo {
	if x != nil {
		return x.SeatBlocks
	}
	return nil
}

func (x *GetProductEventsInfoRes) GetSeats() []*ProductEventSeatInfo {
	if x != nil {
		return x.Seats
	}
	return nil
}

type ListScheduleByEventIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListScheduleByEventIDReq) Reset() {
	*x = ListScheduleByEventIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScheduleByEventIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScheduleByEventIDReq) ProtoMessage() {}

func (x *ListScheduleByEventIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScheduleByEventIDReq.ProtoReflect.Descriptor instead.
func (*ListScheduleByEventIDReq) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{22}
}

func (x *ListScheduleByEventIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListScheduleByEventIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*EventSchedule `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListScheduleByEventIDRes) Reset() {
	*x = ListScheduleByEventIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScheduleByEventIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScheduleByEventIDRes) ProtoMessage() {}

func (x *ListScheduleByEventIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScheduleByEventIDRes.ProtoReflect.Descriptor instead.
func (*ListScheduleByEventIDRes) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{23}
}

func (x *ListScheduleByEventIDRes) GetItems() []*EventSchedule {
	if x != nil {
		return x.Items
	}
	return nil
}

type InternalUpdateEventStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State            enum.EventState `protobuf:"varint,2,opt,name=state,proto3,enum=event.enum.EventState" json:"state,omitempty"`
	StateDescription string          `protobuf:"bytes,3,opt,name=state_description,json=stateDescription,proto3" json:"state_description,omitempty"`
	IsPublish        bool            `protobuf:"varint,4,opt,name=is_publish,json=isPublish,proto3" json:"is_publish,omitempty"`
	UserId           string          `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *InternalUpdateEventStateReq) Reset() {
	*x = InternalUpdateEventStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_backend_event_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalUpdateEventStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalUpdateEventStateReq) ProtoMessage() {}

func (x *InternalUpdateEventStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_backend_event_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalUpdateEventStateReq.ProtoReflect.Descriptor instead.
func (*InternalUpdateEventStateReq) Descriptor() ([]byte, []int) {
	return file_event_backend_event_proto_rawDescGZIP(), []int{24}
}

func (x *InternalUpdateEventStateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InternalUpdateEventStateReq) GetState() enum.EventState {
	if x != nil {
		return x.State
	}
	return enum.EventState(0)
}

func (x *InternalUpdateEventStateReq) GetStateDescription() string {
	if x != nil {
		return x.StateDescription
	}
	return ""
}

func (x *InternalUpdateEventStateReq) GetIsPublish() bool {
	if x != nil {
		return x.IsPublish
	}
	return false
}

func (x *InternalUpdateEventStateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_event_backend_event_proto protoreflect.FileDescriptor

var file_event_backend_event_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x1a, 0x0f, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x05, 0x0a, 0x0e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x34,
	0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x3c, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x38, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x6f, 0x72, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73,
	0x22, 0x88, 0x02, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x11, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a,
	0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x0d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x86, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x3a, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x4f, 0x0a, 0x15, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xf8, 0x03, 0x0a, 0x0d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x11,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61,
	0x74, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65,
	0x61, 0x74, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x53, 0x6f, 0x6c, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x37, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x22,
	0x4d, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x77,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x67,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x65, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x74, 0x4d,
	0x61, 0x70, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x61, 0x74,
	0x49, 0x64, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70,
	0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x7f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x47, 0x0a,
	0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x9f, 0x02, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x45, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x52, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4f,
	0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x32,
	0xcb, 0x04, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x60, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x63, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x66, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x71, 0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a,
	0x27, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x40, 0x5a,
	0x3e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x62, 0x63, 0x61, 0x73, 0x69, 0x61, 0x2e, 0x69,
	0x6f, 0x2f, 0x74, 0x68, 0x75, 0x79, 0x6e, 0x67, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x3b, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_backend_event_proto_rawDescOnce sync.Once
	file_event_backend_event_proto_rawDescData = file_event_backend_event_proto_rawDesc
)

func file_event_backend_event_proto_rawDescGZIP() []byte {
	file_event_backend_event_proto_rawDescOnce.Do(func() {
		file_event_backend_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_backend_event_proto_rawDescData)
	})
	return file_event_backend_event_proto_rawDescData
}

var file_event_backend_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_backend_event_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_event_backend_event_proto_goTypes = []interface{}{
	(EventForm)(0),                      // 0: event.backend.EventForm
	(*EventBasicInfo)(nil),              // 1: event.backend.EventBasicInfo
	(*EventSimpleInfo)(nil),             // 2: event.backend.EventSimpleInfo
	(*EventCurrencyInfo)(nil),           // 3: event.backend.EventCurrencyInfo
	(*EventLocation)(nil),               // 4: event.backend.EventLocation
	(*EventSeatMaps)(nil),               // 5: event.backend.EventSeatMaps
	(*EventSponsor)(nil),                // 6: event.backend.EventSponsor
	(*EventSponsorLevelInfo)(nil),       // 7: event.backend.EventSponsorLevelInfo
	(*EventSchedule)(nil),               // 8: event.backend.EventSchedule
	(*EventArtist)(nil),                 // 9: event.backend.EventArtist
	(*EventArtistTypeInfo)(nil),         // 10: event.backend.EventArtistTypeInfo
	(*ProductEventInfo)(nil),            // 11: event.backend.ProductEventInfo
	(*ProductEventScheduleInfo)(nil),    // 12: event.backend.ProductEventScheduleInfo
	(*ProductEventSeatBlockInfo)(nil),   // 13: event.backend.ProductEventSeatBlockInfo
	(*ProductEventSeatInfo)(nil),        // 14: event.backend.ProductEventSeatInfo
	(*SearchProductEventSeatMap)(nil),   // 15: event.backend.SearchProductEventSeatMap
	(*SearchProductEventSchedule)(nil),  // 16: event.backend.SearchProductEventSchedule
	(*RetrieveSimpleEventReq)(nil),      // 17: event.backend.RetrieveSimpleEventReq
	(*SearchEventsByNameReq)(nil),       // 18: event.backend.SearchEventsByNameReq
	(*GetProductEventsInfoReq)(nil),     // 19: event.backend.GetProductEventsInfoReq
	(*RetrieveSimpleEventRes)(nil),      // 20: event.backend.RetrieveSimpleEventRes
	(*SearchEventsByNameRes)(nil),       // 21: event.backend.SearchEventsByNameRes
	(*GetProductEventsInfoRes)(nil),     // 22: event.backend.GetProductEventsInfoRes
	(*ListScheduleByEventIDReq)(nil),    // 23: event.backend.ListScheduleByEventIDReq
	(*ListScheduleByEventIDRes)(nil),    // 24: event.backend.ListScheduleByEventIDRes
	(*InternalUpdateEventStateReq)(nil), // 25: event.backend.InternalUpdateEventStateReq
	(enum.EventState)(0),                // 26: event.enum.EventState
	(*base.Empty)(nil),                  // 27: base.Empty
}
var file_event_backend_event_proto_depIdxs = []int32{
	9,  // 0: event.backend.EventBasicInfo.artists:type_name -> event.backend.EventArtist
	8,  // 1: event.backend.EventBasicInfo.schedules:type_name -> event.backend.EventSchedule
	3,  // 2: event.backend.EventBasicInfo.currency:type_name -> event.backend.EventCurrencyInfo
	4,  // 3: event.backend.EventBasicInfo.location:type_name -> event.backend.EventLocation
	6,  // 4: event.backend.EventBasicInfo.sponsors:type_name -> event.backend.EventSponsor
	9,  // 5: event.backend.EventSimpleInfo.artists:type_name -> event.backend.EventArtist
	7,  // 6: event.backend.EventSponsor.level:type_name -> event.backend.EventSponsorLevelInfo
	5,  // 7: event.backend.EventSchedule.general_seat_maps:type_name -> event.backend.EventSeatMaps
	0,  // 8: event.backend.EventSchedule.event_type:type_name -> event.backend.EventForm
	10, // 9: event.backend.EventArtist.type:type_name -> event.backend.EventArtistTypeInfo
	15, // 10: event.backend.SearchProductEventSchedule.seat_maps:type_name -> event.backend.SearchProductEventSeatMap
	16, // 11: event.backend.GetProductEventsInfoReq.schedules:type_name -> event.backend.SearchProductEventSchedule
	2,  // 12: event.backend.RetrieveSimpleEventRes.info:type_name -> event.backend.EventSimpleInfo
	11, // 13: event.backend.GetProductEventsInfoRes.events:type_name -> event.backend.ProductEventInfo
	12, // 14: event.backend.GetProductEventsInfoRes.schedules:type_name -> event.backend.ProductEventScheduleInfo
	13, // 15: event.backend.GetProductEventsInfoRes.seat_blocks:type_name -> event.backend.ProductEventSeatBlockInfo
	14, // 16: event.backend.GetProductEventsInfoRes.seats:type_name -> event.backend.ProductEventSeatInfo
	8,  // 17: event.backend.ListScheduleByEventIDRes.items:type_name -> event.backend.EventSchedule
	26, // 18: event.backend.InternalUpdateEventStateReq.state:type_name -> event.enum.EventState
	18, // 19: event.backend.EventService.SearchEventsByName:input_type -> event.backend.SearchEventsByNameReq
	17, // 20: event.backend.EventService.RetrieveSimpleEvent:input_type -> event.backend.RetrieveSimpleEventReq
	17, // 21: event.backend.EventService.AggregateEvent:input_type -> event.backend.RetrieveSimpleEventReq
	19, // 22: event.backend.EventService.GetProductEventsInfo:input_type -> event.backend.GetProductEventsInfoReq
	23, // 23: event.backend.EventService.InternalListScheduleByEventID:input_type -> event.backend.ListScheduleByEventIDReq
	25, // 24: event.backend.EventService.InternalUpdateEventState:input_type -> event.backend.InternalUpdateEventStateReq
	21, // 25: event.backend.EventService.SearchEventsByName:output_type -> event.backend.SearchEventsByNameRes
	20, // 26: event.backend.EventService.RetrieveSimpleEvent:output_type -> event.backend.RetrieveSimpleEventRes
	27, // 27: event.backend.EventService.AggregateEvent:output_type -> base.Empty
	22, // 28: event.backend.EventService.GetProductEventsInfo:output_type -> event.backend.GetProductEventsInfoRes
	24, // 29: event.backend.EventService.InternalListScheduleByEventID:output_type -> event.backend.ListScheduleByEventIDRes
	27, // 30: event.backend.EventService.InternalUpdateEventState:output_type -> base.Empty
	25, // [25:31] is the sub-list for method output_type
	19, // [19:25] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_event_backend_event_proto_init() }
func file_event_backend_event_proto_init() {
	if File_event_backend_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_backend_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSeatMaps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSponsor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSponsorLevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventArtist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventArtistTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductEventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductEventScheduleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductEventSeatBlockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductEventSeatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductEventSeatMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductEventSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSimpleEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEventsByNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductEventsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSimpleEventRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEventsByNameRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductEventsInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScheduleByEventIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScheduleByEventIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_backend_event_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalUpdateEventStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_backend_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_backend_event_proto_goTypes,
		DependencyIndexes: file_event_backend_event_proto_depIdxs,
		EnumInfos:         file_event_backend_event_proto_enumTypes,
		MessageInfos:      file_event_backend_event_proto_msgTypes,
	}.Build()
	File_event_backend_event_proto = out.File
	file_event_backend_event_proto_rawDesc = nil
	file_event_backend_event_proto_goTypes = nil
	file_event_backend_event_proto_depIdxs = nil
}
