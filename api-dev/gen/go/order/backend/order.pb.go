// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: order/backend/order.proto

package backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderStatus int32

const (
	OrderStatus_ORDER_STATUS_INVALID         OrderStatus = 0
	OrderStatus_ORDER_STATUS_DRAFT           OrderStatus = 1
	OrderStatus_ORDER_STATUS_IN_PROGRESS     OrderStatus = 2
	OrderStatus_ORDER_STATUS_PAID_SUCCESSFUL OrderStatus = 3
	OrderStatus_ORDER_STATUS_PAID_FAILED     OrderStatus = 4
	OrderStatus_ORDER_STATUS_DELIVERING      OrderStatus = 5
	OrderStatus_ORDER_STATUS_DELIVERED       OrderStatus = 6
	OrderStatus_ORDER_STATUS_CANCELLED       OrderStatus = 7
	OrderStatus_ORDER_STATUS_EXPIRED         OrderStatus = 8
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_INVALID",
		1: "ORDER_STATUS_DRAFT",
		2: "ORDER_STATUS_IN_PROGRESS",
		3: "ORDER_STATUS_PAID_SUCCESSFUL",
		4: "ORDER_STATUS_PAID_FAILED",
		5: "ORDER_STATUS_DELIVERING",
		6: "ORDER_STATUS_DELIVERED",
		7: "ORDER_STATUS_CANCELLED",
		8: "ORDER_STATUS_EXPIRED",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_INVALID":         0,
		"ORDER_STATUS_DRAFT":           1,
		"ORDER_STATUS_IN_PROGRESS":     2,
		"ORDER_STATUS_PAID_SUCCESSFUL": 3,
		"ORDER_STATUS_PAID_FAILED":     4,
		"ORDER_STATUS_DELIVERING":      5,
		"ORDER_STATUS_DELIVERED":       6,
		"ORDER_STATUS_CANCELLED":       7,
		"ORDER_STATUS_EXPIRED":         8,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_order_backend_order_proto_enumTypes[0].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_order_backend_order_proto_enumTypes[0]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{0}
}

type OrderPaymentMethod int32

const (
	OrderPaymentMethod_ORDER_PAYMENT_METHOD_INVALID  OrderPaymentMethod = 0
	OrderPaymentMethod_ORDER_PAYMENT_METHOD_E_WALLET OrderPaymentMethod = 1 // e-wallet
)

// Enum value maps for OrderPaymentMethod.
var (
	OrderPaymentMethod_name = map[int32]string{
		0: "ORDER_PAYMENT_METHOD_INVALID",
		1: "ORDER_PAYMENT_METHOD_E_WALLET",
	}
	OrderPaymentMethod_value = map[string]int32{
		"ORDER_PAYMENT_METHOD_INVALID":  0,
		"ORDER_PAYMENT_METHOD_E_WALLET": 1,
	}
)

func (x OrderPaymentMethod) Enum() *OrderPaymentMethod {
	p := new(OrderPaymentMethod)
	*p = x
	return p
}

func (x OrderPaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderPaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_order_backend_order_proto_enumTypes[1].Descriptor()
}

func (OrderPaymentMethod) Type() protoreflect.EnumType {
	return &file_order_backend_order_proto_enumTypes[1]
}

func (x OrderPaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderPaymentMethod.Descriptor instead.
func (OrderPaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{1}
}

type OrderType int32

const (
	OrderType_ORDER_TYPE_INVALID OrderType = 0
	OrderType_ORDER_TYPE_BUY     OrderType = 1
	OrderType_ORDER_TYPE_RENT    OrderType = 2
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "ORDER_TYPE_INVALID",
		1: "ORDER_TYPE_BUY",
		2: "ORDER_TYPE_RENT",
	}
	OrderType_value = map[string]int32{
		"ORDER_TYPE_INVALID": 0,
		"ORDER_TYPE_BUY":     1,
		"ORDER_TYPE_RENT":    2,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_backend_order_proto_enumTypes[2].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_order_backend_order_proto_enumTypes[2]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{2}
}

type ShippingAddressType int32

const (
	ShippingAddressType_SHIPPING_ADDRESS_TYPE_INVALID        ShippingAddressType = 0
	ShippingAddressType_SHIPPING_ADDRESS_TYPE_CENTER_ADDRESS ShippingAddressType = 1
	ShippingAddressType_SHIPPING_ADDRESS_TYPE_USER_ADDRESS   ShippingAddressType = 2
)

// Enum value maps for ShippingAddressType.
var (
	ShippingAddressType_name = map[int32]string{
		0: "SHIPPING_ADDRESS_TYPE_INVALID",
		1: "SHIPPING_ADDRESS_TYPE_CENTER_ADDRESS",
		2: "SHIPPING_ADDRESS_TYPE_USER_ADDRESS",
	}
	ShippingAddressType_value = map[string]int32{
		"SHIPPING_ADDRESS_TYPE_INVALID":        0,
		"SHIPPING_ADDRESS_TYPE_CENTER_ADDRESS": 1,
		"SHIPPING_ADDRESS_TYPE_USER_ADDRESS":   2,
	}
)

func (x ShippingAddressType) Enum() *ShippingAddressType {
	p := new(ShippingAddressType)
	*p = x
	return p
}

func (x ShippingAddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShippingAddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_backend_order_proto_enumTypes[3].Descriptor()
}

func (ShippingAddressType) Type() protoreflect.EnumType {
	return &file_order_backend_order_proto_enumTypes[3]
}

func (x ShippingAddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShippingAddressType.Descriptor instead.
func (ShippingAddressType) EnumDescriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{3}
}

type OrderProductPurchaseType int32

const (
	OrderProductPurchaseType_ORDER_PRODUCT_PURCHASE_TYPE_INVALID      OrderProductPurchaseType = 0
	OrderProductPurchaseType_ORDER_PRODUCT_PURCHASE_TYPE_RENT_OR_SELL OrderProductPurchaseType = 1
	OrderProductPurchaseType_ORDER_PRODUCT_PURCHASE_TYPE_RENT_ONLY    OrderProductPurchaseType = 2
	OrderProductPurchaseType_ORDER_PRODUCT_PURCHASE_TYPE_SELL_ONLY    OrderProductPurchaseType = 3
)

// Enum value maps for OrderProductPurchaseType.
var (
	OrderProductPurchaseType_name = map[int32]string{
		0: "ORDER_PRODUCT_PURCHASE_TYPE_INVALID",
		1: "ORDER_PRODUCT_PURCHASE_TYPE_RENT_OR_SELL",
		2: "ORDER_PRODUCT_PURCHASE_TYPE_RENT_ONLY",
		3: "ORDER_PRODUCT_PURCHASE_TYPE_SELL_ONLY",
	}
	OrderProductPurchaseType_value = map[string]int32{
		"ORDER_PRODUCT_PURCHASE_TYPE_INVALID":      0,
		"ORDER_PRODUCT_PURCHASE_TYPE_RENT_OR_SELL": 1,
		"ORDER_PRODUCT_PURCHASE_TYPE_RENT_ONLY":    2,
		"ORDER_PRODUCT_PURCHASE_TYPE_SELL_ONLY":    3,
	}
)

func (x OrderProductPurchaseType) Enum() *OrderProductPurchaseType {
	p := new(OrderProductPurchaseType)
	*p = x
	return p
}

func (x OrderProductPurchaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderProductPurchaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_backend_order_proto_enumTypes[4].Descriptor()
}

func (OrderProductPurchaseType) Type() protoreflect.EnumType {
	return &file_order_backend_order_proto_enumTypes[4]
}

func (x OrderProductPurchaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderProductPurchaseType.Descriptor instead.
func (OrderProductPurchaseType) EnumDescriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{4}
}

type ProductStatus int32

const (
	ProductStatus_PRODUCT_STATUS_INVALID     ProductStatus = 0
	ProductStatus_PRODUCT_STATUS_PUBLISHED   ProductStatus = 1
	ProductStatus_PRODUCT_STATUS_UNPUBLISHED ProductStatus = 2
	ProductStatus_PRODUCT_STATUS_DRAFT       ProductStatus = 3
	ProductStatus_PRODUCT_STATUS_DELETED     ProductStatus = 4
)

// Enum value maps for ProductStatus.
var (
	ProductStatus_name = map[int32]string{
		0: "PRODUCT_STATUS_INVALID",
		1: "PRODUCT_STATUS_PUBLISHED",
		2: "PRODUCT_STATUS_UNPUBLISHED",
		3: "PRODUCT_STATUS_DRAFT",
		4: "PRODUCT_STATUS_DELETED",
	}
	ProductStatus_value = map[string]int32{
		"PRODUCT_STATUS_INVALID":     0,
		"PRODUCT_STATUS_PUBLISHED":   1,
		"PRODUCT_STATUS_UNPUBLISHED": 2,
		"PRODUCT_STATUS_DRAFT":       3,
		"PRODUCT_STATUS_DELETED":     4,
	}
)

func (x ProductStatus) Enum() *ProductStatus {
	p := new(ProductStatus)
	*p = x
	return p
}

func (x ProductStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_order_backend_order_proto_enumTypes[5].Descriptor()
}

func (ProductStatus) Type() protoreflect.EnumType {
	return &file_order_backend_order_proto_enumTypes[5]
}

func (x ProductStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductStatus.Descriptor instead.
func (ProductStatus) EnumDescriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{5}
}

type OrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           int64                   `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           int64                   `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy           string                  `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy           string                  `protobuf:"bytes,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	PartnershipId       string                  `protobuf:"bytes,6,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	CartId              string                  `protobuf:"bytes,7,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	UserId              string                  `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency            *OrderCurrencyInfo      `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	Products            []*OrderProductInfoItem `protobuf:"bytes,10,rep,name=products,proto3" json:"products,omitempty"`
	TotalProductAmount  float64                 `protobuf:"fixed64,11,opt,name=total_product_amount,json=totalProductAmount,proto3" json:"total_product_amount,omitempty"`
	PaymentMethod       *OrderPaymentMethodInfo `protobuf:"bytes,12,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Promotions          []*OrderPromotionInfo   `protobuf:"bytes,13,rep,name=promotions,proto3" json:"promotions,omitempty"` // list applied promotions
	TotalDiscountAmount float64                 `protobuf:"fixed64,14,opt,name=total_discount_amount,json=totalDiscountAmount,proto3" json:"total_discount_amount,omitempty"`
	Status              OrderStatus             `protobuf:"varint,15,opt,name=status,proto3,enum=order.backend.OrderStatus" json:"status,omitempty"`
	ShippingAddress     *ShippingAddressInfo    `protobuf:"bytes,16,opt,name=shipping_address,json=shippingAddress,proto3" json:"shipping_address,omitempty"`
	ShippingFeeAmount   float64                 `protobuf:"fixed64,17,opt,name=shipping_fee_amount,json=shippingFeeAmount,proto3" json:"shipping_fee_amount,omitempty"`
	Installment         *InstallmentInfo        `protobuf:"bytes,18,opt,name=installment,proto3" json:"installment,omitempty"`
	ExtraServices       []*OrderProductInfoItem `protobuf:"bytes,19,rep,name=extra_services,json=extraServices,proto3" json:"extra_services,omitempty"`
	ExtraServicesAmount float64                 `protobuf:"fixed64,20,opt,name=extra_services_amount,json=extraServicesAmount,proto3" json:"extra_services_amount,omitempty"`
	FeeAmount           float64                 `protobuf:"fixed64,21,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
	TotalAmount         float64                 `protobuf:"fixed64,22,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	OrderCode           string                  `protobuf:"bytes,23,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	OrderType           OrderType               `protobuf:"varint,24,opt,name=order_type,json=orderType,proto3,enum=order.backend.OrderType" json:"order_type,omitempty"`
	Note                string                  `protobuf:"bytes,25,opt,name=note,proto3" json:"note,omitempty"`
	ExpiredTime         int64                   `protobuf:"varint,26,opt,name=expired_time,json=expiredTime,proto3" json:"expired_time,omitempty"`
	PaymentId           string                  `protobuf:"bytes,27,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *OrderInfo) Reset() {
	*x = OrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfo) ProtoMessage() {}

func (x *OrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfo.ProtoReflect.Descriptor instead.
func (*OrderInfo) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{0}
}

func (x *OrderInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OrderInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *OrderInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *OrderInfo) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *OrderInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *OrderInfo) GetCartId() string {
	if x != nil {
		return x.CartId
	}
	return ""
}

func (x *OrderInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OrderInfo) GetCurrency() *OrderCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *OrderInfo) GetProducts() []*OrderProductInfoItem {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *OrderInfo) GetTotalProductAmount() float64 {
	if x != nil {
		return x.TotalProductAmount
	}
	return 0
}

func (x *OrderInfo) GetPaymentMethod() *OrderPaymentMethodInfo {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

func (x *OrderInfo) GetPromotions() []*OrderPromotionInfo {
	if x != nil {
		return x.Promotions
	}
	return nil
}

func (x *OrderInfo) GetTotalDiscountAmount() float64 {
	if x != nil {
		return x.TotalDiscountAmount
	}
	return 0
}

func (x *OrderInfo) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_INVALID
}

func (x *OrderInfo) GetShippingAddress() *ShippingAddressInfo {
	if x != nil {
		return x.ShippingAddress
	}
	return nil
}

func (x *OrderInfo) GetShippingFeeAmount() float64 {
	if x != nil {
		return x.ShippingFeeAmount
	}
	return 0
}

func (x *OrderInfo) GetInstallment() *InstallmentInfo {
	if x != nil {
		return x.Installment
	}
	return nil
}

func (x *OrderInfo) GetExtraServices() []*OrderProductInfoItem {
	if x != nil {
		return x.ExtraServices
	}
	return nil
}

func (x *OrderInfo) GetExtraServicesAmount() float64 {
	if x != nil {
		return x.ExtraServicesAmount
	}
	return 0
}

func (x *OrderInfo) GetFeeAmount() float64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *OrderInfo) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderInfo) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *OrderInfo) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_TYPE_INVALID
}

func (x *OrderInfo) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderInfo) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *OrderInfo) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

type OrderProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status          ProductStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=order.backend.ProductStatus" json:"status,omitempty"`
	Name            string                    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Medias          []string                  `protobuf:"bytes,4,rep,name=medias,proto3" json:"medias,omitempty"`
	Tags            []string                  `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Sku             string                    `protobuf:"bytes,6,opt,name=sku,proto3" json:"sku,omitempty"`
	ListedPrice     float64                   `protobuf:"fixed64,7,opt,name=listed_price,json=listedPrice,proto3" json:"listed_price,omitempty"`
	DiscountPercent float64                   `protobuf:"fixed64,8,opt,name=discount_percent,json=discountPercent,proto3" json:"discount_percent,omitempty"`
	Price           float64                   `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	Uom             string                    `protobuf:"bytes,10,opt,name=uom,proto3" json:"uom,omitempty"` // unit of measurement
	Barcode         string                    `protobuf:"bytes,11,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Currency        *OrderProductCurrencyInfo `protobuf:"bytes,12,opt,name=currency,proto3" json:"currency,omitempty"`
	Brand           string                    `protobuf:"bytes,13,opt,name=brand,proto3" json:"brand,omitempty"`
	Unlimited       Boolean                   `protobuf:"varint,14,opt,name=unlimited,proto3,enum=order.backend.Boolean" json:"unlimited,omitempty"`
	PartnershipId   string                    `protobuf:"bytes,15,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Country         string                    `protobuf:"bytes,16,opt,name=country,proto3" json:"country,omitempty"`
	Language        string                    `protobuf:"bytes,17,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *OrderProductInfo) Reset() {
	*x = OrderProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProductInfo) ProtoMessage() {}

func (x *OrderProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProductInfo.ProtoReflect.Descriptor instead.
func (*OrderProductInfo) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{1}
}

func (x *OrderProductInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderProductInfo) GetStatus() ProductStatus {
	if x != nil {
		return x.Status
	}
	return ProductStatus_PRODUCT_STATUS_INVALID
}

func (x *OrderProductInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderProductInfo) GetMedias() []string {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *OrderProductInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *OrderProductInfo) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *OrderProductInfo) GetListedPrice() float64 {
	if x != nil {
		return x.ListedPrice
	}
	return 0
}

func (x *OrderProductInfo) GetDiscountPercent() float64 {
	if x != nil {
		return x.DiscountPercent
	}
	return 0
}

func (x *OrderProductInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderProductInfo) GetUom() string {
	if x != nil {
		return x.Uom
	}
	return ""
}

func (x *OrderProductInfo) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *OrderProductInfo) GetCurrency() *OrderProductCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *OrderProductInfo) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *OrderProductInfo) GetUnlimited() Boolean {
	if x != nil {
		return x.Unlimited
	}
	return Boolean_BOOLEAN_INVALID
}

func (x *OrderProductInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *OrderProductInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *OrderProductInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type OrderProductCurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *OrderProductCurrencyInfo) Reset() {
	*x = OrderProductCurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProductCurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProductCurrencyInfo) ProtoMessage() {}

func (x *OrderProductCurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProductCurrencyInfo.ProtoReflect.Descriptor instead.
func (*OrderProductCurrencyInfo) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{2}
}

func (x *OrderProductCurrencyInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderProductCurrencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderProductCurrencyInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderProductCurrencyInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type OrderProductInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductInfo *OrderProductInfo `protobuf:"bytes,1,opt,name=product_info,json=productInfo,proto3" json:"product_info,omitempty"`
	Quantity    int64             `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *OrderProductInfoItem) Reset() {
	*x = OrderProductInfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProductInfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProductInfoItem) ProtoMessage() {}

func (x *OrderProductInfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProductInfoItem.ProtoReflect.Descriptor instead.
func (*OrderProductInfoItem) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{3}
}

func (x *OrderProductInfoItem) GetProductInfo() *OrderProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

func (x *OrderProductInfoItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type OrderPaymentMethodInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code          string             `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Method        OrderPaymentMethod `protobuf:"varint,3,opt,name=method,proto3,enum=order.backend.OrderPaymentMethod" json:"method,omitempty"`
	Fee           float64            `protobuf:"fixed64,4,opt,name=fee,proto3" json:"fee,omitempty"`
	AdditionalFee float64            `protobuf:"fixed64,5,opt,name=additional_fee,json=additionalFee,proto3" json:"additional_fee,omitempty"`
	DisplayFee    string             `protobuf:"bytes,6,opt,name=display_fee,json=displayFee,proto3" json:"display_fee,omitempty"`
	Icon          string             `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	Id            string             `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OrderPaymentMethodInfo) Reset() {
	*x = OrderPaymentMethodInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPaymentMethodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPaymentMethodInfo) ProtoMessage() {}

func (x *OrderPaymentMethodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPaymentMethodInfo.ProtoReflect.Descriptor instead.
func (*OrderPaymentMethodInfo) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{4}
}

func (x *OrderPaymentMethodInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderPaymentMethodInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderPaymentMethodInfo) GetMethod() OrderPaymentMethod {
	if x != nil {
		return x.Method
	}
	return OrderPaymentMethod_ORDER_PAYMENT_METHOD_INVALID
}

func (x *OrderPaymentMethodInfo) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *OrderPaymentMethodInfo) GetAdditionalFee() float64 {
	if x != nil {
		return x.AdditionalFee
	}
	return 0
}

func (x *OrderPaymentMethodInfo) GetDisplayFee() string {
	if x != nil {
		return x.DisplayFee
	}
	return ""
}

func (x *OrderPaymentMethodInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *OrderPaymentMethodInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OrderPromotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShortDesc       string  `protobuf:"bytes,3,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`
	Code            string  `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	CoverImage      string  `protobuf:"bytes,5,opt,name=cover_image,json=coverImage,proto3" json:"cover_image,omitempty"`
	DiscountPercent float64 `protobuf:"fixed64,6,opt,name=discount_percent,json=discountPercent,proto3" json:"discount_percent,omitempty"`
}

func (x *OrderPromotionInfo) Reset() {
	*x = OrderPromotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPromotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPromotionInfo) ProtoMessage() {}

func (x *OrderPromotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPromotionInfo.ProtoReflect.Descriptor instead.
func (*OrderPromotionInfo) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{5}
}

func (x *OrderPromotionInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPromotionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderPromotionInfo) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *OrderPromotionInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderPromotionInfo) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

func (x *OrderPromotionInfo) GetDiscountPercent() float64 {
	if x != nil {
		return x.DiscountPercent
	}
	return 0
}

type OrderCurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *OrderCurrencyInfo) Reset() {
	*x = OrderCurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCurrencyInfo) ProtoMessage() {}

func (x *OrderCurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCurrencyInfo.ProtoReflect.Descriptor instead.
func (*OrderCurrencyInfo) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{6}
}

func (x *OrderCurrencyInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderCurrencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderCurrencyInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderCurrencyInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type OrderProductItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PackageId string `protobuf:"bytes,2,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	Quantity  int64  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *OrderProductItem) Reset() {
	*x = OrderProductItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProductItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProductItem) ProtoMessage() {}

func (x *OrderProductItem) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProductItem.ProtoReflect.Descriptor instead.
func (*OrderProductItem) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{7}
}

func (x *OrderProductItem) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OrderProductItem) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *OrderProductItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ShippingAddressInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        ShippingAddressType `protobuf:"varint,1,opt,name=type,proto3,enum=order.backend.ShippingAddressType" json:"type,omitempty"`
	Address     string              `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	City        string              `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	District    string              `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	Region      string              `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Postcode    string              `protobuf:"bytes,6,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Country     string              `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Lat         float64             `protobuf:"fixed64,8,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon         float64             `protobuf:"fixed64,9,opt,name=lon,proto3" json:"lon,omitempty"`
	Name        string              `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	PhoneCode   string              `protobuf:"bytes,11,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	PhoneNumber string              `protobuf:"bytes,12,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *ShippingAddressInfo) Reset() {
	*x = ShippingAddressInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingAddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingAddressInfo) ProtoMessage() {}

func (x *ShippingAddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingAddressInfo.ProtoReflect.Descriptor instead.
func (*ShippingAddressInfo) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{8}
}

func (x *ShippingAddressInfo) GetType() ShippingAddressType {
	if x != nil {
		return x.Type
	}
	return ShippingAddressType_SHIPPING_ADDRESS_TYPE_INVALID
}

func (x *ShippingAddressInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ShippingAddressInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ShippingAddressInfo) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *ShippingAddressInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ShippingAddressInfo) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *ShippingAddressInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ShippingAddressInfo) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *ShippingAddressInfo) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *ShippingAddressInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShippingAddressInfo) GetPhoneCode() string {
	if x != nil {
		return x.PhoneCode
	}
	return ""
}

func (x *ShippingAddressInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type InstallmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Duration string  `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Fee      float64 `protobuf:"fixed64,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *InstallmentInfo) Reset() {
	*x = InstallmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallmentInfo) ProtoMessage() {}

func (x *InstallmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallmentInfo.ProtoReflect.Descriptor instead.
func (*InstallmentInfo) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{9}
}

func (x *InstallmentInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InstallmentInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *InstallmentInfo) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type OrderProductAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterDataId string                         `protobuf:"bytes,1,opt,name=master_data_id,json=masterDataId,proto3" json:"master_data_id,omitempty"`
	Values       []*OrderProductAttribute_Value `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *OrderProductAttribute) Reset() {
	*x = OrderProductAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProductAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProductAttribute) ProtoMessage() {}

func (x *OrderProductAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProductAttribute.ProtoReflect.Descriptor instead.
func (*OrderProductAttribute) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{10}
}

func (x *OrderProductAttribute) GetMasterDataId() string {
	if x != nil {
		return x.MasterDataId
	}
	return ""
}

func (x *OrderProductAttribute) GetValues() []*OrderProductAttribute_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetOrderByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderIds []string `protobuf:"bytes,1,rep,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
}

func (x *GetOrderByIdsReq) Reset() {
	*x = GetOrderByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByIdsReq) ProtoMessage() {}

func (x *GetOrderByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByIdsReq.ProtoReflect.Descriptor instead.
func (*GetOrderByIdsReq) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{11}
}

func (x *GetOrderByIdsReq) GetOrderIds() []string {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

type ExpireOrdersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExpireOrdersReq) Reset() {
	*x = ExpireOrdersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireOrdersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireOrdersReq) ProtoMessage() {}

func (x *ExpireOrdersReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireOrdersReq.ProtoReflect.Descriptor instead.
func (*ExpireOrdersReq) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{12}
}

type GetOrderByIdsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*OrderInfo `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetOrderByIdsRes) Reset() {
	*x = GetOrderByIdsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderByIdsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByIdsRes) ProtoMessage() {}

func (x *GetOrderByIdsRes) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByIdsRes.ProtoReflect.Descriptor instead.
func (*GetOrderByIdsRes) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{13}
}

func (x *GetOrderByIdsRes) GetOrders() []*OrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

type ExpireOrdersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExpireOrdersRes) Reset() {
	*x = ExpireOrdersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireOrdersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireOrdersRes) ProtoMessage() {}

func (x *ExpireOrdersRes) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireOrdersRes.ProtoReflect.Descriptor instead.
func (*ExpireOrdersRes) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{14}
}

type OrderProductAttribute_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OrderProductAttribute_Value) Reset() {
	*x = OrderProductAttribute_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_backend_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProductAttribute_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProductAttribute_Value) ProtoMessage() {}

func (x *OrderProductAttribute_Value) ProtoReflect() protoreflect.Message {
	mi := &file_order_backend_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProductAttribute_Value.ProtoReflect.Descriptor instead.
func (*OrderProductAttribute_Value) Descriptor() ([]byte, []int) {
	return file_order_backend_order_proto_rawDescGZIP(), []int{10, 0}
}

func (x *OrderProductAttribute_Value) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *OrderProductAttribute_Value) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_order_backend_order_proto protoreflect.FileDescriptor

var file_order_backend_order_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x1a, 0x18, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x09, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x4d, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x40, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xa8, 0x04, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x6b, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x43, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x75, 0x6e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x09, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x66, 0x0a,
	0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x42, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xf9, 0x01,
	0x0a, 0x16, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x39, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0xdf, 0x02, 0x0a, 0x13, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x11,
	0x0a, 0x0f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x2a, 0x8c, 0x02, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x52, 0x41, 0x46,
	0x54, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55,
	0x4c, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x1a,
	0x0a, 0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x08,
	0x2a, 0x59, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x1c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x01, 0x2a, 0x4c, 0x0a, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42,
	0x55, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x2a, 0x8a, 0x01, 0x0a, 0x13, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x48, 0x49, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x44,
	0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x48, 0x49, 0x50, 0x50, 0x49, 0x4e, 0x47,
	0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x45,
	0x4e, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x26,
	0x0a, 0x22, 0x53, 0x48, 0x49, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45,
	0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x2a, 0xc7, 0x01, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x23, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x50, 0x55,
	0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4e, 0x54,
	0x5f, 0x4f, 0x52, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x50, 0x55, 0x52, 0x43,
	0x48, 0x41, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x4f,
	0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x29, 0x0a, 0x25, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x03,
	0x2a, 0x9f, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1c,
	0x0a, 0x18, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a,
	0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x52, 0x41, 0x46, 0x54, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x04, 0x32, 0xb1, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0c, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x62, 0x63, 0x61, 0x73, 0x69, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x74, 0x68, 0x75, 0x79, 0x6e,
	0x67, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x3b, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_backend_order_proto_rawDescOnce sync.Once
	file_order_backend_order_proto_rawDescData = file_order_backend_order_proto_rawDesc
)

func file_order_backend_order_proto_rawDescGZIP() []byte {
	file_order_backend_order_proto_rawDescOnce.Do(func() {
		file_order_backend_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_backend_order_proto_rawDescData)
	})
	return file_order_backend_order_proto_rawDescData
}

var file_order_backend_order_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_order_backend_order_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_order_backend_order_proto_goTypes = []interface{}{
	(OrderStatus)(0),                    // 0: order.backend.OrderStatus
	(OrderPaymentMethod)(0),             // 1: order.backend.OrderPaymentMethod
	(OrderType)(0),                      // 2: order.backend.OrderType
	(ShippingAddressType)(0),            // 3: order.backend.ShippingAddressType
	(OrderProductPurchaseType)(0),       // 4: order.backend.OrderProductPurchaseType
	(ProductStatus)(0),                  // 5: order.backend.ProductStatus
	(*OrderInfo)(nil),                   // 6: order.backend.OrderInfo
	(*OrderProductInfo)(nil),            // 7: order.backend.OrderProductInfo
	(*OrderProductCurrencyInfo)(nil),    // 8: order.backend.OrderProductCurrencyInfo
	(*OrderProductInfoItem)(nil),        // 9: order.backend.OrderProductInfoItem
	(*OrderPaymentMethodInfo)(nil),      // 10: order.backend.OrderPaymentMethodInfo
	(*OrderPromotionInfo)(nil),          // 11: order.backend.OrderPromotionInfo
	(*OrderCurrencyInfo)(nil),           // 12: order.backend.OrderCurrencyInfo
	(*OrderProductItem)(nil),            // 13: order.backend.OrderProductItem
	(*ShippingAddressInfo)(nil),         // 14: order.backend.ShippingAddressInfo
	(*InstallmentInfo)(nil),             // 15: order.backend.InstallmentInfo
	(*OrderProductAttribute)(nil),       // 16: order.backend.OrderProductAttribute
	(*GetOrderByIdsReq)(nil),            // 17: order.backend.GetOrderByIdsReq
	(*ExpireOrdersReq)(nil),             // 18: order.backend.ExpireOrdersReq
	(*GetOrderByIdsRes)(nil),            // 19: order.backend.GetOrderByIdsRes
	(*ExpireOrdersRes)(nil),             // 20: order.backend.ExpireOrdersRes
	(*OrderProductAttribute_Value)(nil), // 21: order.backend.OrderProductAttribute.Value
	(Boolean)(0),                        // 22: order.backend.Boolean
}
var file_order_backend_order_proto_depIdxs = []int32{
	12, // 0: order.backend.OrderInfo.currency:type_name -> order.backend.OrderCurrencyInfo
	9,  // 1: order.backend.OrderInfo.products:type_name -> order.backend.OrderProductInfoItem
	10, // 2: order.backend.OrderInfo.payment_method:type_name -> order.backend.OrderPaymentMethodInfo
	11, // 3: order.backend.OrderInfo.promotions:type_name -> order.backend.OrderPromotionInfo
	0,  // 4: order.backend.OrderInfo.status:type_name -> order.backend.OrderStatus
	14, // 5: order.backend.OrderInfo.shipping_address:type_name -> order.backend.ShippingAddressInfo
	15, // 6: order.backend.OrderInfo.installment:type_name -> order.backend.InstallmentInfo
	9,  // 7: order.backend.OrderInfo.extra_services:type_name -> order.backend.OrderProductInfoItem
	2,  // 8: order.backend.OrderInfo.order_type:type_name -> order.backend.OrderType
	5,  // 9: order.backend.OrderProductInfo.status:type_name -> order.backend.ProductStatus
	8,  // 10: order.backend.OrderProductInfo.currency:type_name -> order.backend.OrderProductCurrencyInfo
	22, // 11: order.backend.OrderProductInfo.unlimited:type_name -> order.backend.Boolean
	7,  // 12: order.backend.OrderProductInfoItem.product_info:type_name -> order.backend.OrderProductInfo
	1,  // 13: order.backend.OrderPaymentMethodInfo.method:type_name -> order.backend.OrderPaymentMethod
	3,  // 14: order.backend.ShippingAddressInfo.type:type_name -> order.backend.ShippingAddressType
	21, // 15: order.backend.OrderProductAttribute.values:type_name -> order.backend.OrderProductAttribute.Value
	6,  // 16: order.backend.GetOrderByIdsRes.orders:type_name -> order.backend.OrderInfo
	17, // 17: order.backend.OrderService.GetOrderByIds:input_type -> order.backend.GetOrderByIdsReq
	18, // 18: order.backend.OrderService.ExpireOrders:input_type -> order.backend.ExpireOrdersReq
	19, // 19: order.backend.OrderService.GetOrderByIds:output_type -> order.backend.GetOrderByIdsRes
	20, // 20: order.backend.OrderService.ExpireOrders:output_type -> order.backend.ExpireOrdersRes
	19, // [19:21] is the sub-list for method output_type
	17, // [17:19] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_order_backend_order_proto_init() }
func file_order_backend_order_proto_init() {
	if File_order_backend_order_proto != nil {
		return
	}
	file_order_backend_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_order_backend_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProductCurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProductInfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPaymentMethodInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPromotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProductItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingAddressInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProductAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireOrdersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderByIdsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireOrdersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_backend_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProductAttribute_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_backend_order_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_backend_order_proto_goTypes,
		DependencyIndexes: file_order_backend_order_proto_depIdxs,
		EnumInfos:         file_order_backend_order_proto_enumTypes,
		MessageInfos:      file_order_backend_order_proto_msgTypes,
	}.Build()
	File_order_backend_order_proto = out.File
	file_order_backend_order_proto_rawDesc = nil
	file_order_backend_order_proto_goTypes = nil
	file_order_backend_order_proto_depIdxs = nil
}
