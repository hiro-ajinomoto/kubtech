// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: ticket/mobile/ticket.proto

package mobile

import (
	base "gitlab.bcasia.io/thuynga/apps/api/gen/go/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketStatus int32

const (
	TicketStatus_TICKET_STATUS_INVALID    TicketStatus = 0
	TicketStatus_TICKET_STATUS_NOT_USED   TicketStatus = 1
	TicketStatus_TICKET_STATUS_CHECKED_IN TicketStatus = 2
)

// Enum value maps for TicketStatus.
var (
	TicketStatus_name = map[int32]string{
		0: "TICKET_STATUS_INVALID",
		1: "TICKET_STATUS_NOT_USED",
		2: "TICKET_STATUS_CHECKED_IN",
	}
	TicketStatus_value = map[string]int32{
		"TICKET_STATUS_INVALID":    0,
		"TICKET_STATUS_NOT_USED":   1,
		"TICKET_STATUS_CHECKED_IN": 2,
	}
)

func (x TicketStatus) Enum() *TicketStatus {
	p := new(TicketStatus)
	*p = x
	return p
}

func (x TicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ticket_mobile_ticket_proto_enumTypes[0].Descriptor()
}

func (TicketStatus) Type() protoreflect.EnumType {
	return &file_ticket_mobile_ticket_proto_enumTypes[0]
}

func (x TicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketStatus.Descriptor instead.
func (TicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{0}
}

type TicketStatusFilter int32

const (
	TicketStatusFilter_TICKET_FILTER_STATUS_INVALID     TicketStatusFilter = 0
	TicketStatusFilter_TICKET_FILTER_STATUS_NOT_USED    TicketStatusFilter = 1
	TicketStatusFilter_TICKET_FILTER_STATUS_CHECKED_IN  TicketStatusFilter = 2
	TicketStatusFilter_TICKET_FILTER_STATUS_TRANSFERRED TicketStatusFilter = 3
)

// Enum value maps for TicketStatusFilter.
var (
	TicketStatusFilter_name = map[int32]string{
		0: "TICKET_FILTER_STATUS_INVALID",
		1: "TICKET_FILTER_STATUS_NOT_USED",
		2: "TICKET_FILTER_STATUS_CHECKED_IN",
		3: "TICKET_FILTER_STATUS_TRANSFERRED",
	}
	TicketStatusFilter_value = map[string]int32{
		"TICKET_FILTER_STATUS_INVALID":     0,
		"TICKET_FILTER_STATUS_NOT_USED":    1,
		"TICKET_FILTER_STATUS_CHECKED_IN":  2,
		"TICKET_FILTER_STATUS_TRANSFERRED": 3,
	}
)

func (x TicketStatusFilter) Enum() *TicketStatusFilter {
	p := new(TicketStatusFilter)
	*p = x
	return p
}

func (x TicketStatusFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketStatusFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_ticket_mobile_ticket_proto_enumTypes[1].Descriptor()
}

func (TicketStatusFilter) Type() protoreflect.EnumType {
	return &file_ticket_mobile_ticket_proto_enumTypes[1]
}

func (x TicketStatusFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketStatusFilter.Descriptor instead.
func (TicketStatusFilter) EnumDescriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{1}
}

type TicketType int32

const (
	TicketType_TICKET_TYPE_BUY      TicketType = 0
	TicketType_TICKET_TYPE_RELEASE  TicketType = 1
	TicketType_TICKET_TYPE_TRANSFER TicketType = 2
)

// Enum value maps for TicketType.
var (
	TicketType_name = map[int32]string{
		0: "TICKET_TYPE_BUY",
		1: "TICKET_TYPE_RELEASE",
		2: "TICKET_TYPE_TRANSFER",
	}
	TicketType_value = map[string]int32{
		"TICKET_TYPE_BUY":      0,
		"TICKET_TYPE_RELEASE":  1,
		"TICKET_TYPE_TRANSFER": 2,
	}
)

func (x TicketType) Enum() *TicketType {
	p := new(TicketType)
	*p = x
	return p
}

func (x TicketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketType) Descriptor() protoreflect.EnumDescriptor {
	return file_ticket_mobile_ticket_proto_enumTypes[2].Descriptor()
}

func (TicketType) Type() protoreflect.EnumType {
	return &file_ticket_mobile_ticket_proto_enumTypes[2]
}

func (x TicketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketType.Descriptor instead.
func (TicketType) EnumDescriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{2}
}

type TicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt                 int64            `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                 int64            `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	OrderId                   string           `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	EventInfo                 *TicketEventInfo `protobuf:"bytes,5,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	SeatInfo                  *TicketSeatInfo  `protobuf:"bytes,6,opt,name=seat_info,json=seatInfo,proto3" json:"seat_info,omitempty"`
	Status                    TicketStatus     `protobuf:"varint,7,opt,name=status,proto3,enum=ticket.mobile.TicketStatus" json:"status,omitempty"`
	SecretCode                string           `protobuf:"bytes,8,opt,name=secret_code,json=secretCode,proto3" json:"secret_code,omitempty"`                   // random
	VerificationCode          string           `protobuf:"bytes,9,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"` // 6 sá»‘
	UserInfo                  *TicketUserInfo  `protobuf:"bytes,10,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	IsEnabledVerificationCode bool             `protobuf:"varint,11,opt,name=is_enabled_verification_code,json=isEnabledVerificationCode,proto3" json:"is_enabled_verification_code,omitempty"`
	PartnershipId             string           `protobuf:"bytes,12,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	TicketType                TicketType       `protobuf:"varint,13,opt,name=ticket_type,json=ticketType,proto3,enum=ticket.mobile.TicketType" json:"ticket_type,omitempty"`
	OwnerId                   string           `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	IsTransferableTicket      bool             `protobuf:"varint,15,opt,name=is_transferable_ticket,json=isTransferableTicket,proto3" json:"is_transferable_ticket,omitempty"`
	TransferTransactionId     string           `protobuf:"bytes,16,opt,name=transfer_transaction_id,json=transferTransactionId,proto3" json:"transfer_transaction_id,omitempty"`
}

func (x *TicketInfo) Reset() {
	*x = TicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketInfo) ProtoMessage() {}

func (x *TicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketInfo.ProtoReflect.Descriptor instead.
func (*TicketInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *TicketInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TicketInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *TicketInfo) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TicketInfo) GetEventInfo() *TicketEventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *TicketInfo) GetSeatInfo() *TicketSeatInfo {
	if x != nil {
		return x.SeatInfo
	}
	return nil
}

func (x *TicketInfo) GetStatus() TicketStatus {
	if x != nil {
		return x.Status
	}
	return TicketStatus_TICKET_STATUS_INVALID
}

func (x *TicketInfo) GetSecretCode() string {
	if x != nil {
		return x.SecretCode
	}
	return ""
}

func (x *TicketInfo) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

func (x *TicketInfo) GetUserInfo() *TicketUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *TicketInfo) GetIsEnabledVerificationCode() bool {
	if x != nil {
		return x.IsEnabledVerificationCode
	}
	return false
}

func (x *TicketInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *TicketInfo) GetTicketType() TicketType {
	if x != nil {
		return x.TicketType
	}
	return TicketType_TICKET_TYPE_BUY
}

func (x *TicketInfo) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *TicketInfo) GetIsTransferableTicket() bool {
	if x != nil {
		return x.IsTransferableTicket
	}
	return false
}

func (x *TicketInfo) GetTransferTransactionId() string {
	if x != nil {
		return x.TransferTransactionId
	}
	return ""
}

type TicketPriceSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon     string              `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Price    float64             `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Currency *TicketCurrencyInfo `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *TicketPriceSimpleInfo) Reset() {
	*x = TicketPriceSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketPriceSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketPriceSimpleInfo) ProtoMessage() {}

func (x *TicketPriceSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketPriceSimpleInfo.ProtoReflect.Descriptor instead.
func (*TicketPriceSimpleInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *TicketPriceSimpleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketPriceSimpleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketPriceSimpleInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TicketPriceSimpleInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TicketPriceSimpleInfo) GetCurrency() *TicketCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

type TicketCurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *TicketCurrencyInfo) Reset() {
	*x = TicketCurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketCurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketCurrencyInfo) ProtoMessage() {}

func (x *TicketCurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketCurrencyInfo.ProtoReflect.Descriptor instead.
func (*TicketCurrencyInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *TicketCurrencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketCurrencyInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TicketCurrencyInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type TicketEventLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Ward     string `protobuf:"bytes,3,opt,name=ward,proto3" json:"ward,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *TicketEventLocation) Reset() {
	*x = TicketEventLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketEventLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketEventLocation) ProtoMessage() {}

func (x *TicketEventLocation) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketEventLocation.ProtoReflect.Descriptor instead.
func (*TicketEventLocation) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *TicketEventLocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketEventLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TicketEventLocation) GetWard() string {
	if x != nil {
		return x.Ward
	}
	return ""
}

func (x *TicketEventLocation) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *TicketEventLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *TicketEventLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type TicketEventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          string               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Name             string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartTime        int64                `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          int64                `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CheckinStartTime int64                `protobuf:"varint,5,opt,name=checkin_start_time,json=checkinStartTime,proto3" json:"checkin_start_time,omitempty"`
	CheckinEndTime   int64                `protobuf:"varint,6,opt,name=checkin_end_time,json=checkinEndTime,proto3" json:"checkin_end_time,omitempty"`
	Location         *TicketEventLocation `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Timezone         string               `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
	CheckinEnded     bool                 `protobuf:"varint,9,opt,name=checkin_ended,json=checkinEnded,proto3" json:"checkin_ended,omitempty"`
	ScheduleId       string               `protobuf:"bytes,10,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
}

func (x *TicketEventInfo) Reset() {
	*x = TicketEventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketEventInfo) ProtoMessage() {}

func (x *TicketEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketEventInfo.ProtoReflect.Descriptor instead.
func (*TicketEventInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *TicketEventInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TicketEventInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketEventInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TicketEventInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TicketEventInfo) GetCheckinStartTime() int64 {
	if x != nil {
		return x.CheckinStartTime
	}
	return 0
}

func (x *TicketEventInfo) GetCheckinEndTime() int64 {
	if x != nil {
		return x.CheckinEndTime
	}
	return 0
}

func (x *TicketEventInfo) GetLocation() *TicketEventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *TicketEventInfo) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *TicketEventInfo) GetCheckinEnded() bool {
	if x != nil {
		return x.CheckinEnded
	}
	return false
}

func (x *TicketEventInfo) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

type TicketUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserFullName       string `protobuf:"bytes,2,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	UserPhone          string `protobuf:"bytes,3,opt,name=user_phone,json=userPhone,proto3" json:"user_phone,omitempty"`
	UserEmail          string `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	UserAddress        string `protobuf:"bytes,5,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	UserImage          string `protobuf:"bytes,6,opt,name=user_image,json=userImage,proto3" json:"user_image,omitempty"`
	UserPhoneCode      string `protobuf:"bytes,7,opt,name=user_phone_code,json=userPhoneCode,proto3" json:"user_phone_code,omitempty"`
	IsDeclaredCovid    bool   `protobuf:"varint,8,opt,name=is_declared_covid,json=isDeclaredCovid,proto3" json:"is_declared_covid,omitempty"`
	UserInspectorImage string `protobuf:"bytes,9,opt,name=user_inspector_image,json=userInspectorImage,proto3" json:"user_inspector_image,omitempty"`
}

func (x *TicketUserInfo) Reset() {
	*x = TicketUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketUserInfo) ProtoMessage() {}

func (x *TicketUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketUserInfo.ProtoReflect.Descriptor instead.
func (*TicketUserInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *TicketUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TicketUserInfo) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *TicketUserInfo) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *TicketUserInfo) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *TicketUserInfo) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *TicketUserInfo) GetUserImage() string {
	if x != nil {
		return x.UserImage
	}
	return ""
}

func (x *TicketUserInfo) GetUserPhoneCode() string {
	if x != nil {
		return x.UserPhoneCode
	}
	return ""
}

func (x *TicketUserInfo) GetIsDeclaredCovid() bool {
	if x != nil {
		return x.IsDeclaredCovid
	}
	return false
}

func (x *TicketUserInfo) GetUserInspectorImage() string {
	if x != nil {
		return x.UserInspectorImage
	}
	return ""
}

type TicketSeatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price              *TicketPriceSimpleInfo `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	PriceBlockId       string                 `protobuf:"bytes,4,opt,name=price_block_id,json=priceBlockId,proto3" json:"price_block_id,omitempty"`
	PriceBlockName     string                 `protobuf:"bytes,5,opt,name=price_block_name,json=priceBlockName,proto3" json:"price_block_name,omitempty"`
	GeneralSeatMapId   string                 `protobuf:"bytes,6,opt,name=general_seat_map_id,json=generalSeatMapId,proto3" json:"general_seat_map_id,omitempty"`
	GeneralSeatMapName string                 `protobuf:"bytes,7,opt,name=general_seat_map_name,json=generalSeatMapName,proto3" json:"general_seat_map_name,omitempty"`
	SeatTypeName       string                 `protobuf:"bytes,8,opt,name=seat_type_name,json=seatTypeName,proto3" json:"seat_type_name,omitempty"`
}

func (x *TicketSeatInfo) Reset() {
	*x = TicketSeatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketSeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketSeatInfo) ProtoMessage() {}

func (x *TicketSeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketSeatInfo.ProtoReflect.Descriptor instead.
func (*TicketSeatInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{6}
}

func (x *TicketSeatInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketSeatInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketSeatInfo) GetPrice() *TicketPriceSimpleInfo {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *TicketSeatInfo) GetPriceBlockId() string {
	if x != nil {
		return x.PriceBlockId
	}
	return ""
}

func (x *TicketSeatInfo) GetPriceBlockName() string {
	if x != nil {
		return x.PriceBlockName
	}
	return ""
}

func (x *TicketSeatInfo) GetGeneralSeatMapId() string {
	if x != nil {
		return x.GeneralSeatMapId
	}
	return ""
}

func (x *TicketSeatInfo) GetGeneralSeatMapName() string {
	if x != nil {
		return x.GeneralSeatMapName
	}
	return ""
}

func (x *TicketSeatInfo) GetSeatTypeName() string {
	if x != nil {
		return x.SeatTypeName
	}
	return ""
}

type TransferTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventId            string  `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SeatId             string  `protobuf:"bytes,3,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	SeatName           string  `protobuf:"bytes,4,opt,name=seat_name,json=seatName,proto3" json:"seat_name,omitempty"`
	Price              float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	PriceBlockId       string  `protobuf:"bytes,6,opt,name=price_block_id,json=priceBlockId,proto3" json:"price_block_id,omitempty"`
	PriceBlockName     string  `protobuf:"bytes,7,opt,name=price_block_name,json=priceBlockName,proto3" json:"price_block_name,omitempty"`
	GeneralSeatMapId   string  `protobuf:"bytes,8,opt,name=general_seat_map_id,json=generalSeatMapId,proto3" json:"general_seat_map_id,omitempty"`
	GeneralSeatMapName string  `protobuf:"bytes,9,opt,name=general_seat_map_name,json=generalSeatMapName,proto3" json:"general_seat_map_name,omitempty"`
	SeatTypeName       string  `protobuf:"bytes,10,opt,name=seat_type_name,json=seatTypeName,proto3" json:"seat_type_name,omitempty"`
	CurrencyCode       string  `protobuf:"bytes,11,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
}

func (x *TransferTicket) Reset() {
	*x = TransferTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTicket) ProtoMessage() {}

func (x *TransferTicket) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTicket.ProtoReflect.Descriptor instead.
func (*TransferTicket) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{7}
}

func (x *TransferTicket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransferTicket) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TransferTicket) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

func (x *TransferTicket) GetSeatName() string {
	if x != nil {
		return x.SeatName
	}
	return ""
}

func (x *TransferTicket) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TransferTicket) GetPriceBlockId() string {
	if x != nil {
		return x.PriceBlockId
	}
	return ""
}

func (x *TransferTicket) GetPriceBlockName() string {
	if x != nil {
		return x.PriceBlockName
	}
	return ""
}

func (x *TransferTicket) GetGeneralSeatMapId() string {
	if x != nil {
		return x.GeneralSeatMapId
	}
	return ""
}

func (x *TransferTicket) GetGeneralSeatMapName() string {
	if x != nil {
		return x.GeneralSeatMapName
	}
	return ""
}

func (x *TransferTicket) GetSeatTypeName() string {
	if x != nil {
		return x.SeatTypeName
	}
	return ""
}

func (x *TransferTicket) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type TransferTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tickets []*TransferTicket `protobuf:"bytes,2,rep,name=tickets,proto3" json:"tickets,omitempty"`
	From    string            `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To      string            `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *TransferTransaction) Reset() {
	*x = TransferTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTransaction) ProtoMessage() {}

func (x *TransferTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTransaction.ProtoReflect.Descriptor instead.
func (*TransferTransaction) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{8}
}

func (x *TransferTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransferTransaction) GetTickets() []*TransferTicket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *TransferTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransferTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type UpdateUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId      string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserFullName  string `protobuf:"bytes,3,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	UserPhone     string `protobuf:"bytes,4,opt,name=user_phone,json=userPhone,proto3" json:"user_phone,omitempty"` // what if a child?
	UserEmail     string `protobuf:"bytes,5,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	UserAddress   string `protobuf:"bytes,6,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	UserImage     string `protobuf:"bytes,7,opt,name=user_image,json=userImage,proto3" json:"user_image,omitempty"` // required at inspector
	UserPhoneCode string `protobuf:"bytes,8,opt,name=user_phone_code,json=userPhoneCode,proto3" json:"user_phone_code,omitempty"`
}

func (x *UpdateUserInfoReq) Reset() {
	*x = UpdateUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoReq) ProtoMessage() {}

func (x *UpdateUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserInfoReq) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUserImage() string {
	if x != nil {
		return x.UserImage
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUserPhoneCode() string {
	if x != nil {
		return x.UserPhoneCode
	}
	return ""
}

type UpdateStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string       `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Status   TicketStatus `protobuf:"varint,2,opt,name=status,proto3,enum=ticket.mobile.TicketStatus" json:"status,omitempty"`
}

func (x *UpdateStatusReq) Reset() {
	*x = UpdateStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusReq) ProtoMessage() {}

func (x *UpdateStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateStatusReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateStatusReq) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateStatusReq) GetStatus() TicketStatus {
	if x != nil {
		return x.Status
	}
	return TicketStatus_TICKET_STATUS_INVALID
}

type UpdateEnableVerificationCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId                  string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	IsEnabledVerificationCode bool   `protobuf:"varint,2,opt,name=is_enabled_verification_code,json=isEnabledVerificationCode,proto3" json:"is_enabled_verification_code,omitempty"`
}

func (x *UpdateEnableVerificationCodeReq) Reset() {
	*x = UpdateEnableVerificationCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnableVerificationCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnableVerificationCodeReq) ProtoMessage() {}

func (x *UpdateEnableVerificationCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnableVerificationCodeReq.ProtoReflect.Descriptor instead.
func (*UpdateEnableVerificationCodeReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateEnableVerificationCodeReq) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateEnableVerificationCodeReq) GetIsEnabledVerificationCode() bool {
	if x != nil {
		return x.IsEnabledVerificationCode
	}
	return false
}

type GetMyTicketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMyTicketReq) Reset() {
	*x = GetMyTicketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketReq) ProtoMessage() {}

func (x *GetMyTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketReq.ProtoReflect.Descriptor instead.
func (*GetMyTicketReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{12}
}

func (x *GetMyTicketReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMyTicketByOrderIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    string             `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Status     TicketStatusFilter `protobuf:"varint,2,opt,name=status,proto3,enum=ticket.mobile.TicketStatusFilter" json:"status,omitempty"`
	Pagination *PaginationReq     `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMyTicketByOrderIdReq) Reset() {
	*x = GetMyTicketByOrderIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketByOrderIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketByOrderIdReq) ProtoMessage() {}

func (x *GetMyTicketByOrderIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketByOrderIdReq.ProtoReflect.Descriptor instead.
func (*GetMyTicketByOrderIdReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{13}
}

func (x *GetMyTicketByOrderIdReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetMyTicketByOrderIdReq) GetStatus() TicketStatusFilter {
	if x != nil {
		return x.Status
	}
	return TicketStatusFilter_TICKET_FILTER_STATUS_INVALID
}

func (x *GetMyTicketByOrderIdReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMyTicketByPhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPhone        string `protobuf:"bytes,1,opt,name=user_phone,json=userPhone,proto3" json:"user_phone,omitempty"`
	VerificationCode string `protobuf:"bytes,2,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *GetMyTicketByPhoneReq) Reset() {
	*x = GetMyTicketByPhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketByPhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketByPhoneReq) ProtoMessage() {}

func (x *GetMyTicketByPhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketByPhoneReq.ProtoReflect.Descriptor instead.
func (*GetMyTicketByPhoneReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{14}
}

func (x *GetMyTicketByPhoneReq) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *GetMyTicketByPhoneReq) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

type GetMyTicketByTransferTransactionIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string         `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Pagination    *PaginationReq `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMyTicketByTransferTransactionIdReq) Reset() {
	*x = GetMyTicketByTransferTransactionIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketByTransferTransactionIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketByTransferTransactionIdReq) ProtoMessage() {}

func (x *GetMyTicketByTransferTransactionIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketByTransferTransactionIdReq.ProtoReflect.Descriptor instead.
func (*GetMyTicketByTransferTransactionIdReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{15}
}

func (x *GetMyTicketByTransferTransactionIdReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *GetMyTicketByTransferTransactionIdReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListMyTicketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyTicketReq) Reset() {
	*x = ListMyTicketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyTicketReq) ProtoMessage() {}

func (x *ListMyTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyTicketReq.ProtoReflect.Descriptor instead.
func (*ListMyTicketReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{16}
}

type ListMyTicketByStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    string         `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Status     TicketStatus   `protobuf:"varint,2,opt,name=status,proto3,enum=ticket.mobile.TicketStatus" json:"status,omitempty"`
	Pagination *PaginationReq `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListMyTicketByStatusReq) Reset() {
	*x = ListMyTicketByStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyTicketByStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyTicketByStatusReq) ProtoMessage() {}

func (x *ListMyTicketByStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyTicketByStatusReq.ProtoReflect.Descriptor instead.
func (*ListMyTicketByStatusReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{17}
}

func (x *ListMyTicketByStatusReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ListMyTicketByStatusReq) GetStatus() TicketStatus {
	if x != nil {
		return x.Status
	}
	return TicketStatus_TICKET_STATUS_INVALID
}

func (x *ListMyTicketByStatusReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListMyTicketByPriceBlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId      string         `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	PriceBlockId string         `protobuf:"bytes,2,opt,name=price_block_id,json=priceBlockId,proto3" json:"price_block_id,omitempty"`
	SeatNameFrom string         `protobuf:"bytes,3,opt,name=seat_name_from,json=seatNameFrom,proto3" json:"seat_name_from,omitempty"`
	SeatNameTo   string         `protobuf:"bytes,4,opt,name=seat_name_to,json=seatNameTo,proto3" json:"seat_name_to,omitempty"`
	SeatMapId    string         `protobuf:"bytes,5,opt,name=seat_map_id,json=seatMapId,proto3" json:"seat_map_id,omitempty"`
	Pagination   *PaginationReq `protobuf:"bytes,6,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListMyTicketByPriceBlockReq) Reset() {
	*x = ListMyTicketByPriceBlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyTicketByPriceBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyTicketByPriceBlockReq) ProtoMessage() {}

func (x *ListMyTicketByPriceBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyTicketByPriceBlockReq.ProtoReflect.Descriptor instead.
func (*ListMyTicketByPriceBlockReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{18}
}

func (x *ListMyTicketByPriceBlockReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ListMyTicketByPriceBlockReq) GetPriceBlockId() string {
	if x != nil {
		return x.PriceBlockId
	}
	return ""
}

func (x *ListMyTicketByPriceBlockReq) GetSeatNameFrom() string {
	if x != nil {
		return x.SeatNameFrom
	}
	return ""
}

func (x *ListMyTicketByPriceBlockReq) GetSeatNameTo() string {
	if x != nil {
		return x.SeatNameTo
	}
	return ""
}

func (x *ListMyTicketByPriceBlockReq) GetSeatMapId() string {
	if x != nil {
		return x.SeatMapId
	}
	return ""
}

func (x *ListMyTicketByPriceBlockReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListMyTicketReadyToCheckinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyTicketReadyToCheckinReq) Reset() {
	*x = ListMyTicketReadyToCheckinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyTicketReadyToCheckinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyTicketReadyToCheckinReq) ProtoMessage() {}

func (x *ListMyTicketReadyToCheckinReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyTicketReadyToCheckinReq.ProtoReflect.Descriptor instead.
func (*ListMyTicketReadyToCheckinReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{19}
}

type MarkTicketOfflineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketIds []string `protobuf:"bytes,1,rep,name=ticket_ids,json=ticketIds,proto3" json:"ticket_ids,omitempty"`
}

func (x *MarkTicketOfflineReq) Reset() {
	*x = MarkTicketOfflineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkTicketOfflineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkTicketOfflineReq) ProtoMessage() {}

func (x *MarkTicketOfflineReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkTicketOfflineReq.ProtoReflect.Descriptor instead.
func (*MarkTicketOfflineReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{20}
}

func (x *MarkTicketOfflineReq) GetTicketIds() []string {
	if x != nil {
		return x.TicketIds
	}
	return nil
}

type GetMyTransferTransactionHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationReq `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMyTransferTransactionHistoryReq) Reset() {
	*x = GetMyTransferTransactionHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTransferTransactionHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTransferTransactionHistoryReq) ProtoMessage() {}

func (x *GetMyTransferTransactionHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTransferTransactionHistoryReq.ProtoReflect.Descriptor instead.
func (*GetMyTransferTransactionHistoryReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{21}
}

func (x *GetMyTransferTransactionHistoryReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMyTicketsByDeliveryIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryId string              `protobuf:"bytes,1,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Pagination *base.PaginationReq `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMyTicketsByDeliveryIDReq) Reset() {
	*x = GetMyTicketsByDeliveryIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketsByDeliveryIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketsByDeliveryIDReq) ProtoMessage() {}

func (x *GetMyTicketsByDeliveryIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketsByDeliveryIDReq.ProtoReflect.Descriptor instead.
func (*GetMyTicketsByDeliveryIDReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{22}
}

func (x *GetMyTicketsByDeliveryIDReq) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

func (x *GetMyTicketsByDeliveryIDReq) GetPagination() *base.PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMyTicketRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TicketInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMyTicketRes) Reset() {
	*x = GetMyTicketRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketRes) ProtoMessage() {}

func (x *GetMyTicketRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketRes.ProtoReflect.Descriptor instead.
func (*GetMyTicketRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{23}
}

func (x *GetMyTicketRes) GetInfo() *TicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMyTicketByOrderIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*TicketInfo  `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMyTicketByOrderIdRes) Reset() {
	*x = GetMyTicketByOrderIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketByOrderIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketByOrderIdRes) ProtoMessage() {}

func (x *GetMyTicketByOrderIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketByOrderIdRes.ProtoReflect.Descriptor instead.
func (*GetMyTicketByOrderIdRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{24}
}

func (x *GetMyTicketByOrderIdRes) GetInfo() []*TicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetMyTicketByOrderIdRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMyTicketByPhoneRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TicketInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMyTicketByPhoneRes) Reset() {
	*x = GetMyTicketByPhoneRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketByPhoneRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketByPhoneRes) ProtoMessage() {}

func (x *GetMyTicketByPhoneRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketByPhoneRes.ProtoReflect.Descriptor instead.
func (*GetMyTicketByPhoneRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{25}
}

func (x *GetMyTicketByPhoneRes) GetInfo() *TicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMyTicketsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*TicketInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMyTicketsRes) Reset() {
	*x = GetMyTicketsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketsRes) ProtoMessage() {}

func (x *GetMyTicketsRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketsRes.ProtoReflect.Descriptor instead.
func (*GetMyTicketsRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{26}
}

func (x *GetMyTicketsRes) GetInfo() []*TicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMyTicketByTransferTransactionIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*TicketInfo  `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMyTicketByTransferTransactionIdRes) Reset() {
	*x = GetMyTicketByTransferTransactionIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketByTransferTransactionIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketByTransferTransactionIdRes) ProtoMessage() {}

func (x *GetMyTicketByTransferTransactionIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketByTransferTransactionIdRes.ProtoReflect.Descriptor instead.
func (*GetMyTicketByTransferTransactionIdRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{27}
}

func (x *GetMyTicketByTransferTransactionIdRes) GetInfo() []*TicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetMyTicketByTransferTransactionIdRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListMyTicketByStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*TicketInfo  `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListMyTicketByStatusRes) Reset() {
	*x = ListMyTicketByStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyTicketByStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyTicketByStatusRes) ProtoMessage() {}

func (x *ListMyTicketByStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyTicketByStatusRes.ProtoReflect.Descriptor instead.
func (*ListMyTicketByStatusRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{28}
}

func (x *ListMyTicketByStatusRes) GetInfo() []*TicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ListMyTicketByStatusRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListMyTicketByPriceBlockRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*TicketInfo  `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListMyTicketByPriceBlockRes) Reset() {
	*x = ListMyTicketByPriceBlockRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyTicketByPriceBlockRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyTicketByPriceBlockRes) ProtoMessage() {}

func (x *ListMyTicketByPriceBlockRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyTicketByPriceBlockRes.ProtoReflect.Descriptor instead.
func (*ListMyTicketByPriceBlockRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{29}
}

func (x *ListMyTicketByPriceBlockRes) GetInfo() []*TicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ListMyTicketByPriceBlockRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListMyTicketReadyToCheckinRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*TicketInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *ListMyTicketReadyToCheckinRes) Reset() {
	*x = ListMyTicketReadyToCheckinRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyTicketReadyToCheckinRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyTicketReadyToCheckinRes) ProtoMessage() {}

func (x *ListMyTicketReadyToCheckinRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyTicketReadyToCheckinRes.ProtoReflect.Descriptor instead.
func (*ListMyTicketReadyToCheckinRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{30}
}

func (x *ListMyTicketReadyToCheckinRes) GetInfo() []*TicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMyTransferTransactionHistoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*TransferTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Pagination   *PaginationRes         `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMyTransferTransactionHistoryRes) Reset() {
	*x = GetMyTransferTransactionHistoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTransferTransactionHistoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTransferTransactionHistoryRes) ProtoMessage() {}

func (x *GetMyTransferTransactionHistoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTransferTransactionHistoryRes.ProtoReflect.Descriptor instead.
func (*GetMyTransferTransactionHistoryRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{31}
}

func (x *GetMyTransferTransactionHistoryRes) GetTransactions() []*TransferTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetMyTransferTransactionHistoryRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMyTicketsByDeliveryIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*TicketInfo       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *base.PaginationRes `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMyTicketsByDeliveryIDRes) Reset() {
	*x = GetMyTicketsByDeliveryIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTicketsByDeliveryIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTicketsByDeliveryIDRes) ProtoMessage() {}

func (x *GetMyTicketsByDeliveryIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTicketsByDeliveryIDRes.ProtoReflect.Descriptor instead.
func (*GetMyTicketsByDeliveryIDRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_proto_rawDescGZIP(), []int{32}
}

func (x *GetMyTicketsByDeliveryIDRes) GetItems() []*TicketInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetMyTicketsByDeliveryIDRes) GetPagination() *base.PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_ticket_mobile_ticket_proto protoreflect.FileDescriptor

var file_ticket_mobile_ticket_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x1a, 0x18, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x05, 0x0a, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a,
	0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x1c, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19,
	0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x36, 0x0a,
	0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x15, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x50, 0x0a, 0x12,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x9d,
	0x01, 0x0a, 0x13, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xf4,
	0x02, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x45,
	0x6e, 0x64, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xd5, 0x02, 0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x76, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x44, 0x65,
	0x63, 0x6c, 0x61, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x76, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xc8, 0x02,
	0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x74,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x31, 0x0a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f,
	0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x84, 0x03, 0x0a, 0x0e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61,
	0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x82, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x6f, 0x22, 0x97, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x63,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x7f, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x1c, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x25,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x22, 0xa7, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x02, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20,
	0x0a, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f,
	0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1f,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x22,
	0x35, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x40, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4e, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0xaa, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2a, 0x63, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x49,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x02, 0x2a, 0xa4, 0x01, 0x0a, 0x12, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x1c, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x55, 0x53,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46,
	0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x48, 0x45,
	0x43, 0x4b, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x54, 0x49, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x10, 0x03, 0x2a,
	0x54, 0x0a, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a,
	0x0f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x55, 0x59,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x54,
	0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x46, 0x45, 0x52, 0x10, 0x02, 0x32, 0xc1, 0x0a, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x44, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x34, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x66, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x72, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x78, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x2c, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x23, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x72, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49,
	0x44, 0x12, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x3b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticket_mobile_ticket_proto_rawDescOnce sync.Once
	file_ticket_mobile_ticket_proto_rawDescData = file_ticket_mobile_ticket_proto_rawDesc
)

func file_ticket_mobile_ticket_proto_rawDescGZIP() []byte {
	file_ticket_mobile_ticket_proto_rawDescOnce.Do(func() {
		file_ticket_mobile_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticket_mobile_ticket_proto_rawDescData)
	})
	return file_ticket_mobile_ticket_proto_rawDescData
}

var file_ticket_mobile_ticket_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ticket_mobile_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_ticket_mobile_ticket_proto_goTypes = []interface{}{
	(TicketStatus)(0),                             // 0: ticket.mobile.TicketStatus
	(TicketStatusFilter)(0),                       // 1: ticket.mobile.TicketStatusFilter
	(TicketType)(0),                               // 2: ticket.mobile.TicketType
	(*TicketInfo)(nil),                            // 3: ticket.mobile.TicketInfo
	(*TicketPriceSimpleInfo)(nil),                 // 4: ticket.mobile.TicketPriceSimpleInfo
	(*TicketCurrencyInfo)(nil),                    // 5: ticket.mobile.TicketCurrencyInfo
	(*TicketEventLocation)(nil),                   // 6: ticket.mobile.TicketEventLocation
	(*TicketEventInfo)(nil),                       // 7: ticket.mobile.TicketEventInfo
	(*TicketUserInfo)(nil),                        // 8: ticket.mobile.TicketUserInfo
	(*TicketSeatInfo)(nil),                        // 9: ticket.mobile.TicketSeatInfo
	(*TransferTicket)(nil),                        // 10: ticket.mobile.TransferTicket
	(*TransferTransaction)(nil),                   // 11: ticket.mobile.TransferTransaction
	(*UpdateUserInfoReq)(nil),                     // 12: ticket.mobile.UpdateUserInfoReq
	(*UpdateStatusReq)(nil),                       // 13: ticket.mobile.UpdateStatusReq
	(*UpdateEnableVerificationCodeReq)(nil),       // 14: ticket.mobile.UpdateEnableVerificationCodeReq
	(*GetMyTicketReq)(nil),                        // 15: ticket.mobile.GetMyTicketReq
	(*GetMyTicketByOrderIdReq)(nil),               // 16: ticket.mobile.GetMyTicketByOrderIdReq
	(*GetMyTicketByPhoneReq)(nil),                 // 17: ticket.mobile.GetMyTicketByPhoneReq
	(*GetMyTicketByTransferTransactionIdReq)(nil), // 18: ticket.mobile.GetMyTicketByTransferTransactionIdReq
	(*ListMyTicketReq)(nil),                       // 19: ticket.mobile.ListMyTicketReq
	(*ListMyTicketByStatusReq)(nil),               // 20: ticket.mobile.ListMyTicketByStatusReq
	(*ListMyTicketByPriceBlockReq)(nil),           // 21: ticket.mobile.ListMyTicketByPriceBlockReq
	(*ListMyTicketReadyToCheckinReq)(nil),         // 22: ticket.mobile.ListMyTicketReadyToCheckinReq
	(*MarkTicketOfflineReq)(nil),                  // 23: ticket.mobile.MarkTicketOfflineReq
	(*GetMyTransferTransactionHistoryReq)(nil),    // 24: ticket.mobile.GetMyTransferTransactionHistoryReq
	(*GetMyTicketsByDeliveryIDReq)(nil),           // 25: ticket.mobile.GetMyTicketsByDeliveryIDReq
	(*GetMyTicketRes)(nil),                        // 26: ticket.mobile.GetMyTicketRes
	(*GetMyTicketByOrderIdRes)(nil),               // 27: ticket.mobile.GetMyTicketByOrderIdRes
	(*GetMyTicketByPhoneRes)(nil),                 // 28: ticket.mobile.GetMyTicketByPhoneRes
	(*GetMyTicketsRes)(nil),                       // 29: ticket.mobile.GetMyTicketsRes
	(*GetMyTicketByTransferTransactionIdRes)(nil), // 30: ticket.mobile.GetMyTicketByTransferTransactionIdRes
	(*ListMyTicketByStatusRes)(nil),               // 31: ticket.mobile.ListMyTicketByStatusRes
	(*ListMyTicketByPriceBlockRes)(nil),           // 32: ticket.mobile.ListMyTicketByPriceBlockRes
	(*ListMyTicketReadyToCheckinRes)(nil),         // 33: ticket.mobile.ListMyTicketReadyToCheckinRes
	(*GetMyTransferTransactionHistoryRes)(nil),    // 34: ticket.mobile.GetMyTransferTransactionHistoryRes
	(*GetMyTicketsByDeliveryIDRes)(nil),           // 35: ticket.mobile.GetMyTicketsByDeliveryIDRes
	(*PaginationReq)(nil),                         // 36: ticket.mobile.PaginationReq
	(*base.PaginationReq)(nil),                    // 37: base.PaginationReq
	(*PaginationRes)(nil),                         // 38: ticket.mobile.PaginationRes
	(*base.PaginationRes)(nil),                    // 39: base.PaginationRes
	(*Empty)(nil),                                 // 40: ticket.mobile.Empty
}
var file_ticket_mobile_ticket_proto_depIdxs = []int32{
	7,  // 0: ticket.mobile.TicketInfo.event_info:type_name -> ticket.mobile.TicketEventInfo
	9,  // 1: ticket.mobile.TicketInfo.seat_info:type_name -> ticket.mobile.TicketSeatInfo
	0,  // 2: ticket.mobile.TicketInfo.status:type_name -> ticket.mobile.TicketStatus
	8,  // 3: ticket.mobile.TicketInfo.user_info:type_name -> ticket.mobile.TicketUserInfo
	2,  // 4: ticket.mobile.TicketInfo.ticket_type:type_name -> ticket.mobile.TicketType
	5,  // 5: ticket.mobile.TicketPriceSimpleInfo.currency:type_name -> ticket.mobile.TicketCurrencyInfo
	6,  // 6: ticket.mobile.TicketEventInfo.location:type_name -> ticket.mobile.TicketEventLocation
	4,  // 7: ticket.mobile.TicketSeatInfo.price:type_name -> ticket.mobile.TicketPriceSimpleInfo
	10, // 8: ticket.mobile.TransferTransaction.tickets:type_name -> ticket.mobile.TransferTicket
	0,  // 9: ticket.mobile.UpdateStatusReq.status:type_name -> ticket.mobile.TicketStatus
	1,  // 10: ticket.mobile.GetMyTicketByOrderIdReq.status:type_name -> ticket.mobile.TicketStatusFilter
	36, // 11: ticket.mobile.GetMyTicketByOrderIdReq.pagination:type_name -> ticket.mobile.PaginationReq
	36, // 12: ticket.mobile.GetMyTicketByTransferTransactionIdReq.pagination:type_name -> ticket.mobile.PaginationReq
	0,  // 13: ticket.mobile.ListMyTicketByStatusReq.status:type_name -> ticket.mobile.TicketStatus
	36, // 14: ticket.mobile.ListMyTicketByStatusReq.pagination:type_name -> ticket.mobile.PaginationReq
	36, // 15: ticket.mobile.ListMyTicketByPriceBlockReq.pagination:type_name -> ticket.mobile.PaginationReq
	36, // 16: ticket.mobile.GetMyTransferTransactionHistoryReq.pagination:type_name -> ticket.mobile.PaginationReq
	37, // 17: ticket.mobile.GetMyTicketsByDeliveryIDReq.pagination:type_name -> base.PaginationReq
	3,  // 18: ticket.mobile.GetMyTicketRes.info:type_name -> ticket.mobile.TicketInfo
	3,  // 19: ticket.mobile.GetMyTicketByOrderIdRes.info:type_name -> ticket.mobile.TicketInfo
	38, // 20: ticket.mobile.GetMyTicketByOrderIdRes.pagination:type_name -> ticket.mobile.PaginationRes
	3,  // 21: ticket.mobile.GetMyTicketByPhoneRes.info:type_name -> ticket.mobile.TicketInfo
	3,  // 22: ticket.mobile.GetMyTicketsRes.info:type_name -> ticket.mobile.TicketInfo
	3,  // 23: ticket.mobile.GetMyTicketByTransferTransactionIdRes.info:type_name -> ticket.mobile.TicketInfo
	38, // 24: ticket.mobile.GetMyTicketByTransferTransactionIdRes.pagination:type_name -> ticket.mobile.PaginationRes
	3,  // 25: ticket.mobile.ListMyTicketByStatusRes.info:type_name -> ticket.mobile.TicketInfo
	38, // 26: ticket.mobile.ListMyTicketByStatusRes.pagination:type_name -> ticket.mobile.PaginationRes
	3,  // 27: ticket.mobile.ListMyTicketByPriceBlockRes.info:type_name -> ticket.mobile.TicketInfo
	38, // 28: ticket.mobile.ListMyTicketByPriceBlockRes.pagination:type_name -> ticket.mobile.PaginationRes
	3,  // 29: ticket.mobile.ListMyTicketReadyToCheckinRes.info:type_name -> ticket.mobile.TicketInfo
	11, // 30: ticket.mobile.GetMyTransferTransactionHistoryRes.transactions:type_name -> ticket.mobile.TransferTransaction
	38, // 31: ticket.mobile.GetMyTransferTransactionHistoryRes.pagination:type_name -> ticket.mobile.PaginationRes
	3,  // 32: ticket.mobile.GetMyTicketsByDeliveryIDRes.items:type_name -> ticket.mobile.TicketInfo
	39, // 33: ticket.mobile.GetMyTicketsByDeliveryIDRes.pagination:type_name -> base.PaginationRes
	12, // 34: ticket.mobile.TicketService.UpdateUserInfo:input_type -> ticket.mobile.UpdateUserInfoReq
	13, // 35: ticket.mobile.TicketService.UpdateStatus:input_type -> ticket.mobile.UpdateStatusReq
	14, // 36: ticket.mobile.TicketService.UpdateEnableVerificationCode:input_type -> ticket.mobile.UpdateEnableVerificationCodeReq
	15, // 37: ticket.mobile.TicketService.GetMyTicket:input_type -> ticket.mobile.GetMyTicketReq
	16, // 38: ticket.mobile.TicketService.GetMyTicketByOrderId:input_type -> ticket.mobile.GetMyTicketByOrderIdReq
	19, // 39: ticket.mobile.TicketService.GetMyTickets:input_type -> ticket.mobile.ListMyTicketReq
	18, // 40: ticket.mobile.TicketService.GetMyTicketByTransferTransactionId:input_type -> ticket.mobile.GetMyTicketByTransferTransactionIdReq
	24, // 41: ticket.mobile.TicketService.GetMyTransferTransactionHistory:input_type -> ticket.mobile.GetMyTransferTransactionHistoryReq
	20, // 42: ticket.mobile.TicketService.ListMyTicketByStatus:input_type -> ticket.mobile.ListMyTicketByStatusReq
	21, // 43: ticket.mobile.TicketService.ListMyTicketByPriceBlock:input_type -> ticket.mobile.ListMyTicketByPriceBlockReq
	22, // 44: ticket.mobile.TicketService.ListMyTicketReadyToCheckin:input_type -> ticket.mobile.ListMyTicketReadyToCheckinReq
	23, // 45: ticket.mobile.TicketService.MarkTicketOffline:input_type -> ticket.mobile.MarkTicketOfflineReq
	25, // 46: ticket.mobile.TicketService.GetMyTicketsByDeliveryID:input_type -> ticket.mobile.GetMyTicketsByDeliveryIDReq
	40, // 47: ticket.mobile.TicketService.UpdateUserInfo:output_type -> ticket.mobile.Empty
	40, // 48: ticket.mobile.TicketService.UpdateStatus:output_type -> ticket.mobile.Empty
	40, // 49: ticket.mobile.TicketService.UpdateEnableVerificationCode:output_type -> ticket.mobile.Empty
	26, // 50: ticket.mobile.TicketService.GetMyTicket:output_type -> ticket.mobile.GetMyTicketRes
	27, // 51: ticket.mobile.TicketService.GetMyTicketByOrderId:output_type -> ticket.mobile.GetMyTicketByOrderIdRes
	29, // 52: ticket.mobile.TicketService.GetMyTickets:output_type -> ticket.mobile.GetMyTicketsRes
	30, // 53: ticket.mobile.TicketService.GetMyTicketByTransferTransactionId:output_type -> ticket.mobile.GetMyTicketByTransferTransactionIdRes
	34, // 54: ticket.mobile.TicketService.GetMyTransferTransactionHistory:output_type -> ticket.mobile.GetMyTransferTransactionHistoryRes
	31, // 55: ticket.mobile.TicketService.ListMyTicketByStatus:output_type -> ticket.mobile.ListMyTicketByStatusRes
	32, // 56: ticket.mobile.TicketService.ListMyTicketByPriceBlock:output_type -> ticket.mobile.ListMyTicketByPriceBlockRes
	33, // 57: ticket.mobile.TicketService.ListMyTicketReadyToCheckin:output_type -> ticket.mobile.ListMyTicketReadyToCheckinRes
	40, // 58: ticket.mobile.TicketService.MarkTicketOffline:output_type -> ticket.mobile.Empty
	35, // 59: ticket.mobile.TicketService.GetMyTicketsByDeliveryID:output_type -> ticket.mobile.GetMyTicketsByDeliveryIDRes
	47, // [47:60] is the sub-list for method output_type
	34, // [34:47] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_ticket_mobile_ticket_proto_init() }
func file_ticket_mobile_ticket_proto_init() {
	if File_ticket_mobile_ticket_proto != nil {
		return
	}
	file_ticket_mobile_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ticket_mobile_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketPriceSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketCurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketEventLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketEventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketSeatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEnableVerificationCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketByOrderIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketByPhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketByTransferTransactionIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyTicketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyTicketByStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyTicketByPriceBlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyTicketReadyToCheckinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkTicketOfflineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTransferTransactionHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketsByDeliveryIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketByOrderIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketByPhoneRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketByTransferTransactionIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyTicketByStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyTicketByPriceBlockRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyTicketReadyToCheckinRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTransferTransactionHistoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTicketsByDeliveryIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticket_mobile_ticket_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticket_mobile_ticket_proto_goTypes,
		DependencyIndexes: file_ticket_mobile_ticket_proto_depIdxs,
		EnumInfos:         file_ticket_mobile_ticket_proto_enumTypes,
		MessageInfos:      file_ticket_mobile_ticket_proto_msgTypes,
	}.Build()
	File_ticket_mobile_ticket_proto = out.File
	file_ticket_mobile_ticket_proto_rawDesc = nil
	file_ticket_mobile_ticket_proto_goTypes = nil
	file_ticket_mobile_ticket_proto_depIdxs = nil
}
