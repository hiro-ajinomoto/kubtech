// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: ticket/mobile/transferred_ticket.proto

package mobile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferredTicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt                 int64                       `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                 int64                       `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	OrderId                   string                      `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	EventInfo                 *TransferredTicketEventInfo `protobuf:"bytes,5,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	SeatInfo                  *TransferredTicketSeatInfo  `protobuf:"bytes,6,opt,name=seat_info,json=seatInfo,proto3" json:"seat_info,omitempty"`
	UserInfo                  *TransferredTicketUserInfo  `protobuf:"bytes,7,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	IsEnabledVerificationCode bool                        `protobuf:"varint,8,opt,name=is_enabled_verification_code,json=isEnabledVerificationCode,proto3" json:"is_enabled_verification_code,omitempty"`
	PartnershipId             string                      `protobuf:"bytes,9,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	ReceiverInfo              *TransferredTicketUserInfo  `protobuf:"bytes,10,opt,name=receiver_info,json=receiverInfo,proto3" json:"receiver_info,omitempty"`
}

func (x *TransferredTicketInfo) Reset() {
	*x = TransferredTicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferredTicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferredTicketInfo) ProtoMessage() {}

func (x *TransferredTicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferredTicketInfo.ProtoReflect.Descriptor instead.
func (*TransferredTicketInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *TransferredTicketInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransferredTicketInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TransferredTicketInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *TransferredTicketInfo) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TransferredTicketInfo) GetEventInfo() *TransferredTicketEventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *TransferredTicketInfo) GetSeatInfo() *TransferredTicketSeatInfo {
	if x != nil {
		return x.SeatInfo
	}
	return nil
}

func (x *TransferredTicketInfo) GetUserInfo() *TransferredTicketUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *TransferredTicketInfo) GetIsEnabledVerificationCode() bool {
	if x != nil {
		return x.IsEnabledVerificationCode
	}
	return false
}

func (x *TransferredTicketInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *TransferredTicketInfo) GetReceiverInfo() *TransferredTicketUserInfo {
	if x != nil {
		return x.ReceiverInfo
	}
	return nil
}

type TransferredTicketPriceSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon     string                         `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Price    float64                        `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Currency *TransferredTicketCurrencyInfo `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *TransferredTicketPriceSimpleInfo) Reset() {
	*x = TransferredTicketPriceSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferredTicketPriceSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferredTicketPriceSimpleInfo) ProtoMessage() {}

func (x *TransferredTicketPriceSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferredTicketPriceSimpleInfo.ProtoReflect.Descriptor instead.
func (*TransferredTicketPriceSimpleInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *TransferredTicketPriceSimpleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransferredTicketPriceSimpleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransferredTicketPriceSimpleInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TransferredTicketPriceSimpleInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TransferredTicketPriceSimpleInfo) GetCurrency() *TransferredTicketCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

type TransferredTicketCurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *TransferredTicketCurrencyInfo) Reset() {
	*x = TransferredTicketCurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferredTicketCurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferredTicketCurrencyInfo) ProtoMessage() {}

func (x *TransferredTicketCurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferredTicketCurrencyInfo.ProtoReflect.Descriptor instead.
func (*TransferredTicketCurrencyInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *TransferredTicketCurrencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransferredTicketCurrencyInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TransferredTicketCurrencyInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type TransferredTicketEventLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Ward     string `protobuf:"bytes,3,opt,name=ward,proto3" json:"ward,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *TransferredTicketEventLocation) Reset() {
	*x = TransferredTicketEventLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferredTicketEventLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferredTicketEventLocation) ProtoMessage() {}

func (x *TransferredTicketEventLocation) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferredTicketEventLocation.ProtoReflect.Descriptor instead.
func (*TransferredTicketEventLocation) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *TransferredTicketEventLocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransferredTicketEventLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TransferredTicketEventLocation) GetWard() string {
	if x != nil {
		return x.Ward
	}
	return ""
}

func (x *TransferredTicketEventLocation) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *TransferredTicketEventLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *TransferredTicketEventLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type TransferredTicketEventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          string                          `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Name             string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartTime        int64                           `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          int64                           `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CheckinStartTime int64                           `protobuf:"varint,5,opt,name=checkin_start_time,json=checkinStartTime,proto3" json:"checkin_start_time,omitempty"`
	CheckinEndTime   int64                           `protobuf:"varint,6,opt,name=checkin_end_time,json=checkinEndTime,proto3" json:"checkin_end_time,omitempty"`
	Location         *TransferredTicketEventLocation `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Timezone         string                          `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *TransferredTicketEventInfo) Reset() {
	*x = TransferredTicketEventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferredTicketEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferredTicketEventInfo) ProtoMessage() {}

func (x *TransferredTicketEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferredTicketEventInfo.ProtoReflect.Descriptor instead.
func (*TransferredTicketEventInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *TransferredTicketEventInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TransferredTicketEventInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransferredTicketEventInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TransferredTicketEventInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TransferredTicketEventInfo) GetCheckinStartTime() int64 {
	if x != nil {
		return x.CheckinStartTime
	}
	return 0
}

func (x *TransferredTicketEventInfo) GetCheckinEndTime() int64 {
	if x != nil {
		return x.CheckinEndTime
	}
	return 0
}

func (x *TransferredTicketEventInfo) GetLocation() *TransferredTicketEventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *TransferredTicketEventInfo) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type TransferredTicketUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserFullName  string `protobuf:"bytes,2,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	UserPhone     string `protobuf:"bytes,3,opt,name=user_phone,json=userPhone,proto3" json:"user_phone,omitempty"` // what if a child?
	UserEmail     string `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	UserAddress   string `protobuf:"bytes,5,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	UserImage     string `protobuf:"bytes,6,opt,name=user_image,json=userImage,proto3" json:"user_image,omitempty"` // required at inspector
	UserPhoneCode string `protobuf:"bytes,7,opt,name=user_phone_code,json=userPhoneCode,proto3" json:"user_phone_code,omitempty"`
}

func (x *TransferredTicketUserInfo) Reset() {
	*x = TransferredTicketUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferredTicketUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferredTicketUserInfo) ProtoMessage() {}

func (x *TransferredTicketUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferredTicketUserInfo.ProtoReflect.Descriptor instead.
func (*TransferredTicketUserInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *TransferredTicketUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransferredTicketUserInfo) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *TransferredTicketUserInfo) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *TransferredTicketUserInfo) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *TransferredTicketUserInfo) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *TransferredTicketUserInfo) GetUserImage() string {
	if x != nil {
		return x.UserImage
	}
	return ""
}

func (x *TransferredTicketUserInfo) GetUserPhoneCode() string {
	if x != nil {
		return x.UserPhoneCode
	}
	return ""
}

type TransferredTicketSeatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price              *TransferredTicketPriceSimpleInfo `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	PriceBlockId       string                            `protobuf:"bytes,4,opt,name=price_block_id,json=priceBlockId,proto3" json:"price_block_id,omitempty"`
	PriceBlockName     string                            `protobuf:"bytes,5,opt,name=price_block_name,json=priceBlockName,proto3" json:"price_block_name,omitempty"`
	GeneralSeatMapId   string                            `protobuf:"bytes,6,opt,name=general_seat_map_id,json=generalSeatMapId,proto3" json:"general_seat_map_id,omitempty"`
	GeneralSeatMapName string                            `protobuf:"bytes,7,opt,name=general_seat_map_name,json=generalSeatMapName,proto3" json:"general_seat_map_name,omitempty"`
	SeatTypeName       string                            `protobuf:"bytes,8,opt,name=seat_type_name,json=seatTypeName,proto3" json:"seat_type_name,omitempty"`
}

func (x *TransferredTicketSeatInfo) Reset() {
	*x = TransferredTicketSeatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferredTicketSeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferredTicketSeatInfo) ProtoMessage() {}

func (x *TransferredTicketSeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferredTicketSeatInfo.ProtoReflect.Descriptor instead.
func (*TransferredTicketSeatInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{6}
}

func (x *TransferredTicketSeatInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransferredTicketSeatInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransferredTicketSeatInfo) GetPrice() *TransferredTicketPriceSimpleInfo {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *TransferredTicketSeatInfo) GetPriceBlockId() string {
	if x != nil {
		return x.PriceBlockId
	}
	return ""
}

func (x *TransferredTicketSeatInfo) GetPriceBlockName() string {
	if x != nil {
		return x.PriceBlockName
	}
	return ""
}

func (x *TransferredTicketSeatInfo) GetGeneralSeatMapId() string {
	if x != nil {
		return x.GeneralSeatMapId
	}
	return ""
}

func (x *TransferredTicketSeatInfo) GetGeneralSeatMapName() string {
	if x != nil {
		return x.GeneralSeatMapName
	}
	return ""
}

func (x *TransferredTicketSeatInfo) GetSeatTypeName() string {
	if x != nil {
		return x.SeatTypeName
	}
	return ""
}

type GetMyTransferredTicketByOrderIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *GetMyTransferredTicketByOrderIdReq) Reset() {
	*x = GetMyTransferredTicketByOrderIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTransferredTicketByOrderIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTransferredTicketByOrderIdReq) ProtoMessage() {}

func (x *GetMyTransferredTicketByOrderIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTransferredTicketByOrderIdReq.ProtoReflect.Descriptor instead.
func (*GetMyTransferredTicketByOrderIdReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{7}
}

func (x *GetMyTransferredTicketByOrderIdReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetMyTransferredTicketByOrderIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*TransferredTicketInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMyTransferredTicketByOrderIdRes) Reset() {
	*x = GetMyTransferredTicketByOrderIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTransferredTicketByOrderIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTransferredTicketByOrderIdRes) ProtoMessage() {}

func (x *GetMyTransferredTicketByOrderIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_transferred_ticket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTransferredTicketByOrderIdRes.ProtoReflect.Descriptor instead.
func (*GetMyTransferredTicketByOrderIdRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_transferred_ticket_proto_rawDescGZIP(), []int{8}
}

func (x *GetMyTransferredTicketByOrderIdRes) GetInfo() []*TransferredTicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_ticket_mobile_transferred_ticket_proto protoreflect.FileDescriptor

var file_ticket_mobile_transferred_ticket_proto_rawDesc = []byte{
	0x0a, 0x26, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x22, 0x8f, 0x04, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x1c, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x20, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x5b, 0x0a, 0x1d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x1e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xc4,
	0x02, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x19, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xa4, 0x01, 0x0a,
	0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x31, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x3b,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticket_mobile_transferred_ticket_proto_rawDescOnce sync.Once
	file_ticket_mobile_transferred_ticket_proto_rawDescData = file_ticket_mobile_transferred_ticket_proto_rawDesc
)

func file_ticket_mobile_transferred_ticket_proto_rawDescGZIP() []byte {
	file_ticket_mobile_transferred_ticket_proto_rawDescOnce.Do(func() {
		file_ticket_mobile_transferred_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticket_mobile_transferred_ticket_proto_rawDescData)
	})
	return file_ticket_mobile_transferred_ticket_proto_rawDescData
}

var file_ticket_mobile_transferred_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_ticket_mobile_transferred_ticket_proto_goTypes = []interface{}{
	(*TransferredTicketInfo)(nil),              // 0: ticket.mobile.TransferredTicketInfo
	(*TransferredTicketPriceSimpleInfo)(nil),   // 1: ticket.mobile.TransferredTicketPriceSimpleInfo
	(*TransferredTicketCurrencyInfo)(nil),      // 2: ticket.mobile.TransferredTicketCurrencyInfo
	(*TransferredTicketEventLocation)(nil),     // 3: ticket.mobile.TransferredTicketEventLocation
	(*TransferredTicketEventInfo)(nil),         // 4: ticket.mobile.TransferredTicketEventInfo
	(*TransferredTicketUserInfo)(nil),          // 5: ticket.mobile.TransferredTicketUserInfo
	(*TransferredTicketSeatInfo)(nil),          // 6: ticket.mobile.TransferredTicketSeatInfo
	(*GetMyTransferredTicketByOrderIdReq)(nil), // 7: ticket.mobile.GetMyTransferredTicketByOrderIdReq
	(*GetMyTransferredTicketByOrderIdRes)(nil), // 8: ticket.mobile.GetMyTransferredTicketByOrderIdRes
}
var file_ticket_mobile_transferred_ticket_proto_depIdxs = []int32{
	4, // 0: ticket.mobile.TransferredTicketInfo.event_info:type_name -> ticket.mobile.TransferredTicketEventInfo
	6, // 1: ticket.mobile.TransferredTicketInfo.seat_info:type_name -> ticket.mobile.TransferredTicketSeatInfo
	5, // 2: ticket.mobile.TransferredTicketInfo.user_info:type_name -> ticket.mobile.TransferredTicketUserInfo
	5, // 3: ticket.mobile.TransferredTicketInfo.receiver_info:type_name -> ticket.mobile.TransferredTicketUserInfo
	2, // 4: ticket.mobile.TransferredTicketPriceSimpleInfo.currency:type_name -> ticket.mobile.TransferredTicketCurrencyInfo
	3, // 5: ticket.mobile.TransferredTicketEventInfo.location:type_name -> ticket.mobile.TransferredTicketEventLocation
	1, // 6: ticket.mobile.TransferredTicketSeatInfo.price:type_name -> ticket.mobile.TransferredTicketPriceSimpleInfo
	0, // 7: ticket.mobile.GetMyTransferredTicketByOrderIdRes.info:type_name -> ticket.mobile.TransferredTicketInfo
	7, // 8: ticket.mobile.TransferredTicketService.GetMyTransferredTicketByOrderId:input_type -> ticket.mobile.GetMyTransferredTicketByOrderIdReq
	8, // 9: ticket.mobile.TransferredTicketService.GetMyTransferredTicketByOrderId:output_type -> ticket.mobile.GetMyTransferredTicketByOrderIdRes
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_ticket_mobile_transferred_ticket_proto_init() }
func file_ticket_mobile_transferred_ticket_proto_init() {
	if File_ticket_mobile_transferred_ticket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticket_mobile_transferred_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferredTicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_transferred_ticket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferredTicketPriceSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_transferred_ticket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferredTicketCurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_transferred_ticket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferredTicketEventLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_transferred_ticket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferredTicketEventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_transferred_ticket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferredTicketUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_transferred_ticket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferredTicketSeatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_transferred_ticket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTransferredTicketByOrderIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_transferred_ticket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTransferredTicketByOrderIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticket_mobile_transferred_ticket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticket_mobile_transferred_ticket_proto_goTypes,
		DependencyIndexes: file_ticket_mobile_transferred_ticket_proto_depIdxs,
		MessageInfos:      file_ticket_mobile_transferred_ticket_proto_msgTypes,
	}.Build()
	File_ticket_mobile_transferred_ticket_proto = out.File
	file_ticket_mobile_transferred_ticket_proto_rawDesc = nil
	file_ticket_mobile_transferred_ticket_proto_goTypes = nil
	file_ticket_mobile_transferred_ticket_proto_depIdxs = nil
}
