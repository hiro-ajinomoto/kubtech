// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: ticket/mobile/ticket_transferable.proto

package mobile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketTransferableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     int64                           `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                           `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string                          `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy     string                          `protobuf:"bytes,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Tickets       []*TicketTransferableTicketInfo `protobuf:"bytes,6,rep,name=tickets,proto3" json:"tickets,omitempty"`
	UserInfo      *TicketTransferableUserInfo     `protobuf:"bytes,7,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	PartnershipId string                          `protobuf:"bytes,8,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	EventInfo     *TicketTransferableEventInfo    `protobuf:"bytes,9,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	OrderId       string                          `protobuf:"bytes,10,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *TicketTransferableInfo) Reset() {
	*x = TicketTransferableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableInfo) ProtoMessage() {}

func (x *TicketTransferableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableInfo.ProtoReflect.Descriptor instead.
func (*TicketTransferableInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{0}
}

func (x *TicketTransferableInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketTransferableInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TicketTransferableInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *TicketTransferableInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *TicketTransferableInfo) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *TicketTransferableInfo) GetTickets() []*TicketTransferableTicketInfo {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *TicketTransferableInfo) GetUserInfo() *TicketTransferableUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *TicketTransferableInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *TicketTransferableInfo) GetEventInfo() *TicketTransferableEventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *TicketTransferableInfo) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type TicketTransferableTicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SeatInfo *TicketTransferableSeatInfo `protobuf:"bytes,2,opt,name=seat_info,json=seatInfo,proto3" json:"seat_info,omitempty"`
}

func (x *TicketTransferableTicketInfo) Reset() {
	*x = TicketTransferableTicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableTicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableTicketInfo) ProtoMessage() {}

func (x *TicketTransferableTicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableTicketInfo.ProtoReflect.Descriptor instead.
func (*TicketTransferableTicketInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{1}
}

func (x *TicketTransferableTicketInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketTransferableTicketInfo) GetSeatInfo() *TicketTransferableSeatInfo {
	if x != nil {
		return x.SeatInfo
	}
	return nil
}

type TicketTransferablePriceSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon     string                          `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Price    float64                         `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Currency *TicketTransferableCurrencyInfo `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *TicketTransferablePriceSimpleInfo) Reset() {
	*x = TicketTransferablePriceSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferablePriceSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferablePriceSimpleInfo) ProtoMessage() {}

func (x *TicketTransferablePriceSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferablePriceSimpleInfo.ProtoReflect.Descriptor instead.
func (*TicketTransferablePriceSimpleInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{2}
}

func (x *TicketTransferablePriceSimpleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketTransferablePriceSimpleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketTransferablePriceSimpleInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TicketTransferablePriceSimpleInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TicketTransferablePriceSimpleInfo) GetCurrency() *TicketTransferableCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

type TicketTransferableCurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *TicketTransferableCurrencyInfo) Reset() {
	*x = TicketTransferableCurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableCurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableCurrencyInfo) ProtoMessage() {}

func (x *TicketTransferableCurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableCurrencyInfo.ProtoReflect.Descriptor instead.
func (*TicketTransferableCurrencyInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{3}
}

func (x *TicketTransferableCurrencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketTransferableCurrencyInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TicketTransferableCurrencyInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type TicketTransferableUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserFullName  string `protobuf:"bytes,2,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	UserPhone     string `protobuf:"bytes,3,opt,name=user_phone,json=userPhone,proto3" json:"user_phone,omitempty"` // what if a child?
	UserEmail     string `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	UserAddress   string `protobuf:"bytes,5,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	UserImage     string `protobuf:"bytes,6,opt,name=user_image,json=userImage,proto3" json:"user_image,omitempty"` // required at inspector
	UserPhoneCode string `protobuf:"bytes,7,opt,name=user_phone_code,json=userPhoneCode,proto3" json:"user_phone_code,omitempty"`
}

func (x *TicketTransferableUserInfo) Reset() {
	*x = TicketTransferableUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableUserInfo) ProtoMessage() {}

func (x *TicketTransferableUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableUserInfo.ProtoReflect.Descriptor instead.
func (*TicketTransferableUserInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{4}
}

func (x *TicketTransferableUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TicketTransferableUserInfo) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *TicketTransferableUserInfo) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *TicketTransferableUserInfo) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *TicketTransferableUserInfo) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *TicketTransferableUserInfo) GetUserImage() string {
	if x != nil {
		return x.UserImage
	}
	return ""
}

func (x *TicketTransferableUserInfo) GetUserPhoneCode() string {
	if x != nil {
		return x.UserPhoneCode
	}
	return ""
}

type TicketTransferableSeatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price              *TicketTransferablePriceSimpleInfo `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	PriceBlockId       string                             `protobuf:"bytes,4,opt,name=price_block_id,json=priceBlockId,proto3" json:"price_block_id,omitempty"`
	PriceBlockName     string                             `protobuf:"bytes,5,opt,name=price_block_name,json=priceBlockName,proto3" json:"price_block_name,omitempty"`
	GeneralSeatMapId   string                             `protobuf:"bytes,6,opt,name=general_seat_map_id,json=generalSeatMapId,proto3" json:"general_seat_map_id,omitempty"`
	GeneralSeatMapName string                             `protobuf:"bytes,7,opt,name=general_seat_map_name,json=generalSeatMapName,proto3" json:"general_seat_map_name,omitempty"`
	SeatTypeName       string                             `protobuf:"bytes,8,opt,name=seat_type_name,json=seatTypeName,proto3" json:"seat_type_name,omitempty"`
}

func (x *TicketTransferableSeatInfo) Reset() {
	*x = TicketTransferableSeatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableSeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableSeatInfo) ProtoMessage() {}

func (x *TicketTransferableSeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableSeatInfo.ProtoReflect.Descriptor instead.
func (*TicketTransferableSeatInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{5}
}

func (x *TicketTransferableSeatInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketTransferableSeatInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketTransferableSeatInfo) GetPrice() *TicketTransferablePriceSimpleInfo {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *TicketTransferableSeatInfo) GetPriceBlockId() string {
	if x != nil {
		return x.PriceBlockId
	}
	return ""
}

func (x *TicketTransferableSeatInfo) GetPriceBlockName() string {
	if x != nil {
		return x.PriceBlockName
	}
	return ""
}

func (x *TicketTransferableSeatInfo) GetGeneralSeatMapId() string {
	if x != nil {
		return x.GeneralSeatMapId
	}
	return ""
}

func (x *TicketTransferableSeatInfo) GetGeneralSeatMapName() string {
	if x != nil {
		return x.GeneralSeatMapName
	}
	return ""
}

func (x *TicketTransferableSeatInfo) GetSeatTypeName() string {
	if x != nil {
		return x.SeatTypeName
	}
	return ""
}

type TicketTransferableEventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId  string                           `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Schedule *TicketTransferableEventSchedule `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *TicketTransferableEventInfo) Reset() {
	*x = TicketTransferableEventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableEventInfo) ProtoMessage() {}

func (x *TicketTransferableEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableEventInfo.ProtoReflect.Descriptor instead.
func (*TicketTransferableEventInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{6}
}

func (x *TicketTransferableEventInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TicketTransferableEventInfo) GetSchedule() *TicketTransferableEventSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type TicketTransferableEventLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Ward     string `protobuf:"bytes,3,opt,name=ward,proto3" json:"ward,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *TicketTransferableEventLocation) Reset() {
	*x = TicketTransferableEventLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableEventLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableEventLocation) ProtoMessage() {}

func (x *TicketTransferableEventLocation) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableEventLocation.ProtoReflect.Descriptor instead.
func (*TicketTransferableEventLocation) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{7}
}

func (x *TicketTransferableEventLocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketTransferableEventLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TicketTransferableEventLocation) GetWard() string {
	if x != nil {
		return x.Ward
	}
	return ""
}

func (x *TicketTransferableEventLocation) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *TicketTransferableEventLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *TicketTransferableEventLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type TicketTransferableEventVoucherInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Thumbnail string `protobuf:"bytes,3,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	SponsorId string `protobuf:"bytes,4,opt,name=sponsor_id,json=sponsorId,proto3" json:"sponsor_id,omitempty"`
	ExpiredAt int64  `protobuf:"varint,5,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`
	EventId   string `protobuf:"bytes,6,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Detail    string `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *TicketTransferableEventVoucherInfo) Reset() {
	*x = TicketTransferableEventVoucherInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableEventVoucherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableEventVoucherInfo) ProtoMessage() {}

func (x *TicketTransferableEventVoucherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableEventVoucherInfo.ProtoReflect.Descriptor instead.
func (*TicketTransferableEventVoucherInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{8}
}

func (x *TicketTransferableEventVoucherInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketTransferableEventVoucherInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketTransferableEventVoucherInfo) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *TicketTransferableEventVoucherInfo) GetSponsorId() string {
	if x != nil {
		return x.SponsorId
	}
	return ""
}

func (x *TicketTransferableEventVoucherInfo) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

func (x *TicketTransferableEventVoucherInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TicketTransferableEventVoucherInfo) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type TicketTransferableEventSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *TicketTransferableEventLocation      `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Vouchers []*TicketTransferableEventVoucherInfo `protobuf:"bytes,2,rep,name=vouchers,proto3" json:"vouchers,omitempty"`
	Time     *TicketTransferableEventTime          `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TicketTransferableEventSchedule) Reset() {
	*x = TicketTransferableEventSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableEventSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableEventSchedule) ProtoMessage() {}

func (x *TicketTransferableEventSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableEventSchedule.ProtoReflect.Descriptor instead.
func (*TicketTransferableEventSchedule) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{9}
}

func (x *TicketTransferableEventSchedule) GetLocation() *TicketTransferableEventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *TicketTransferableEventSchedule) GetVouchers() []*TicketTransferableEventVoucherInfo {
	if x != nil {
		return x.Vouchers
	}
	return nil
}

func (x *TicketTransferableEventSchedule) GetTime() *TicketTransferableEventTime {
	if x != nil {
		return x.Time
	}
	return nil
}

type TicketTransferableEventTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime        int64  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          int64  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	BookingStartTime int64  `protobuf:"varint,3,opt,name=booking_start_time,json=bookingStartTime,proto3" json:"booking_start_time,omitempty"`
	BookingEndTime   int64  `protobuf:"varint,4,opt,name=booking_end_time,json=bookingEndTime,proto3" json:"booking_end_time,omitempty"`
	CheckinStartTime int64  `protobuf:"varint,5,opt,name=checkin_start_time,json=checkinStartTime,proto3" json:"checkin_start_time,omitempty"`
	CheckinEndTime   int64  `protobuf:"varint,6,opt,name=checkin_end_time,json=checkinEndTime,proto3" json:"checkin_end_time,omitempty"`
	Timezone         string `protobuf:"bytes,7,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *TicketTransferableEventTime) Reset() {
	*x = TicketTransferableEventTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransferableEventTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransferableEventTime) ProtoMessage() {}

func (x *TicketTransferableEventTime) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransferableEventTime.ProtoReflect.Descriptor instead.
func (*TicketTransferableEventTime) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{10}
}

func (x *TicketTransferableEventTime) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TicketTransferableEventTime) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TicketTransferableEventTime) GetBookingStartTime() int64 {
	if x != nil {
		return x.BookingStartTime
	}
	return 0
}

func (x *TicketTransferableEventTime) GetBookingEndTime() int64 {
	if x != nil {
		return x.BookingEndTime
	}
	return 0
}

func (x *TicketTransferableEventTime) GetCheckinStartTime() int64 {
	if x != nil {
		return x.CheckinStartTime
	}
	return 0
}

func (x *TicketTransferableEventTime) GetCheckinEndTime() int64 {
	if x != nil {
		return x.CheckinEndTime
	}
	return 0
}

func (x *TicketTransferableEventTime) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type CreateTicketTransferableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId string                       `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
	TicketIds      []string                     `protobuf:"bytes,2,rep,name=ticket_ids,json=ticketIds,proto3" json:"ticket_ids,omitempty"`
	EventInfo      *TicketTransferableEventInfo `protobuf:"bytes,3,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	OrderId        string                       `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *CreateTicketTransferableReq) Reset() {
	*x = CreateTicketTransferableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketTransferableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketTransferableReq) ProtoMessage() {}

func (x *CreateTicketTransferableReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketTransferableReq.ProtoReflect.Descriptor instead.
func (*CreateTicketTransferableReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{11}
}

func (x *CreateTicketTransferableReq) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

func (x *CreateTicketTransferableReq) GetTicketIds() []string {
	if x != nil {
		return x.TicketIds
	}
	return nil
}

func (x *CreateTicketTransferableReq) GetEventInfo() *TicketTransferableEventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *CreateTicketTransferableReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CreateTicketTransferableAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId string                       `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
	SeatMapId      string                       `protobuf:"bytes,2,opt,name=seat_map_id,json=seatMapId,proto3" json:"seat_map_id,omitempty"`
	PriceBlockId   string                       `protobuf:"bytes,3,opt,name=price_block_id,json=priceBlockId,proto3" json:"price_block_id,omitempty"`
	SeatNameFrom   string                       `protobuf:"bytes,4,opt,name=seat_name_from,json=seatNameFrom,proto3" json:"seat_name_from,omitempty"`
	SeatNameTo     string                       `protobuf:"bytes,5,opt,name=seat_name_to,json=seatNameTo,proto3" json:"seat_name_to,omitempty"`
	EventInfo      *TicketTransferableEventInfo `protobuf:"bytes,6,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	OrderId        string                       `protobuf:"bytes,7,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *CreateTicketTransferableAllReq) Reset() {
	*x = CreateTicketTransferableAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketTransferableAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketTransferableAllReq) ProtoMessage() {}

func (x *CreateTicketTransferableAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketTransferableAllReq.ProtoReflect.Descriptor instead.
func (*CreateTicketTransferableAllReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTicketTransferableAllReq) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

func (x *CreateTicketTransferableAllReq) GetSeatMapId() string {
	if x != nil {
		return x.SeatMapId
	}
	return ""
}

func (x *CreateTicketTransferableAllReq) GetPriceBlockId() string {
	if x != nil {
		return x.PriceBlockId
	}
	return ""
}

func (x *CreateTicketTransferableAllReq) GetSeatNameFrom() string {
	if x != nil {
		return x.SeatNameFrom
	}
	return ""
}

func (x *CreateTicketTransferableAllReq) GetSeatNameTo() string {
	if x != nil {
		return x.SeatNameTo
	}
	return ""
}

func (x *CreateTicketTransferableAllReq) GetEventInfo() *TicketTransferableEventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *CreateTicketTransferableAllReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CreateTicketTransferableAllExcludeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId   string                       `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
	SeatMapId        string                       `protobuf:"bytes,2,opt,name=seat_map_id,json=seatMapId,proto3" json:"seat_map_id,omitempty"`
	PriceBlockId     string                       `protobuf:"bytes,3,opt,name=price_block_id,json=priceBlockId,proto3" json:"price_block_id,omitempty"`
	SeatNameFrom     string                       `protobuf:"bytes,4,opt,name=seat_name_from,json=seatNameFrom,proto3" json:"seat_name_from,omitempty"`
	SeatNameTo       string                       `protobuf:"bytes,5,opt,name=seat_name_to,json=seatNameTo,proto3" json:"seat_name_to,omitempty"`
	ExcludeTicketIds []string                     `protobuf:"bytes,6,rep,name=exclude_ticket_ids,json=excludeTicketIds,proto3" json:"exclude_ticket_ids,omitempty"`
	EventInfo        *TicketTransferableEventInfo `protobuf:"bytes,7,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	OrderId          string                       `protobuf:"bytes,8,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *CreateTicketTransferableAllExcludeReq) Reset() {
	*x = CreateTicketTransferableAllExcludeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketTransferableAllExcludeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketTransferableAllExcludeReq) ProtoMessage() {}

func (x *CreateTicketTransferableAllExcludeReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketTransferableAllExcludeReq.ProtoReflect.Descriptor instead.
func (*CreateTicketTransferableAllExcludeReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTicketTransferableAllExcludeReq) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

func (x *CreateTicketTransferableAllExcludeReq) GetSeatMapId() string {
	if x != nil {
		return x.SeatMapId
	}
	return ""
}

func (x *CreateTicketTransferableAllExcludeReq) GetPriceBlockId() string {
	if x != nil {
		return x.PriceBlockId
	}
	return ""
}

func (x *CreateTicketTransferableAllExcludeReq) GetSeatNameFrom() string {
	if x != nil {
		return x.SeatNameFrom
	}
	return ""
}

func (x *CreateTicketTransferableAllExcludeReq) GetSeatNameTo() string {
	if x != nil {
		return x.SeatNameTo
	}
	return ""
}

func (x *CreateTicketTransferableAllExcludeReq) GetExcludeTicketIds() []string {
	if x != nil {
		return x.ExcludeTicketIds
	}
	return nil
}

func (x *CreateTicketTransferableAllExcludeReq) GetEventInfo() *TicketTransferableEventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *CreateTicketTransferableAllExcludeReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type MapUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId string                      `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
	UserInfo       *TicketTransferableUserInfo `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *MapUserInfoReq) Reset() {
	*x = MapUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapUserInfoReq) ProtoMessage() {}

func (x *MapUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapUserInfoReq.ProtoReflect.Descriptor instead.
func (*MapUserInfoReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{14}
}

func (x *MapUserInfoReq) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

func (x *MapUserInfoReq) GetUserInfo() *TicketTransferableUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type SubmitTicketTransferableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId string `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
}

func (x *SubmitTicketTransferableReq) Reset() {
	*x = SubmitTicketTransferableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTicketTransferableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTicketTransferableReq) ProtoMessage() {}

func (x *SubmitTicketTransferableReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTicketTransferableReq.ProtoReflect.Descriptor instead.
func (*SubmitTicketTransferableReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{15}
}

func (x *SubmitTicketTransferableReq) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

type GetDetailTicketTransferableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId string `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
}

func (x *GetDetailTicketTransferableReq) Reset() {
	*x = GetDetailTicketTransferableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailTicketTransferableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailTicketTransferableReq) ProtoMessage() {}

func (x *GetDetailTicketTransferableReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailTicketTransferableReq.ProtoReflect.Descriptor instead.
func (*GetDetailTicketTransferableReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{16}
}

func (x *GetDetailTicketTransferableReq) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

type CreateTicketTransferableRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId string `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
}

func (x *CreateTicketTransferableRes) Reset() {
	*x = CreateTicketTransferableRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketTransferableRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketTransferableRes) ProtoMessage() {}

func (x *CreateTicketTransferableRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketTransferableRes.ProtoReflect.Descriptor instead.
func (*CreateTicketTransferableRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{17}
}

func (x *CreateTicketTransferableRes) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

type CreateTicketTransferableAllRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId string `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
}

func (x *CreateTicketTransferableAllRes) Reset() {
	*x = CreateTicketTransferableAllRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketTransferableAllRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketTransferableAllRes) ProtoMessage() {}

func (x *CreateTicketTransferableAllRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketTransferableAllRes.ProtoReflect.Descriptor instead.
func (*CreateTicketTransferableAllRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{18}
}

func (x *CreateTicketTransferableAllRes) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

type CreateTicketTransferableAllExcludeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableId string `protobuf:"bytes,1,opt,name=transferable_id,json=transferableId,proto3" json:"transferable_id,omitempty"`
}

func (x *CreateTicketTransferableAllExcludeRes) Reset() {
	*x = CreateTicketTransferableAllExcludeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketTransferableAllExcludeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketTransferableAllExcludeRes) ProtoMessage() {}

func (x *CreateTicketTransferableAllExcludeRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketTransferableAllExcludeRes.ProtoReflect.Descriptor instead.
func (*CreateTicketTransferableAllExcludeRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{19}
}

func (x *CreateTicketTransferableAllExcludeRes) GetTransferableId() string {
	if x != nil {
		return x.TransferableId
	}
	return ""
}

type GetDetailTicketTransferableRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferableInfo *TicketTransferableInfo `protobuf:"bytes,1,opt,name=transferable_info,json=transferableInfo,proto3" json:"transferable_info,omitempty"`
}

func (x *GetDetailTicketTransferableRes) Reset() {
	*x = GetDetailTicketTransferableRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailTicketTransferableRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailTicketTransferableRes) ProtoMessage() {}

func (x *GetDetailTicketTransferableRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_ticket_transferable_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailTicketTransferableRes.ProtoReflect.Descriptor instead.
func (*GetDetailTicketTransferableRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_ticket_transferable_proto_rawDescGZIP(), []int{20}
}

func (x *GetDetailTicketTransferableRes) GetTransferableInfo() *TicketTransferableInfo {
	if x != nil {
		return x.TransferableInfo
	}
	return nil
}

var File_ticket_mobile_ticket_transferable_proto protoreflect.FileDescriptor

var file_ticket_mobile_ticket_transferable_proto_rawDesc = []byte{
	0x0a, 0x27, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x1a, 0x18, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc0, 0x03, 0x0a, 0x16, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x45, 0x0a, 0x07, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x46, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12,
	0x49, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x1c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbc, 0x01,
	0x0a, 0x21, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x5c, 0x0a, 0x1e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x83, 0x02, 0x0a, 0x1a, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xe0, 0x02, 0x0a, 0x1a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x1b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4a,
	0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x1f, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xd7, 0x01, 0x0a, 0x22, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0xfc, 0x01, 0x0a, 0x1f, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x4d, 0x0a, 0x08, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x12,
	0x3e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xa3, 0x02, 0x0a, 0x1b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x49, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xbd, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x73,
	0x65, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x12, 0x49, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xf2, 0x02, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x6c, 0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61,
	0x74, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x49, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x4d, 0x61, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x1b,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x46, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x50, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c,
	0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xbe, 0x05, 0x0a, 0x19, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x7b, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x2d, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x22, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x12, 0x34, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x6c, 0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0b,
	0x4d, 0x61, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x5c, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x7b,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e,
	0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x3b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticket_mobile_ticket_transferable_proto_rawDescOnce sync.Once
	file_ticket_mobile_ticket_transferable_proto_rawDescData = file_ticket_mobile_ticket_transferable_proto_rawDesc
)

func file_ticket_mobile_ticket_transferable_proto_rawDescGZIP() []byte {
	file_ticket_mobile_ticket_transferable_proto_rawDescOnce.Do(func() {
		file_ticket_mobile_ticket_transferable_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticket_mobile_ticket_transferable_proto_rawDescData)
	})
	return file_ticket_mobile_ticket_transferable_proto_rawDescData
}

var file_ticket_mobile_ticket_transferable_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_ticket_mobile_ticket_transferable_proto_goTypes = []interface{}{
	(*TicketTransferableInfo)(nil),                // 0: ticket.mobile.TicketTransferableInfo
	(*TicketTransferableTicketInfo)(nil),          // 1: ticket.mobile.TicketTransferableTicketInfo
	(*TicketTransferablePriceSimpleInfo)(nil),     // 2: ticket.mobile.TicketTransferablePriceSimpleInfo
	(*TicketTransferableCurrencyInfo)(nil),        // 3: ticket.mobile.TicketTransferableCurrencyInfo
	(*TicketTransferableUserInfo)(nil),            // 4: ticket.mobile.TicketTransferableUserInfo
	(*TicketTransferableSeatInfo)(nil),            // 5: ticket.mobile.TicketTransferableSeatInfo
	(*TicketTransferableEventInfo)(nil),           // 6: ticket.mobile.TicketTransferableEventInfo
	(*TicketTransferableEventLocation)(nil),       // 7: ticket.mobile.TicketTransferableEventLocation
	(*TicketTransferableEventVoucherInfo)(nil),    // 8: ticket.mobile.TicketTransferableEventVoucherInfo
	(*TicketTransferableEventSchedule)(nil),       // 9: ticket.mobile.TicketTransferableEventSchedule
	(*TicketTransferableEventTime)(nil),           // 10: ticket.mobile.TicketTransferableEventTime
	(*CreateTicketTransferableReq)(nil),           // 11: ticket.mobile.CreateTicketTransferableReq
	(*CreateTicketTransferableAllReq)(nil),        // 12: ticket.mobile.CreateTicketTransferableAllReq
	(*CreateTicketTransferableAllExcludeReq)(nil), // 13: ticket.mobile.CreateTicketTransferableAllExcludeReq
	(*MapUserInfoReq)(nil),                        // 14: ticket.mobile.MapUserInfoReq
	(*SubmitTicketTransferableReq)(nil),           // 15: ticket.mobile.SubmitTicketTransferableReq
	(*GetDetailTicketTransferableReq)(nil),        // 16: ticket.mobile.GetDetailTicketTransferableReq
	(*CreateTicketTransferableRes)(nil),           // 17: ticket.mobile.CreateTicketTransferableRes
	(*CreateTicketTransferableAllRes)(nil),        // 18: ticket.mobile.CreateTicketTransferableAllRes
	(*CreateTicketTransferableAllExcludeRes)(nil), // 19: ticket.mobile.CreateTicketTransferableAllExcludeRes
	(*GetDetailTicketTransferableRes)(nil),        // 20: ticket.mobile.GetDetailTicketTransferableRes
	(*Empty)(nil),                                 // 21: ticket.mobile.Empty
}
var file_ticket_mobile_ticket_transferable_proto_depIdxs = []int32{
	1,  // 0: ticket.mobile.TicketTransferableInfo.tickets:type_name -> ticket.mobile.TicketTransferableTicketInfo
	4,  // 1: ticket.mobile.TicketTransferableInfo.user_info:type_name -> ticket.mobile.TicketTransferableUserInfo
	6,  // 2: ticket.mobile.TicketTransferableInfo.event_info:type_name -> ticket.mobile.TicketTransferableEventInfo
	5,  // 3: ticket.mobile.TicketTransferableTicketInfo.seat_info:type_name -> ticket.mobile.TicketTransferableSeatInfo
	3,  // 4: ticket.mobile.TicketTransferablePriceSimpleInfo.currency:type_name -> ticket.mobile.TicketTransferableCurrencyInfo
	2,  // 5: ticket.mobile.TicketTransferableSeatInfo.price:type_name -> ticket.mobile.TicketTransferablePriceSimpleInfo
	9,  // 6: ticket.mobile.TicketTransferableEventInfo.schedule:type_name -> ticket.mobile.TicketTransferableEventSchedule
	7,  // 7: ticket.mobile.TicketTransferableEventSchedule.location:type_name -> ticket.mobile.TicketTransferableEventLocation
	8,  // 8: ticket.mobile.TicketTransferableEventSchedule.vouchers:type_name -> ticket.mobile.TicketTransferableEventVoucherInfo
	10, // 9: ticket.mobile.TicketTransferableEventSchedule.time:type_name -> ticket.mobile.TicketTransferableEventTime
	6,  // 10: ticket.mobile.CreateTicketTransferableReq.event_info:type_name -> ticket.mobile.TicketTransferableEventInfo
	6,  // 11: ticket.mobile.CreateTicketTransferableAllReq.event_info:type_name -> ticket.mobile.TicketTransferableEventInfo
	6,  // 12: ticket.mobile.CreateTicketTransferableAllExcludeReq.event_info:type_name -> ticket.mobile.TicketTransferableEventInfo
	4,  // 13: ticket.mobile.MapUserInfoReq.user_info:type_name -> ticket.mobile.TicketTransferableUserInfo
	0,  // 14: ticket.mobile.GetDetailTicketTransferableRes.transferable_info:type_name -> ticket.mobile.TicketTransferableInfo
	11, // 15: ticket.mobile.TicketTransferableService.CreateTicketTransferable:input_type -> ticket.mobile.CreateTicketTransferableReq
	12, // 16: ticket.mobile.TicketTransferableService.CreateTicketTransferableAll:input_type -> ticket.mobile.CreateTicketTransferableAllReq
	13, // 17: ticket.mobile.TicketTransferableService.CreateTicketTransferableAllExclude:input_type -> ticket.mobile.CreateTicketTransferableAllExcludeReq
	14, // 18: ticket.mobile.TicketTransferableService.MapUserInfo:input_type -> ticket.mobile.MapUserInfoReq
	15, // 19: ticket.mobile.TicketTransferableService.SubmitTicketTransferable:input_type -> ticket.mobile.SubmitTicketTransferableReq
	16, // 20: ticket.mobile.TicketTransferableService.GetDetailTicketTransferable:input_type -> ticket.mobile.GetDetailTicketTransferableReq
	17, // 21: ticket.mobile.TicketTransferableService.CreateTicketTransferable:output_type -> ticket.mobile.CreateTicketTransferableRes
	18, // 22: ticket.mobile.TicketTransferableService.CreateTicketTransferableAll:output_type -> ticket.mobile.CreateTicketTransferableAllRes
	19, // 23: ticket.mobile.TicketTransferableService.CreateTicketTransferableAllExclude:output_type -> ticket.mobile.CreateTicketTransferableAllExcludeRes
	21, // 24: ticket.mobile.TicketTransferableService.MapUserInfo:output_type -> ticket.mobile.Empty
	21, // 25: ticket.mobile.TicketTransferableService.SubmitTicketTransferable:output_type -> ticket.mobile.Empty
	20, // 26: ticket.mobile.TicketTransferableService.GetDetailTicketTransferable:output_type -> ticket.mobile.GetDetailTicketTransferableRes
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_ticket_mobile_ticket_transferable_proto_init() }
func file_ticket_mobile_ticket_transferable_proto_init() {
	if File_ticket_mobile_ticket_transferable_proto != nil {
		return
	}
	file_ticket_mobile_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ticket_mobile_ticket_transferable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableTicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferablePriceSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableCurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableSeatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableEventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableEventLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableEventVoucherInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableEventSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransferableEventTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketTransferableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketTransferableAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketTransferableAllExcludeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTicketTransferableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailTicketTransferableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketTransferableRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketTransferableAllRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketTransferableAllExcludeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_ticket_transferable_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailTicketTransferableRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticket_mobile_ticket_transferable_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticket_mobile_ticket_transferable_proto_goTypes,
		DependencyIndexes: file_ticket_mobile_ticket_transferable_proto_depIdxs,
		MessageInfos:      file_ticket_mobile_ticket_transferable_proto_msgTypes,
	}.Build()
	File_ticket_mobile_ticket_transferable_proto = out.File
	file_ticket_mobile_ticket_transferable_proto_rawDesc = nil
	file_ticket_mobile_ticket_transferable_proto_goTypes = nil
	file_ticket_mobile_ticket_transferable_proto_depIdxs = nil
}
