// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: ticket/mobile_inspector/paper_ticket.proto

package mobile_inspector

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//================================= TYPES ===================================
type PaperTicketStatus int32

const (
	PaperTicketStatus_PAPER_TICKET_STATUS_INVALID    PaperTicketStatus = 0
	PaperTicketStatus_PAPER_TICKET_STATUS_NOT_USED   PaperTicketStatus = 1
	PaperTicketStatus_PAPER_TICKET_STATUS_CHECKED_IN PaperTicketStatus = 2
)

// Enum value maps for PaperTicketStatus.
var (
	PaperTicketStatus_name = map[int32]string{
		0: "PAPER_TICKET_STATUS_INVALID",
		1: "PAPER_TICKET_STATUS_NOT_USED",
		2: "PAPER_TICKET_STATUS_CHECKED_IN",
	}
	PaperTicketStatus_value = map[string]int32{
		"PAPER_TICKET_STATUS_INVALID":    0,
		"PAPER_TICKET_STATUS_NOT_USED":   1,
		"PAPER_TICKET_STATUS_CHECKED_IN": 2,
	}
)

func (x PaperTicketStatus) Enum() *PaperTicketStatus {
	p := new(PaperTicketStatus)
	*p = x
	return p
}

func (x PaperTicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaperTicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ticket_mobile_inspector_paper_ticket_proto_enumTypes[0].Descriptor()
}

func (PaperTicketStatus) Type() protoreflect.EnumType {
	return &file_ticket_mobile_inspector_paper_ticket_proto_enumTypes[0]
}

func (x PaperTicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaperTicketStatus.Descriptor instead.
func (PaperTicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP(), []int{0}
}

type PaperTicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt      int64                        `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      int64                        `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	InspectorImage string                       `protobuf:"bytes,4,opt,name=inspector_image,json=inspectorImage,proto3" json:"inspector_image,omitempty"`
	EventInfo      *PaperTicketEventInfo        `protobuf:"bytes,5,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	SecretCode     string                       `protobuf:"bytes,6,opt,name=secret_code,json=secretCode,proto3" json:"secret_code,omitempty"`
	CheckinLogs    []*PaperTicketCheckInLogInfo `protobuf:"bytes,7,rep,name=checkin_logs,json=checkinLogs,proto3" json:"checkin_logs,omitempty"`
	PartnershipId  string                       `protobuf:"bytes,8,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Status         PaperTicketStatus            `protobuf:"varint,9,opt,name=status,proto3,enum=ticket.mobile_inspector.PaperTicketStatus" json:"status,omitempty"`
}

func (x *PaperTicketInfo) Reset() {
	*x = PaperTicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperTicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperTicketInfo) ProtoMessage() {}

func (x *PaperTicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperTicketInfo.ProtoReflect.Descriptor instead.
func (*PaperTicketInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *PaperTicketInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaperTicketInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PaperTicketInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PaperTicketInfo) GetInspectorImage() string {
	if x != nil {
		return x.InspectorImage
	}
	return ""
}

func (x *PaperTicketInfo) GetEventInfo() *PaperTicketEventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *PaperTicketInfo) GetSecretCode() string {
	if x != nil {
		return x.SecretCode
	}
	return ""
}

func (x *PaperTicketInfo) GetCheckinLogs() []*PaperTicketCheckInLogInfo {
	if x != nil {
		return x.CheckinLogs
	}
	return nil
}

func (x *PaperTicketInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *PaperTicketInfo) GetStatus() PaperTicketStatus {
	if x != nil {
		return x.Status
	}
	return PaperTicketStatus_PAPER_TICKET_STATUS_INVALID
}

type PaperTicketEventLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Ward     string `protobuf:"bytes,3,opt,name=ward,proto3" json:"ward,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *PaperTicketEventLocation) Reset() {
	*x = PaperTicketEventLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperTicketEventLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperTicketEventLocation) ProtoMessage() {}

func (x *PaperTicketEventLocation) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperTicketEventLocation.ProtoReflect.Descriptor instead.
func (*PaperTicketEventLocation) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *PaperTicketEventLocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaperTicketEventLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PaperTicketEventLocation) GetWard() string {
	if x != nil {
		return x.Ward
	}
	return ""
}

func (x *PaperTicketEventLocation) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *PaperTicketEventLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PaperTicketEventLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type PaperTicketEventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          string                    `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Name             string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartTime        int64                     `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          int64                     `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CheckinStartTime int64                     `protobuf:"varint,5,opt,name=checkin_start_time,json=checkinStartTime,proto3" json:"checkin_start_time,omitempty"`
	CheckinEndTime   int64                     `protobuf:"varint,6,opt,name=checkin_end_time,json=checkinEndTime,proto3" json:"checkin_end_time,omitempty"`
	Location         *PaperTicketEventLocation `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Timezone         string                    `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
	CheckinEnded     bool                      `protobuf:"varint,9,opt,name=checkin_ended,json=checkinEnded,proto3" json:"checkin_ended,omitempty"`
}

func (x *PaperTicketEventInfo) Reset() {
	*x = PaperTicketEventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperTicketEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperTicketEventInfo) ProtoMessage() {}

func (x *PaperTicketEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperTicketEventInfo.ProtoReflect.Descriptor instead.
func (*PaperTicketEventInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *PaperTicketEventInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *PaperTicketEventInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaperTicketEventInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PaperTicketEventInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PaperTicketEventInfo) GetCheckinStartTime() int64 {
	if x != nil {
		return x.CheckinStartTime
	}
	return 0
}

func (x *PaperTicketEventInfo) GetCheckinEndTime() int64 {
	if x != nil {
		return x.CheckinEndTime
	}
	return 0
}

func (x *PaperTicketEventInfo) GetLocation() *PaperTicketEventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *PaperTicketEventInfo) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *PaperTicketEventInfo) GetCheckinEnded() bool {
	if x != nil {
		return x.CheckinEnded
	}
	return false
}

type PaperTicketCheckInLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InspectorId string `protobuf:"bytes,1,opt,name=inspector_id,json=inspectorId,proto3" json:"inspector_id,omitempty"`
	Time        int64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PaperTicketCheckInLogInfo) Reset() {
	*x = PaperTicketCheckInLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperTicketCheckInLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperTicketCheckInLogInfo) ProtoMessage() {}

func (x *PaperTicketCheckInLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperTicketCheckInLogInfo.ProtoReflect.Descriptor instead.
func (*PaperTicketCheckInLogInfo) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *PaperTicketCheckInLogInfo) GetInspectorId() string {
	if x != nil {
		return x.InspectorId
	}
	return ""
}

func (x *PaperTicketCheckInLogInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type MapPaperTicketInfoAndCheckinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretCode     string                `protobuf:"bytes,1,opt,name=secret_code,json=secretCode,proto3" json:"secret_code,omitempty"`
	EventInfo      *PaperTicketEventInfo `protobuf:"bytes,2,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	InspectorImage string                `protobuf:"bytes,3,opt,name=inspector_image,json=inspectorImage,proto3" json:"inspector_image,omitempty"`
	PartnershipId  string                `protobuf:"bytes,4,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
}

func (x *MapPaperTicketInfoAndCheckinReq) Reset() {
	*x = MapPaperTicketInfoAndCheckinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapPaperTicketInfoAndCheckinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPaperTicketInfoAndCheckinReq) ProtoMessage() {}

func (x *MapPaperTicketInfoAndCheckinReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapPaperTicketInfoAndCheckinReq.ProtoReflect.Descriptor instead.
func (*MapPaperTicketInfoAndCheckinReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *MapPaperTicketInfoAndCheckinReq) GetSecretCode() string {
	if x != nil {
		return x.SecretCode
	}
	return ""
}

func (x *MapPaperTicketInfoAndCheckinReq) GetEventInfo() *PaperTicketEventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *MapPaperTicketInfoAndCheckinReq) GetInspectorImage() string {
	if x != nil {
		return x.InspectorImage
	}
	return ""
}

func (x *MapPaperTicketInfoAndCheckinReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

type GetPaperTicketByCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretCode string `protobuf:"bytes,1,opt,name=secret_code,json=secretCode,proto3" json:"secret_code,omitempty"`
}

func (x *GetPaperTicketByCodeReq) Reset() {
	*x = GetPaperTicketByCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaperTicketByCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaperTicketByCodeReq) ProtoMessage() {}

func (x *GetPaperTicketByCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaperTicketByCodeReq.ProtoReflect.Descriptor instead.
func (*GetPaperTicketByCodeReq) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *GetPaperTicketByCodeReq) GetSecretCode() string {
	if x != nil {
		return x.SecretCode
	}
	return ""
}

type GetPaperTicketByCodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PaperTicketInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetPaperTicketByCodeRes) Reset() {
	*x = GetPaperTicketByCodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaperTicketByCodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaperTicketByCodeRes) ProtoMessage() {}

func (x *GetPaperTicketByCodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaperTicketByCodeRes.ProtoReflect.Descriptor instead.
func (*GetPaperTicketByCodeRes) Descriptor() ([]byte, []int) {
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP(), []int{6}
}

func (x *GetPaperTicketByCodeRes) GetInfo() *PaperTicketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_ticket_mobile_inspector_paper_ticket_proto protoreflect.FileDescriptor

var file_ticket_mobile_inspector_paper_ticket_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x22, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x03, 0x0a, 0x0f, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49,
	0x64, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x18, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xe7, 0x02, 0x0a, 0x14, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x45,
	0x6e, 0x64, 0x65, 0x64, 0x22, 0x52, 0x0a, 0x19, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x1f, 0x4d, 0x61, 0x70,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41,
	0x6e, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x3c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x2a, 0x7a, 0x0a, 0x11, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41, 0x50, 0x45, 0x52, 0x5f, 0x54,
	0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x41, 0x50, 0x45, 0x52, 0x5f,
	0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x41, 0x50, 0x45,
	0x52, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x48, 0x45, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x02, 0x32, 0x8a, 0x02, 0x0a,
	0x12, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x7a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x78, 0x0a, 0x1c, 0x4d, 0x61, 0x70, 0x50, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x6e, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12,
	0x38, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x6e, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x25, 0x5a, 0x23, 0x2e, 0x2f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3b,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticket_mobile_inspector_paper_ticket_proto_rawDescOnce sync.Once
	file_ticket_mobile_inspector_paper_ticket_proto_rawDescData = file_ticket_mobile_inspector_paper_ticket_proto_rawDesc
)

func file_ticket_mobile_inspector_paper_ticket_proto_rawDescGZIP() []byte {
	file_ticket_mobile_inspector_paper_ticket_proto_rawDescOnce.Do(func() {
		file_ticket_mobile_inspector_paper_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticket_mobile_inspector_paper_ticket_proto_rawDescData)
	})
	return file_ticket_mobile_inspector_paper_ticket_proto_rawDescData
}

var file_ticket_mobile_inspector_paper_ticket_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ticket_mobile_inspector_paper_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ticket_mobile_inspector_paper_ticket_proto_goTypes = []interface{}{
	(PaperTicketStatus)(0),                  // 0: ticket.mobile_inspector.PaperTicketStatus
	(*PaperTicketInfo)(nil),                 // 1: ticket.mobile_inspector.PaperTicketInfo
	(*PaperTicketEventLocation)(nil),        // 2: ticket.mobile_inspector.PaperTicketEventLocation
	(*PaperTicketEventInfo)(nil),            // 3: ticket.mobile_inspector.PaperTicketEventInfo
	(*PaperTicketCheckInLogInfo)(nil),       // 4: ticket.mobile_inspector.PaperTicketCheckInLogInfo
	(*MapPaperTicketInfoAndCheckinReq)(nil), // 5: ticket.mobile_inspector.MapPaperTicketInfoAndCheckinReq
	(*GetPaperTicketByCodeReq)(nil),         // 6: ticket.mobile_inspector.GetPaperTicketByCodeReq
	(*GetPaperTicketByCodeRes)(nil),         // 7: ticket.mobile_inspector.GetPaperTicketByCodeRes
	(*Empty)(nil),                           // 8: ticket.mobile_inspector.Empty
}
var file_ticket_mobile_inspector_paper_ticket_proto_depIdxs = []int32{
	3, // 0: ticket.mobile_inspector.PaperTicketInfo.event_info:type_name -> ticket.mobile_inspector.PaperTicketEventInfo
	4, // 1: ticket.mobile_inspector.PaperTicketInfo.checkin_logs:type_name -> ticket.mobile_inspector.PaperTicketCheckInLogInfo
	0, // 2: ticket.mobile_inspector.PaperTicketInfo.status:type_name -> ticket.mobile_inspector.PaperTicketStatus
	2, // 3: ticket.mobile_inspector.PaperTicketEventInfo.location:type_name -> ticket.mobile_inspector.PaperTicketEventLocation
	3, // 4: ticket.mobile_inspector.MapPaperTicketInfoAndCheckinReq.event_info:type_name -> ticket.mobile_inspector.PaperTicketEventInfo
	1, // 5: ticket.mobile_inspector.GetPaperTicketByCodeRes.info:type_name -> ticket.mobile_inspector.PaperTicketInfo
	6, // 6: ticket.mobile_inspector.PaperTicketService.GetPaperTicketByCode:input_type -> ticket.mobile_inspector.GetPaperTicketByCodeReq
	5, // 7: ticket.mobile_inspector.PaperTicketService.MapPaperTicketInfoAndCheckin:input_type -> ticket.mobile_inspector.MapPaperTicketInfoAndCheckinReq
	7, // 8: ticket.mobile_inspector.PaperTicketService.GetPaperTicketByCode:output_type -> ticket.mobile_inspector.GetPaperTicketByCodeRes
	8, // 9: ticket.mobile_inspector.PaperTicketService.MapPaperTicketInfoAndCheckin:output_type -> ticket.mobile_inspector.Empty
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ticket_mobile_inspector_paper_ticket_proto_init() }
func file_ticket_mobile_inspector_paper_ticket_proto_init() {
	if File_ticket_mobile_inspector_paper_ticket_proto != nil {
		return
	}
	file_ticket_mobile_inspector_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperTicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperTicketEventLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperTicketEventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperTicketCheckInLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapPaperTicketInfoAndCheckinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaperTicketByCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_mobile_inspector_paper_ticket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaperTicketByCodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticket_mobile_inspector_paper_ticket_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticket_mobile_inspector_paper_ticket_proto_goTypes,
		DependencyIndexes: file_ticket_mobile_inspector_paper_ticket_proto_depIdxs,
		EnumInfos:         file_ticket_mobile_inspector_paper_ticket_proto_enumTypes,
		MessageInfos:      file_ticket_mobile_inspector_paper_ticket_proto_msgTypes,
	}.Build()
	File_ticket_mobile_inspector_paper_ticket_proto = out.File
	file_ticket_mobile_inspector_paper_ticket_proto_rawDesc = nil
	file_ticket_mobile_inspector_paper_ticket_proto_goTypes = nil
	file_ticket_mobile_inspector_paper_ticket_proto_depIdxs = nil
}
