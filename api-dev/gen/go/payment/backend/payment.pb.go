// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: proto/payment/backend/payment.proto

package backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentMethod int32

const (
	PaymentMethod_PAYMENT_METHOD_INVALID                           PaymentMethod = 0
	PaymentMethod_PAYMENT_METHOD_PAYPAL                            PaymentMethod = 1
	PaymentMethod_PAYMENT_METHOD_VNPAY_EWALLET                     PaymentMethod = 2  // ví vnpay
	PaymentMethod_PAYMENT_METHOD_VNPAY_CREDITCARD                  PaymentMethod = 3  // vnpay với visa, master, JCB
	PaymentMethod_PAYMENT_METHOD_VNPAY_BANKTRANSFER                PaymentMethod = 4  // vnpay với các ngân hàng trong nước VN
	PaymentMethod_PAYMENT_METHOD_VNPAY_QRCODE                      PaymentMethod = 5  // vnpay quét mã QR
	PaymentMethod_PAYMENT_METHOD_MANUAL_BANKTRANSFER               PaymentMethod = 6  // thanh toán ck vào tk theo cú pháp
	PaymentMethod_PAYMENT_METHOD_MOMO                              PaymentMethod = 7  // ví momo
	PaymentMethod_PAYMENT_METHOD_TWO_CHECKOUT                      PaymentMethod = 8  // two checkout
	PaymentMethod_PAYMENT_METHOD_PAYOO_CREDITCARD                  PaymentMethod = 9  // payoo với thẻ quốc tế
	PaymentMethod_PAYMENT_METHOD_PAYOO_DOMESTIC_CARD               PaymentMethod = 10 // payoo với thẻ nội địa
	PaymentMethod_PAYMENT_METHOD_PAYOO_QRCODE                      PaymentMethod = 11 // payoo quét mã QR
	PaymentMethod_PAYMENT_METHOD_ONE_PAY_CREDITCARD                PaymentMethod = 12 // onepay với thẻ quốc tế
	PaymentMethod_PAYMENT_METHOD_ONE_PAY_CREDITCARD_DOMESTIC_ISSUE PaymentMethod = 13 // onepay với thẻ quốc tế phát hành trong nước
	PaymentMethod_PAYMENT_METHOD_ONE_PAY_DOMESTIC_CARD             PaymentMethod = 14 // onepay với thẻ nội địa
	PaymentMethod_PAYMENT_METHOD_ONE_PAY_QRCODE                    PaymentMethod = 15 // onepay quét mã QR
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0:  "PAYMENT_METHOD_INVALID",
		1:  "PAYMENT_METHOD_PAYPAL",
		2:  "PAYMENT_METHOD_VNPAY_EWALLET",
		3:  "PAYMENT_METHOD_VNPAY_CREDITCARD",
		4:  "PAYMENT_METHOD_VNPAY_BANKTRANSFER",
		5:  "PAYMENT_METHOD_VNPAY_QRCODE",
		6:  "PAYMENT_METHOD_MANUAL_BANKTRANSFER",
		7:  "PAYMENT_METHOD_MOMO",
		8:  "PAYMENT_METHOD_TWO_CHECKOUT",
		9:  "PAYMENT_METHOD_PAYOO_CREDITCARD",
		10: "PAYMENT_METHOD_PAYOO_DOMESTIC_CARD",
		11: "PAYMENT_METHOD_PAYOO_QRCODE",
		12: "PAYMENT_METHOD_ONE_PAY_CREDITCARD",
		13: "PAYMENT_METHOD_ONE_PAY_CREDITCARD_DOMESTIC_ISSUE",
		14: "PAYMENT_METHOD_ONE_PAY_DOMESTIC_CARD",
		15: "PAYMENT_METHOD_ONE_PAY_QRCODE",
	}
	PaymentMethod_value = map[string]int32{
		"PAYMENT_METHOD_INVALID":                           0,
		"PAYMENT_METHOD_PAYPAL":                            1,
		"PAYMENT_METHOD_VNPAY_EWALLET":                     2,
		"PAYMENT_METHOD_VNPAY_CREDITCARD":                  3,
		"PAYMENT_METHOD_VNPAY_BANKTRANSFER":                4,
		"PAYMENT_METHOD_VNPAY_QRCODE":                      5,
		"PAYMENT_METHOD_MANUAL_BANKTRANSFER":               6,
		"PAYMENT_METHOD_MOMO":                              7,
		"PAYMENT_METHOD_TWO_CHECKOUT":                      8,
		"PAYMENT_METHOD_PAYOO_CREDITCARD":                  9,
		"PAYMENT_METHOD_PAYOO_DOMESTIC_CARD":               10,
		"PAYMENT_METHOD_PAYOO_QRCODE":                      11,
		"PAYMENT_METHOD_ONE_PAY_CREDITCARD":                12,
		"PAYMENT_METHOD_ONE_PAY_CREDITCARD_DOMESTIC_ISSUE": 13,
		"PAYMENT_METHOD_ONE_PAY_DOMESTIC_CARD":             14,
		"PAYMENT_METHOD_ONE_PAY_QRCODE":                    15,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_payment_backend_payment_proto_enumTypes[0].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_proto_payment_backend_payment_proto_enumTypes[0]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_proto_payment_backend_payment_proto_rawDescGZIP(), []int{0}
}

type PaymentMethodInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string        `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Name          string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code          string        `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Method        PaymentMethod `protobuf:"varint,4,opt,name=method,proto3,enum=payment.backend.PaymentMethod" json:"method,omitempty"`
	Fee           float64       `protobuf:"fixed64,5,opt,name=fee,proto3" json:"fee,omitempty"`
	AdditionalFee float64       `protobuf:"fixed64,6,opt,name=additional_fee,json=additionalFee,proto3" json:"additional_fee,omitempty"`
	DisplayFee    string        `protobuf:"bytes,7,opt,name=display_fee,json=displayFee,proto3" json:"display_fee,omitempty"`
	Icon          string        `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`
	Id            string        `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	Tag           string        `protobuf:"bytes,10,opt,name=tag,proto3" json:"tag,omitempty"`
	IsEnable      bool          `protobuf:"varint,11,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`
	IncludeFee    bool          `protobuf:"varint,12,opt,name=include_fee,json=includeFee,proto3" json:"include_fee"`
}

func (x *PaymentMethodInfo) Reset() {
	*x = PaymentMethodInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_payment_backend_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodInfo) ProtoMessage() {}

func (x *PaymentMethodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_backend_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodInfo.ProtoReflect.Descriptor instead.
func (*PaymentMethodInfo) Descriptor() ([]byte, []int) {
	return file_proto_payment_backend_payment_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentMethodInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *PaymentMethodInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentMethodInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PaymentMethodInfo) GetMethod() PaymentMethod {
	if x != nil {
		return x.Method
	}
	return PaymentMethod_PAYMENT_METHOD_INVALID
}

func (x *PaymentMethodInfo) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *PaymentMethodInfo) GetAdditionalFee() float64 {
	if x != nil {
		return x.AdditionalFee
	}
	return 0
}

func (x *PaymentMethodInfo) GetDisplayFee() string {
	if x != nil {
		return x.DisplayFee
	}
	return ""
}

func (x *PaymentMethodInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PaymentMethodInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentMethodInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PaymentMethodInfo) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *PaymentMethodInfo) GetIncludeFee() bool {
	if x != nil {
		return x.IncludeFee
	}
	return false
}

type CreatePaymentMethodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string        `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Name          string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code          string        `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Method        PaymentMethod `protobuf:"varint,4,opt,name=method,proto3,enum=payment.backend.PaymentMethod" json:"method,omitempty"`
	Fee           float64       `protobuf:"fixed64,5,opt,name=fee,proto3" json:"fee,omitempty"`
	AdditionalFee float64       `protobuf:"fixed64,6,opt,name=additional_fee,json=additionalFee,proto3" json:"additional_fee,omitempty"`
	DisplayFee    string        `protobuf:"bytes,7,opt,name=display_fee,json=displayFee,proto3" json:"display_fee,omitempty"`
	Icon          string        `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`
	Tag           string        `protobuf:"bytes,9,opt,name=tag,proto3" json:"tag,omitempty"`
	IsEnable      bool          `protobuf:"varint,10,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`
	IncludeFee    bool          `protobuf:"varint,12,opt,name=include_fee,json=includeFee,proto3" json:"include_fee"`
}

func (x *CreatePaymentMethodReq) Reset() {
	*x = CreatePaymentMethodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_payment_backend_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentMethodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentMethodReq) ProtoMessage() {}

func (x *CreatePaymentMethodReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_backend_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentMethodReq.ProtoReflect.Descriptor instead.
func (*CreatePaymentMethodReq) Descriptor() ([]byte, []int) {
	return file_proto_payment_backend_payment_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePaymentMethodReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *CreatePaymentMethodReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePaymentMethodReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreatePaymentMethodReq) GetMethod() PaymentMethod {
	if x != nil {
		return x.Method
	}
	return PaymentMethod_PAYMENT_METHOD_INVALID
}

func (x *CreatePaymentMethodReq) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *CreatePaymentMethodReq) GetAdditionalFee() float64 {
	if x != nil {
		return x.AdditionalFee
	}
	return 0
}

func (x *CreatePaymentMethodReq) GetDisplayFee() string {
	if x != nil {
		return x.DisplayFee
	}
	return ""
}

func (x *CreatePaymentMethodReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreatePaymentMethodReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CreatePaymentMethodReq) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *CreatePaymentMethodReq) GetIncludeFee() bool {
	if x != nil {
		return x.IncludeFee
	}
	return false
}

type GetPaymentMethodByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPaymentMethodByIdReq) Reset() {
	*x = GetPaymentMethodByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_payment_backend_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentMethodByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodByIdReq) ProtoMessage() {}

func (x *GetPaymentMethodByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_backend_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodByIdReq.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodByIdReq) Descriptor() ([]byte, []int) {
	return file_proto_payment_backend_payment_proto_rawDescGZIP(), []int{2}
}

func (x *GetPaymentMethodByIdReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *GetPaymentMethodByIdReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPaymentMethodByCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Code          string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetPaymentMethodByCodeReq) Reset() {
	*x = GetPaymentMethodByCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_payment_backend_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentMethodByCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodByCodeReq) ProtoMessage() {}

func (x *GetPaymentMethodByCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_backend_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodByCodeReq.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodByCodeReq) Descriptor() ([]byte, []int) {
	return file_proto_payment_backend_payment_proto_rawDescGZIP(), []int{3}
}

func (x *GetPaymentMethodByCodeReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *GetPaymentMethodByCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CreatePaymentMethodRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePaymentMethodRes) Reset() {
	*x = CreatePaymentMethodRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_payment_backend_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentMethodRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentMethodRes) ProtoMessage() {}

func (x *CreatePaymentMethodRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_backend_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentMethodRes.ProtoReflect.Descriptor instead.
func (*CreatePaymentMethodRes) Descriptor() ([]byte, []int) {
	return file_proto_payment_backend_payment_proto_rawDescGZIP(), []int{4}
}

type GetPaymentMethodByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethod *PaymentMethodInfo `protobuf:"bytes,1,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
}

func (x *GetPaymentMethodByIdRes) Reset() {
	*x = GetPaymentMethodByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_payment_backend_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentMethodByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodByIdRes) ProtoMessage() {}

func (x *GetPaymentMethodByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_backend_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodByIdRes.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodByIdRes) Descriptor() ([]byte, []int) {
	return file_proto_payment_backend_payment_proto_rawDescGZIP(), []int{5}
}

func (x *GetPaymentMethodByIdRes) GetPaymentMethod() *PaymentMethodInfo {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

type GetPaymentMethodByCodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethod *PaymentMethodInfo `protobuf:"bytes,1,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
}

func (x *GetPaymentMethodByCodeRes) Reset() {
	*x = GetPaymentMethodByCodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_payment_backend_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentMethodByCodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodByCodeRes) ProtoMessage() {}

func (x *GetPaymentMethodByCodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_backend_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodByCodeRes.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodByCodeRes) Descriptor() ([]byte, []int) {
	return file_proto_payment_backend_payment_proto_rawDescGZIP(), []int{6}
}

func (x *GetPaymentMethodByCodeRes) GetPaymentMethod() *PaymentMethodInfo {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

var File_proto_payment_backend_payment_proto protoreflect.FileDescriptor

var file_proto_payment_backend_payment_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x22, 0xe8, 0x02, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x65,
	0x65, 0x22, 0xdd, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x65,
	0x65, 0x22, 0x50, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x12, 0x49, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x66, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x2a, 0xcf, 0x04, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54,
	0x48, 0x4f, 0x44, 0x5f, 0x50, 0x41, 0x59, 0x50, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x56,
	0x4e, 0x50, 0x41, 0x59, 0x5f, 0x45, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x02, 0x12, 0x23,
	0x0a, 0x1f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x56, 0x4e, 0x50, 0x41, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d,
	0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x56, 0x4e, 0x50, 0x41, 0x59, 0x5f, 0x42, 0x41, 0x4e, 0x4b,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x56, 0x4e, 0x50,
	0x41, 0x59, 0x5f, 0x51, 0x52, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45,
	0x52, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d,
	0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4d, 0x4f, 0x4d, 0x4f, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54,
	0x57, 0x4f, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x4f, 0x55, 0x54, 0x10, 0x08, 0x12, 0x23, 0x0a,
	0x1f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,
	0x50, 0x41, 0x59, 0x4f, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x09, 0x12, 0x26, 0x0a, 0x22, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x5f, 0x50, 0x41, 0x59, 0x4f, 0x4f, 0x5f, 0x44, 0x4f, 0x4d, 0x45, 0x53,
	0x54, 0x49, 0x43, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x50, 0x41, 0x59,
	0x4f, 0x4f, 0x5f, 0x51, 0x52, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x0b, 0x12, 0x25, 0x0a, 0x21, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4f, 0x4e,
	0x45, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x0c, 0x12, 0x34, 0x0a, 0x30, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x43, 0x52, 0x45,
	0x44, 0x49, 0x54, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x44, 0x4f, 0x4d, 0x45, 0x53, 0x54, 0x49, 0x43,
	0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x0d, 0x12, 0x28, 0x0a, 0x24, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x50,
	0x41, 0x59, 0x5f, 0x44, 0x4f, 0x4d, 0x45, 0x53, 0x54, 0x49, 0x43, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x0e, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x51, 0x52, 0x43,
	0x4f, 0x44, 0x45, 0x10, 0x0f, 0x32, 0xd7, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x27, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x6a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x70, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x42,
	0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x3b, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_payment_backend_payment_proto_rawDescOnce sync.Once
	file_proto_payment_backend_payment_proto_rawDescData = file_proto_payment_backend_payment_proto_rawDesc
)

func file_proto_payment_backend_payment_proto_rawDescGZIP() []byte {
	file_proto_payment_backend_payment_proto_rawDescOnce.Do(func() {
		file_proto_payment_backend_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_payment_backend_payment_proto_rawDescData)
	})
	return file_proto_payment_backend_payment_proto_rawDescData
}

var file_proto_payment_backend_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_payment_backend_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_payment_backend_payment_proto_goTypes = []interface{}{
	(PaymentMethod)(0),                // 0: payment.backend.PaymentMethod
	(*PaymentMethodInfo)(nil),         // 1: payment.backend.PaymentMethodInfo
	(*CreatePaymentMethodReq)(nil),    // 2: payment.backend.CreatePaymentMethodReq
	(*GetPaymentMethodByIdReq)(nil),   // 3: payment.backend.GetPaymentMethodByIdReq
	(*GetPaymentMethodByCodeReq)(nil), // 4: payment.backend.GetPaymentMethodByCodeReq
	(*CreatePaymentMethodRes)(nil),    // 5: payment.backend.CreatePaymentMethodRes
	(*GetPaymentMethodByIdRes)(nil),   // 6: payment.backend.GetPaymentMethodByIdRes
	(*GetPaymentMethodByCodeRes)(nil), // 7: payment.backend.GetPaymentMethodByCodeRes
}
var file_proto_payment_backend_payment_proto_depIdxs = []int32{
	0, // 0: payment.backend.PaymentMethodInfo.method:type_name -> payment.backend.PaymentMethod
	0, // 1: payment.backend.CreatePaymentMethodReq.method:type_name -> payment.backend.PaymentMethod
	1, // 2: payment.backend.GetPaymentMethodByIdRes.payment_method:type_name -> payment.backend.PaymentMethodInfo
	1, // 3: payment.backend.GetPaymentMethodByCodeRes.payment_method:type_name -> payment.backend.PaymentMethodInfo
	2, // 4: payment.backend.PaymentService.CreatePaymentMethod:input_type -> payment.backend.CreatePaymentMethodReq
	3, // 5: payment.backend.PaymentService.GetPaymentMethodById:input_type -> payment.backend.GetPaymentMethodByIdReq
	4, // 6: payment.backend.PaymentService.GetPaymentMethodByCode:input_type -> payment.backend.GetPaymentMethodByCodeReq
	5, // 7: payment.backend.PaymentService.CreatePaymentMethod:output_type -> payment.backend.CreatePaymentMethodRes
	6, // 8: payment.backend.PaymentService.GetPaymentMethodById:output_type -> payment.backend.GetPaymentMethodByIdRes
	7, // 9: payment.backend.PaymentService.GetPaymentMethodByCode:output_type -> payment.backend.GetPaymentMethodByCodeRes
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_payment_backend_payment_proto_init() }
func file_proto_payment_backend_payment_proto_init() {
	if File_proto_payment_backend_payment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_payment_backend_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_payment_backend_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentMethodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_payment_backend_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentMethodByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_payment_backend_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentMethodByCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_payment_backend_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentMethodRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_payment_backend_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentMethodByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_payment_backend_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentMethodByCodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_payment_backend_payment_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_payment_backend_payment_proto_goTypes,
		DependencyIndexes: file_proto_payment_backend_payment_proto_depIdxs,
		EnumInfos:         file_proto_payment_backend_payment_proto_enumTypes,
		MessageInfos:      file_proto_payment_backend_payment_proto_msgTypes,
	}.Build()
	File_proto_payment_backend_payment_proto = out.File
	file_proto_payment_backend_payment_proto_rawDesc = nil
	file_proto_payment_backend_payment_proto_goTypes = nil
	file_proto_payment_backend_payment_proto_depIdxs = nil
}
