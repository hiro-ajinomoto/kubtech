// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: proto/partnership/backend/partnership.proto

package backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PartnershipBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeName          string           `protobuf:"bytes,1,opt,name=code_name,json=codeName,proto3" json:"code_name,omitempty"`
	FullName          string           `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Color             string           `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Slogan            string           `protobuf:"bytes,4,opt,name=slogan,proto3" json:"slogan,omitempty"`
	Logo              string           `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`
	IsMaintenance     bool             `protobuf:"varint,6,opt,name=is_maintenance,json=isMaintenance,proto3" json:"is_maintenance"`
	AppIosVersion     string           `protobuf:"bytes,7,opt,name=app_ios_version,json=appIosVersion,proto3" json:"app_ios_version,omitempty"`
	AppAndroidVersion string           `protobuf:"bytes,8,opt,name=app_android_version,json=appAndroidVersion,proto3" json:"app_android_version,omitempty"`
	IsForceUpdate     bool             `protobuf:"varint,9,opt,name=is_force_update,json=isForceUpdate,proto3" json:"is_force_update"`
	Urls              *PartnershipURLs `protobuf:"bytes,10,opt,name=urls,proto3" json:"urls,omitempty"`
	ShowPaymentTerms  bool             `protobuf:"varint,11,opt,name=show_payment_terms,json=showPaymentTerms,proto3" json:"show_payment_terms"`
	AndroidTvVersion  string           `protobuf:"bytes,12,opt,name=android_tv_version,json=androidTvVersion,proto3" json:"android_tv_version,omitempty"`
	AppleTvVersion    string           `protobuf:"bytes,13,opt,name=apple_tv_version,json=appleTvVersion,proto3" json:"apple_tv_version,omitempty"`
	TvIsForceUpdate   bool             `protobuf:"varint,14,opt,name=tv_is_force_update,json=tvIsForceUpdate,proto3" json:"tv_is_force_update"`
	DefaultCurrency   string           `protobuf:"bytes,15,opt,name=default_currency,json=defaultCurrency,proto3" json:"default_currency,omitempty"`
}

func (x *PartnershipBasicInfo) Reset() {
	*x = PartnershipBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnership_backend_partnership_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartnershipBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnershipBasicInfo) ProtoMessage() {}

func (x *PartnershipBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnership_backend_partnership_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnershipBasicInfo.ProtoReflect.Descriptor instead.
func (*PartnershipBasicInfo) Descriptor() ([]byte, []int) {
	return file_proto_partnership_backend_partnership_proto_rawDescGZIP(), []int{0}
}

func (x *PartnershipBasicInfo) GetCodeName() string {
	if x != nil {
		return x.CodeName
	}
	return ""
}

func (x *PartnershipBasicInfo) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *PartnershipBasicInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *PartnershipBasicInfo) GetSlogan() string {
	if x != nil {
		return x.Slogan
	}
	return ""
}

func (x *PartnershipBasicInfo) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *PartnershipBasicInfo) GetIsMaintenance() bool {
	if x != nil {
		return x.IsMaintenance
	}
	return false
}

func (x *PartnershipBasicInfo) GetAppIosVersion() string {
	if x != nil {
		return x.AppIosVersion
	}
	return ""
}

func (x *PartnershipBasicInfo) GetAppAndroidVersion() string {
	if x != nil {
		return x.AppAndroidVersion
	}
	return ""
}

func (x *PartnershipBasicInfo) GetIsForceUpdate() bool {
	if x != nil {
		return x.IsForceUpdate
	}
	return false
}

func (x *PartnershipBasicInfo) GetUrls() *PartnershipURLs {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *PartnershipBasicInfo) GetShowPaymentTerms() bool {
	if x != nil {
		return x.ShowPaymentTerms
	}
	return false
}

func (x *PartnershipBasicInfo) GetAndroidTvVersion() string {
	if x != nil {
		return x.AndroidTvVersion
	}
	return ""
}

func (x *PartnershipBasicInfo) GetAppleTvVersion() string {
	if x != nil {
		return x.AppleTvVersion
	}
	return ""
}

func (x *PartnershipBasicInfo) GetTvIsForceUpdate() bool {
	if x != nil {
		return x.TvIsForceUpdate
	}
	return false
}

func (x *PartnershipBasicInfo) GetDefaultCurrency() string {
	if x != nil {
		return x.DefaultCurrency
	}
	return ""
}

type PartnershipListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CodeName      string `protobuf:"bytes,2,opt,name=code_name,json=codeName,proto3" json:"code_name,omitempty"`
	FullName      string `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	CreatedAt     int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy     string `protobuf:"bytes,7,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	IsMaintenance bool   `protobuf:"varint,8,opt,name=is_maintenance,json=isMaintenance,proto3" json:"is_maintenance"`
}

func (x *PartnershipListInfo) Reset() {
	*x = PartnershipListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnership_backend_partnership_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartnershipListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnershipListInfo) ProtoMessage() {}

func (x *PartnershipListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnership_backend_partnership_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnershipListInfo.ProtoReflect.Descriptor instead.
func (*PartnershipListInfo) Descriptor() ([]byte, []int) {
	return file_proto_partnership_backend_partnership_proto_rawDescGZIP(), []int{1}
}

func (x *PartnershipListInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PartnershipListInfo) GetCodeName() string {
	if x != nil {
		return x.CodeName
	}
	return ""
}

func (x *PartnershipListInfo) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *PartnershipListInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PartnershipListInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PartnershipListInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *PartnershipListInfo) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *PartnershipListInfo) GetIsMaintenance() bool {
	if x != nil {
		return x.IsMaintenance
	}
	return false
}

type PartnershipURLs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlContact              string `protobuf:"bytes,1,opt,name=url_contact,json=urlContact,proto3" json:"url_contact,omitempty"`
	UrlInstruction          string `protobuf:"bytes,2,opt,name=url_instruction,json=urlInstruction,proto3" json:"url_instruction,omitempty"`
	UrlTerm                 string `protobuf:"bytes,3,opt,name=url_term,json=urlTerm,proto3" json:"url_term,omitempty"`
	UrlPolicy               string `protobuf:"bytes,4,opt,name=url_policy,json=urlPolicy,proto3" json:"url_policy,omitempty"`
	UrlSupport              string `protobuf:"bytes,5,opt,name=url_support,json=urlSupport,proto3" json:"url_support,omitempty"`
	UrlSafetyForm           string `protobuf:"bytes,6,opt,name=url_safety_form,json=urlSafetyForm,proto3" json:"url_safety_form,omitempty"`
	UrlRegulations          string `protobuf:"bytes,7,opt,name=url_regulations,json=urlRegulations,proto3" json:"url_regulations,omitempty"`
	UrlInspectorSeatMap     string `protobuf:"bytes,8,opt,name=url_inspector_seat_map,json=urlInspectorSeatMap,proto3" json:"url_inspector_seat_map,omitempty"`
	UrlInspectorInstruction string `protobuf:"bytes,9,opt,name=url_inspector_instruction,json=urlInspectorInstruction,proto3" json:"url_inspector_instruction,omitempty"`
}

func (x *PartnershipURLs) Reset() {
	*x = PartnershipURLs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnership_backend_partnership_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartnershipURLs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnershipURLs) ProtoMessage() {}

func (x *PartnershipURLs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnership_backend_partnership_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnershipURLs.ProtoReflect.Descriptor instead.
func (*PartnershipURLs) Descriptor() ([]byte, []int) {
	return file_proto_partnership_backend_partnership_proto_rawDescGZIP(), []int{2}
}

func (x *PartnershipURLs) GetUrlContact() string {
	if x != nil {
		return x.UrlContact
	}
	return ""
}

func (x *PartnershipURLs) GetUrlInstruction() string {
	if x != nil {
		return x.UrlInstruction
	}
	return ""
}

func (x *PartnershipURLs) GetUrlTerm() string {
	if x != nil {
		return x.UrlTerm
	}
	return ""
}

func (x *PartnershipURLs) GetUrlPolicy() string {
	if x != nil {
		return x.UrlPolicy
	}
	return ""
}

func (x *PartnershipURLs) GetUrlSupport() string {
	if x != nil {
		return x.UrlSupport
	}
	return ""
}

func (x *PartnershipURLs) GetUrlSafetyForm() string {
	if x != nil {
		return x.UrlSafetyForm
	}
	return ""
}

func (x *PartnershipURLs) GetUrlRegulations() string {
	if x != nil {
		return x.UrlRegulations
	}
	return ""
}

func (x *PartnershipURLs) GetUrlInspectorSeatMap() string {
	if x != nil {
		return x.UrlInspectorSeatMap
	}
	return ""
}

func (x *PartnershipURLs) GetUrlInspectorInstruction() string {
	if x != nil {
		return x.UrlInspectorInstruction
	}
	return ""
}

type RetrievePartnershipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrievePartnershipReq) Reset() {
	*x = RetrievePartnershipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnership_backend_partnership_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePartnershipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePartnershipReq) ProtoMessage() {}

func (x *RetrievePartnershipReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnership_backend_partnership_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePartnershipReq.ProtoReflect.Descriptor instead.
func (*RetrievePartnershipReq) Descriptor() ([]byte, []int) {
	return file_proto_partnership_backend_partnership_proto_rawDescGZIP(), []int{3}
}

func (x *RetrievePartnershipReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPartnershipIdByCodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *GetPartnershipIdByCodesReq) Reset() {
	*x = GetPartnershipIdByCodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnership_backend_partnership_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnershipIdByCodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnershipIdByCodesReq) ProtoMessage() {}

func (x *GetPartnershipIdByCodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnership_backend_partnership_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnershipIdByCodesReq.ProtoReflect.Descriptor instead.
func (*GetPartnershipIdByCodesReq) Descriptor() ([]byte, []int) {
	return file_proto_partnership_backend_partnership_proto_rawDescGZIP(), []int{4}
}

func (x *GetPartnershipIdByCodesReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type RetrievePartnershipRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info      *PartnershipBasicInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	CreatedAt int64                 `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64                 `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy string                `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy string                `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *RetrievePartnershipRes) Reset() {
	*x = RetrievePartnershipRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnership_backend_partnership_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePartnershipRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePartnershipRes) ProtoMessage() {}

func (x *RetrievePartnershipRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnership_backend_partnership_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePartnershipRes.ProtoReflect.Descriptor instead.
func (*RetrievePartnershipRes) Descriptor() ([]byte, []int) {
	return file_proto_partnership_backend_partnership_proto_rawDescGZIP(), []int{5}
}

func (x *RetrievePartnershipRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RetrievePartnershipRes) GetInfo() *PartnershipBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RetrievePartnershipRes) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RetrievePartnershipRes) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *RetrievePartnershipRes) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *RetrievePartnershipRes) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type GetPartnershipIdByCodesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[string]string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetPartnershipIdByCodesRes) Reset() {
	*x = GetPartnershipIdByCodesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnership_backend_partnership_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnershipIdByCodesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnershipIdByCodesRes) ProtoMessage() {}

func (x *GetPartnershipIdByCodesRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnership_backend_partnership_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnershipIdByCodesRes.ProtoReflect.Descriptor instead.
func (*GetPartnershipIdByCodesRes) Descriptor() ([]byte, []int) {
	return file_proto_partnership_backend_partnership_proto_rawDescGZIP(), []int{6}
}

func (x *GetPartnershipIdByCodesRes) GetResult() map[string]string {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_proto_partnership_backend_partnership_proto protoreflect.FileDescriptor

var file_proto_partnership_backend_partnership_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x22, 0xd1, 0x04, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f,
	0x67, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6f, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x70, 0x70, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38,
	0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x55, 0x52,
	0x4c, 0x73, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x5f, 0x74, 0x76, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x54, 0x76, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x76,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x70, 0x70, 0x6c, 0x65, 0x54, 0x76, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x12, 0x74, 0x76, 0x5f, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x76, 0x49, 0x73,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x82, 0x02, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xf8, 0x02, 0x0a, 0x0f,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x55, 0x52, 0x4c, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x72, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x72, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x75, 0x72, 0x6c, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x72, 0x6c, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c,
	0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x72, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x72, 0x6c, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x61, 0x66, 0x65,
	0x74, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75,
	0x72, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x27, 0x0a, 0x0f,
	0x75, 0x72, 0x6c, 0x5f, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x72, 0x6c, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x75, 0x72, 0x6c, 0x5f, 0x69, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x72, 0x6c, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x3a, 0x0a, 0x19, 0x75, 0x72,
	0x6c, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x75,
	0x72, 0x6c, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x49, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xac, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x42,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64,
	0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x39,
	0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x82, 0x02, 0x0a, 0x12, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6f, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x2b, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x73, 0x12, 0x7b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x49, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x49, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x49, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x42, 0x13,
	0x5a, 0x11, 0x2e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x3b, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_partnership_backend_partnership_proto_rawDescOnce sync.Once
	file_proto_partnership_backend_partnership_proto_rawDescData = file_proto_partnership_backend_partnership_proto_rawDesc
)

func file_proto_partnership_backend_partnership_proto_rawDescGZIP() []byte {
	file_proto_partnership_backend_partnership_proto_rawDescOnce.Do(func() {
		file_proto_partnership_backend_partnership_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_partnership_backend_partnership_proto_rawDescData)
	})
	return file_proto_partnership_backend_partnership_proto_rawDescData
}

var file_proto_partnership_backend_partnership_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_partnership_backend_partnership_proto_goTypes = []interface{}{
	(*PartnershipBasicInfo)(nil),       // 0: partnership.backend.PartnershipBasicInfo
	(*PartnershipListInfo)(nil),        // 1: partnership.backend.PartnershipListInfo
	(*PartnershipURLs)(nil),            // 2: partnership.backend.PartnershipURLs
	(*RetrievePartnershipReq)(nil),     // 3: partnership.backend.RetrievePartnershipReq
	(*GetPartnershipIdByCodesReq)(nil), // 4: partnership.backend.GetPartnershipIdByCodesReq
	(*RetrievePartnershipRes)(nil),     // 5: partnership.backend.RetrievePartnershipRes
	(*GetPartnershipIdByCodesRes)(nil), // 6: partnership.backend.GetPartnershipIdByCodesRes
	nil,                                // 7: partnership.backend.GetPartnershipIdByCodesRes.ResultEntry
}
var file_proto_partnership_backend_partnership_proto_depIdxs = []int32{
	2, // 0: partnership.backend.PartnershipBasicInfo.urls:type_name -> partnership.backend.PartnershipURLs
	0, // 1: partnership.backend.RetrievePartnershipRes.info:type_name -> partnership.backend.PartnershipBasicInfo
	7, // 2: partnership.backend.GetPartnershipIdByCodesRes.result:type_name -> partnership.backend.GetPartnershipIdByCodesRes.ResultEntry
	3, // 3: partnership.backend.PartnershipService.RetrievePartnership:input_type -> partnership.backend.RetrievePartnershipReq
	4, // 4: partnership.backend.PartnershipService.GetPartnershipIdByCodes:input_type -> partnership.backend.GetPartnershipIdByCodesReq
	5, // 5: partnership.backend.PartnershipService.RetrievePartnership:output_type -> partnership.backend.RetrievePartnershipRes
	6, // 6: partnership.backend.PartnershipService.GetPartnershipIdByCodes:output_type -> partnership.backend.GetPartnershipIdByCodesRes
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_partnership_backend_partnership_proto_init() }
func file_proto_partnership_backend_partnership_proto_init() {
	if File_proto_partnership_backend_partnership_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_partnership_backend_partnership_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartnershipBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnership_backend_partnership_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartnershipListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnership_backend_partnership_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartnershipURLs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnership_backend_partnership_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePartnershipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnership_backend_partnership_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnershipIdByCodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnership_backend_partnership_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePartnershipRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnership_backend_partnership_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnershipIdByCodesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_partnership_backend_partnership_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_partnership_backend_partnership_proto_goTypes,
		DependencyIndexes: file_proto_partnership_backend_partnership_proto_depIdxs,
		MessageInfos:      file_proto_partnership_backend_partnership_proto_msgTypes,
	}.Build()
	File_proto_partnership_backend_partnership_proto = out.File
	file_proto_partnership_backend_partnership_proto_rawDesc = nil
	file_proto_partnership_backend_partnership_proto_goTypes = nil
	file_proto_partnership_backend_partnership_proto_depIdxs = nil
}
