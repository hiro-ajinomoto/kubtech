// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: media/web_partnership/playlist.proto

package web_partnership

import (
	media "gitlab.bcasia.io/thuynga/apps/api/gen/go/media"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaylistBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Intro         string   `protobuf:"bytes,2,opt,name=intro,proto3" json:"intro,omitempty"`
	IsPublic      bool     `protobuf:"varint,3,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsPremium     bool     `protobuf:"varint,4,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	Hashtags      []string `protobuf:"bytes,5,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	Medias        []string `protobuf:"bytes,6,rep,name=medias,proto3" json:"medias,omitempty"`
	ThumbnailUrl  string   `protobuf:"bytes,7,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	PartnershipId string   `protobuf:"bytes,8,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Slug          string   `protobuf:"bytes,9,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *PlaylistBasicInfo) Reset() {
	*x = PlaylistBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistBasicInfo) ProtoMessage() {}

func (x *PlaylistBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistBasicInfo.ProtoReflect.Descriptor instead.
func (*PlaylistBasicInfo) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{0}
}

func (x *PlaylistBasicInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlaylistBasicInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *PlaylistBasicInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *PlaylistBasicInfo) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *PlaylistBasicInfo) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *PlaylistBasicInfo) GetMedias() []string {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *PlaylistBasicInfo) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *PlaylistBasicInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *PlaylistBasicInfo) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type PlaylistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Intro         string   `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	ThumbnailUrl  string   `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	IsPublic      bool     `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsPremium     bool     `protobuf:"varint,6,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	Hashtags      []string `protobuf:"bytes,7,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	CreatedAt     int64    `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64    `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string   `protobuf:"bytes,10,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy     string   `protobuf:"bytes,11,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	PartnershipId string   `protobuf:"bytes,12,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Slug          string   `protobuf:"bytes,13,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *PlaylistInfo) Reset() {
	*x = PlaylistInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistInfo) ProtoMessage() {}

func (x *PlaylistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistInfo.ProtoReflect.Descriptor instead.
func (*PlaylistInfo) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{1}
}

func (x *PlaylistInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlaylistInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlaylistInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *PlaylistInfo) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *PlaylistInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *PlaylistInfo) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *PlaylistInfo) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *PlaylistInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PlaylistInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PlaylistInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *PlaylistInfo) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *PlaylistInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *PlaylistInfo) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type CreatePlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlaylistBasicInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreatePlaylistReq) Reset() {
	*x = CreatePlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistReq) ProtoMessage() {}

func (x *CreatePlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistReq.ProtoReflect.Descriptor instead.
func (*CreatePlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePlaylistReq) GetInfo() *PlaylistBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info *PlaylistBasicInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdatePlaylistReq) Reset() {
	*x = UpdatePlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaylistReq) ProtoMessage() {}

func (x *UpdatePlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaylistReq.ProtoReflect.Descriptor instead.
func (*UpdatePlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePlaylistReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePlaylistReq) GetInfo() *PlaylistBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeletePlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePlaylistReq) Reset() {
	*x = DeletePlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistReq) ProtoMessage() {}

func (x *DeletePlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistReq.ProtoReflect.Descriptor instead.
func (*DeletePlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePlaylistReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListPlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchText string               `protobuf:"bytes,1,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"`
	IsPublic   string               `protobuf:"bytes,2,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsPremium  string               `protobuf:"bytes,3,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	Pagination *PaginationReq       `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OrderBy    []*media.OrderByItem `protobuf:"bytes,5,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListPlaylistReq) Reset() {
	*x = ListPlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlaylistReq) ProtoMessage() {}

func (x *ListPlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlaylistReq.ProtoReflect.Descriptor instead.
func (*ListPlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{5}
}

func (x *ListPlaylistReq) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *ListPlaylistReq) GetIsPublic() string {
	if x != nil {
		return x.IsPublic
	}
	return ""
}

func (x *ListPlaylistReq) GetIsPremium() string {
	if x != nil {
		return x.IsPremium
	}
	return ""
}

func (x *ListPlaylistReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPlaylistReq) GetOrderBy() []*media.OrderByItem {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

type RetrievePlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrievePlaylistReq) Reset() {
	*x = RetrievePlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePlaylistReq) ProtoMessage() {}

func (x *RetrievePlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePlaylistReq.ProtoReflect.Descriptor instead.
func (*RetrievePlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{6}
}

func (x *RetrievePlaylistReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreatePlaylistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreatePlaylistRes) Reset() {
	*x = CreatePlaylistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistRes) ProtoMessage() {}

func (x *CreatePlaylistRes) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistRes.ProtoReflect.Descriptor instead.
func (*CreatePlaylistRes) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{7}
}

func (x *CreatePlaylistRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RetrievePlaylistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Intro        string       `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	ThumbnailUrl string       `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	IsPublic     bool         `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsPremium    bool         `protobuf:"varint,6,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	Hashtags     []string     `protobuf:"bytes,7,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	Medias       []*MediaInfo `protobuf:"bytes,8,rep,name=medias,proto3" json:"medias,omitempty"`
	CreatedAt    int64        `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    int64        `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy    string       `protobuf:"bytes,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy    string       `protobuf:"bytes,12,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *RetrievePlaylistRes) Reset() {
	*x = RetrievePlaylistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePlaylistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePlaylistRes) ProtoMessage() {}

func (x *RetrievePlaylistRes) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePlaylistRes.ProtoReflect.Descriptor instead.
func (*RetrievePlaylistRes) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{8}
}

func (x *RetrievePlaylistRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RetrievePlaylistRes) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RetrievePlaylistRes) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *RetrievePlaylistRes) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *RetrievePlaylistRes) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *RetrievePlaylistRes) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *RetrievePlaylistRes) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *RetrievePlaylistRes) GetMedias() []*MediaInfo {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *RetrievePlaylistRes) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RetrievePlaylistRes) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *RetrievePlaylistRes) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *RetrievePlaylistRes) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type ListPlaylistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*PlaylistInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListPlaylistRes) Reset() {
	*x = ListPlaylistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_partnership_playlist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlaylistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlaylistRes) ProtoMessage() {}

func (x *ListPlaylistRes) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_partnership_playlist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlaylistRes.ProtoReflect.Descriptor instead.
func (*ListPlaylistRes) Descriptor() ([]byte, []int) {
	return file_media_web_partnership_playlist_proto_rawDescGZIP(), []int{9}
}

func (x *ListPlaylistRes) GetInfo() []*PlaylistInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ListPlaylistRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_media_web_partnership_playlist_proto protoreflect.FileDescriptor

var file_media_web_partnership_playlist_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65,
	0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x1a, 0x16, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x77, 0x65, 0x62,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x77,
	0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x02, 0x0a, 0x11, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0xfe, 0x02, 0x0a,
	0x0c, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61,
	0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x51, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x3c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x61, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x25,
	0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x84, 0x03, 0x0a, 0x13, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x22, 0x90, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x44,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xd7, 0x03, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x48,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x28, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x6a, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77,
	0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x5e,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77,
	0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x42, 0x50,
	0x5a, 0x4e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x62, 0x63, 0x61, 0x73, 0x69, 0x61, 0x2e,
	0x69, 0x6f, 0x2f, 0x74, 0x68, 0x75, 0x79, 0x6e, 0x67, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2f, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x3b, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_media_web_partnership_playlist_proto_rawDescOnce sync.Once
	file_media_web_partnership_playlist_proto_rawDescData = file_media_web_partnership_playlist_proto_rawDesc
)

func file_media_web_partnership_playlist_proto_rawDescGZIP() []byte {
	file_media_web_partnership_playlist_proto_rawDescOnce.Do(func() {
		file_media_web_partnership_playlist_proto_rawDescData = protoimpl.X.CompressGZIP(file_media_web_partnership_playlist_proto_rawDescData)
	})
	return file_media_web_partnership_playlist_proto_rawDescData
}

var file_media_web_partnership_playlist_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_media_web_partnership_playlist_proto_goTypes = []interface{}{
	(*PlaylistBasicInfo)(nil),   // 0: media.web_partnership.PlaylistBasicInfo
	(*PlaylistInfo)(nil),        // 1: media.web_partnership.PlaylistInfo
	(*CreatePlaylistReq)(nil),   // 2: media.web_partnership.CreatePlaylistReq
	(*UpdatePlaylistReq)(nil),   // 3: media.web_partnership.UpdatePlaylistReq
	(*DeletePlaylistReq)(nil),   // 4: media.web_partnership.DeletePlaylistReq
	(*ListPlaylistReq)(nil),     // 5: media.web_partnership.ListPlaylistReq
	(*RetrievePlaylistReq)(nil), // 6: media.web_partnership.RetrievePlaylistReq
	(*CreatePlaylistRes)(nil),   // 7: media.web_partnership.CreatePlaylistRes
	(*RetrievePlaylistRes)(nil), // 8: media.web_partnership.RetrievePlaylistRes
	(*ListPlaylistRes)(nil),     // 9: media.web_partnership.ListPlaylistRes
	(*PaginationReq)(nil),       // 10: media.web_partnership.PaginationReq
	(*media.OrderByItem)(nil),   // 11: media.OrderByItem
	(*MediaInfo)(nil),           // 12: media.web_partnership.MediaInfo
	(*PaginationRes)(nil),       // 13: media.web_partnership.PaginationRes
	(*media.Empty)(nil),         // 14: media.Empty
}
var file_media_web_partnership_playlist_proto_depIdxs = []int32{
	0,  // 0: media.web_partnership.CreatePlaylistReq.info:type_name -> media.web_partnership.PlaylistBasicInfo
	0,  // 1: media.web_partnership.UpdatePlaylistReq.info:type_name -> media.web_partnership.PlaylistBasicInfo
	10, // 2: media.web_partnership.ListPlaylistReq.pagination:type_name -> media.web_partnership.PaginationReq
	11, // 3: media.web_partnership.ListPlaylistReq.order_by:type_name -> media.OrderByItem
	12, // 4: media.web_partnership.RetrievePlaylistRes.medias:type_name -> media.web_partnership.MediaInfo
	1,  // 5: media.web_partnership.ListPlaylistRes.info:type_name -> media.web_partnership.PlaylistInfo
	13, // 6: media.web_partnership.ListPlaylistRes.pagination:type_name -> media.web_partnership.PaginationRes
	2,  // 7: media.web_partnership.PlaylistService.CreatePlaylist:input_type -> media.web_partnership.CreatePlaylistReq
	3,  // 8: media.web_partnership.PlaylistService.UpdatePlaylist:input_type -> media.web_partnership.UpdatePlaylistReq
	4,  // 9: media.web_partnership.PlaylistService.DeletePlaylist:input_type -> media.web_partnership.DeletePlaylistReq
	6,  // 10: media.web_partnership.PlaylistService.RetrievePlaylist:input_type -> media.web_partnership.RetrievePlaylistReq
	5,  // 11: media.web_partnership.PlaylistService.ListPlaylist:input_type -> media.web_partnership.ListPlaylistReq
	7,  // 12: media.web_partnership.PlaylistService.CreatePlaylist:output_type -> media.web_partnership.CreatePlaylistRes
	14, // 13: media.web_partnership.PlaylistService.UpdatePlaylist:output_type -> media.Empty
	14, // 14: media.web_partnership.PlaylistService.DeletePlaylist:output_type -> media.Empty
	8,  // 15: media.web_partnership.PlaylistService.RetrievePlaylist:output_type -> media.web_partnership.RetrievePlaylistRes
	9,  // 16: media.web_partnership.PlaylistService.ListPlaylist:output_type -> media.web_partnership.ListPlaylistRes
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_media_web_partnership_playlist_proto_init() }
func file_media_web_partnership_playlist_proto_init() {
	if File_media_web_partnership_playlist_proto != nil {
		return
	}
	file_media_web_partnership_base_proto_init()
	file_media_web_partnership_media_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_media_web_partnership_playlist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePlaylistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_partnership_playlist_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlaylistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_media_web_partnership_playlist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_web_partnership_playlist_proto_goTypes,
		DependencyIndexes: file_media_web_partnership_playlist_proto_depIdxs,
		MessageInfos:      file_media_web_partnership_playlist_proto_msgTypes,
	}.Build()
	File_media_web_partnership_playlist_proto = out.File
	file_media_web_partnership_playlist_proto_rawDesc = nil
	file_media_web_partnership_playlist_proto_goTypes = nil
	file_media_web_partnership_playlist_proto_depIdxs = nil
}
