// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: media/mobile/playlist.proto

package mobile

import (
	media "gitlab.bcasia.io/thuynga/apps/api/gen/go/media"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaylistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Intro        string   `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	ThumbnailUrl string   `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	IsPublic     bool     `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsPremium    bool     `protobuf:"varint,6,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	Hashtags     []string `protobuf:"bytes,7,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
}

func (x *PlaylistInfo) Reset() {
	*x = PlaylistInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistInfo) ProtoMessage() {}

func (x *PlaylistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistInfo.ProtoReflect.Descriptor instead.
func (*PlaylistInfo) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{0}
}

func (x *PlaylistInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlaylistInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlaylistInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *PlaylistInfo) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *PlaylistInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *PlaylistInfo) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *PlaylistInfo) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

type PublicMixInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type         string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ThumbnailUrl string `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	IsPremium    bool   `protobuf:"varint,5,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
}

func (x *PublicMixInfo) Reset() {
	*x = PublicMixInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicMixInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicMixInfo) ProtoMessage() {}

func (x *PublicMixInfo) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicMixInfo.ProtoReflect.Descriptor instead.
func (*PublicMixInfo) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{1}
}

func (x *PublicMixInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PublicMixInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PublicMixInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PublicMixInfo) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *PublicMixInfo) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

type HomepagePlaylistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Intro        string             `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	ThumbnailUrl string             `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	IsPublic     bool               `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsPremium    bool               `protobuf:"varint,6,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	Hashtags     []string           `protobuf:"bytes,7,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	Medias       []*PublicMediaInfo `protobuf:"bytes,8,rep,name=medias,proto3" json:"medias,omitempty"`
}

func (x *HomepagePlaylistInfo) Reset() {
	*x = HomepagePlaylistInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomepagePlaylistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomepagePlaylistInfo) ProtoMessage() {}

func (x *HomepagePlaylistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomepagePlaylistInfo.ProtoReflect.Descriptor instead.
func (*HomepagePlaylistInfo) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{2}
}

func (x *HomepagePlaylistInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HomepagePlaylistInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HomepagePlaylistInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *HomepagePlaylistInfo) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *HomepagePlaylistInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *HomepagePlaylistInfo) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *HomepagePlaylistInfo) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *HomepagePlaylistInfo) GetMedias() []*PublicMediaInfo {
	if x != nil {
		return x.Medias
	}
	return nil
}

type PublicRetrievePlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartnershipId string `protobuf:"bytes,2,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
}

func (x *PublicRetrievePlaylistReq) Reset() {
	*x = PublicRetrievePlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicRetrievePlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicRetrievePlaylistReq) ProtoMessage() {}

func (x *PublicRetrievePlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicRetrievePlaylistReq.ProtoReflect.Descriptor instead.
func (*PublicRetrievePlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{3}
}

func (x *PublicRetrievePlaylistReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PublicRetrievePlaylistReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

type PublicHomepagePlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
}

func (x *PublicHomepagePlaylistReq) Reset() {
	*x = PublicHomepagePlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicHomepagePlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicHomepagePlaylistReq) ProtoMessage() {}

func (x *PublicHomepagePlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicHomepagePlaylistReq.ProtoReflect.Descriptor instead.
func (*PublicHomepagePlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{4}
}

func (x *PublicHomepagePlaylistReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

type PublicListPlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string               `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	SearchText    string               `protobuf:"bytes,2,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"`
	Pagination    *PaginationReq       `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OrderBy       []*media.OrderByItem `protobuf:"bytes,4,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Hashtag       string               `protobuf:"bytes,5,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
}

func (x *PublicListPlaylistReq) Reset() {
	*x = PublicListPlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicListPlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicListPlaylistReq) ProtoMessage() {}

func (x *PublicListPlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicListPlaylistReq.ProtoReflect.Descriptor instead.
func (*PublicListPlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{5}
}

func (x *PublicListPlaylistReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *PublicListPlaylistReq) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *PublicListPlaylistReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *PublicListPlaylistReq) GetOrderBy() []*media.OrderByItem {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *PublicListPlaylistReq) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

type PublicSearchMixReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string               `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	SearchText    string               `protobuf:"bytes,2,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"`
	Pagination    *PaginationReq       `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OrderBy       []*media.OrderByItem `protobuf:"bytes,4,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Hashtag       string               `protobuf:"bytes,5,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
}

func (x *PublicSearchMixReq) Reset() {
	*x = PublicSearchMixReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicSearchMixReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicSearchMixReq) ProtoMessage() {}

func (x *PublicSearchMixReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicSearchMixReq.ProtoReflect.Descriptor instead.
func (*PublicSearchMixReq) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{6}
}

func (x *PublicSearchMixReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *PublicSearchMixReq) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *PublicSearchMixReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *PublicSearchMixReq) GetOrderBy() []*media.OrderByItem {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *PublicSearchMixReq) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

type PublicListMediaByPlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId    string         `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	PartnershipId string         `protobuf:"bytes,2,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Pagination    *PaginationReq `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PublicListMediaByPlaylistReq) Reset() {
	*x = PublicListMediaByPlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicListMediaByPlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicListMediaByPlaylistReq) ProtoMessage() {}

func (x *PublicListMediaByPlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicListMediaByPlaylistReq.ProtoReflect.Descriptor instead.
func (*PublicListMediaByPlaylistReq) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{7}
}

func (x *PublicListMediaByPlaylistReq) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *PublicListMediaByPlaylistReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *PublicListMediaByPlaylistReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PublicListPlaylistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*PlaylistInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PublicListPlaylistRes) Reset() {
	*x = PublicListPlaylistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicListPlaylistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicListPlaylistRes) ProtoMessage() {}

func (x *PublicListPlaylistRes) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicListPlaylistRes.ProtoReflect.Descriptor instead.
func (*PublicListPlaylistRes) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{8}
}

func (x *PublicListPlaylistRes) GetInfo() []*PlaylistInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PublicListPlaylistRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PublicListMediaByPlaylistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*PublicMediaInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes     `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PublicListMediaByPlaylistRes) Reset() {
	*x = PublicListMediaByPlaylistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicListMediaByPlaylistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicListMediaByPlaylistRes) ProtoMessage() {}

func (x *PublicListMediaByPlaylistRes) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicListMediaByPlaylistRes.ProtoReflect.Descriptor instead.
func (*PublicListMediaByPlaylistRes) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{9}
}

func (x *PublicListMediaByPlaylistRes) GetInfo() []*PublicMediaInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PublicListMediaByPlaylistRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PublicSearchMixRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*PublicMixInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PublicSearchMixRes) Reset() {
	*x = PublicSearchMixRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicSearchMixRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicSearchMixRes) ProtoMessage() {}

func (x *PublicSearchMixRes) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicSearchMixRes.ProtoReflect.Descriptor instead.
func (*PublicSearchMixRes) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{10}
}

func (x *PublicSearchMixRes) GetInfo() []*PublicMixInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PublicSearchMixRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PublicHomepagePlaylistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playlists []*HomepagePlaylistInfo `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
}

func (x *PublicHomepagePlaylistRes) Reset() {
	*x = PublicHomepagePlaylistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicHomepagePlaylistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicHomepagePlaylistRes) ProtoMessage() {}

func (x *PublicHomepagePlaylistRes) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicHomepagePlaylistRes.ProtoReflect.Descriptor instead.
func (*PublicHomepagePlaylistRes) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{11}
}

func (x *PublicHomepagePlaylistRes) GetPlaylists() []*HomepagePlaylistInfo {
	if x != nil {
		return x.Playlists
	}
	return nil
}

type PublicRetrievePlaylistRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Intro        string             `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	ThumbnailUrl string             `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	IsPublic     bool               `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsPremium    bool               `protobuf:"varint,6,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	Hashtags     []string           `protobuf:"bytes,7,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	Medias       []*PublicMediaInfo `protobuf:"bytes,8,rep,name=medias,proto3" json:"medias,omitempty"`
}

func (x *PublicRetrievePlaylistRes) Reset() {
	*x = PublicRetrievePlaylistRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_mobile_playlist_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicRetrievePlaylistRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicRetrievePlaylistRes) ProtoMessage() {}

func (x *PublicRetrievePlaylistRes) ProtoReflect() protoreflect.Message {
	mi := &file_media_mobile_playlist_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicRetrievePlaylistRes.ProtoReflect.Descriptor instead.
func (*PublicRetrievePlaylistRes) Descriptor() ([]byte, []int) {
	return file_media_mobile_playlist_proto_rawDescGZIP(), []int{12}
}

func (x *PublicRetrievePlaylistRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PublicRetrievePlaylistRes) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PublicRetrievePlaylistRes) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *PublicRetrievePlaylistRes) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *PublicRetrievePlaylistRes) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *PublicRetrievePlaylistRes) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *PublicRetrievePlaylistRes) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *PublicRetrievePlaylistRes) GetMedias() []*PublicMediaInfo {
	if x != nil {
		return x.Medias
	}
	return nil
}

var File_media_mobile_playlist_proto protoreflect.FileDescriptor

var file_media_mobile_playlist_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x70,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x1a, 0x16, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x6d,
	0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x69, 0x78, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
	0x22, 0x86, 0x02, 0x0a, 0x14, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x22, 0x52, 0x0a, 0x19, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x22, 0x42, 0x0a,
	0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49,
	0x64, 0x22, 0xe5, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x22, 0xe2, 0x01, 0x0a, 0x12, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x69, 0x78, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x22, 0xa3,
	0x01, 0x0a, 0x1c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3b,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x1c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42,
	0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a,
	0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x69, 0x78,
	0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x69, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x5d, 0x0a, 0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x70,
	0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x40,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x22, 0x8b, 0x02, 0x0a, 0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x32, 0x8d,
	0x04, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6a, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x5e,
	0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x73,
	0x0a, 0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x69, 0x78, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4d, 0x69, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x69, 0x78, 0x52, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x0e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x70,
	0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x42, 0x3e,
	0x5a, 0x3c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x62, 0x63, 0x61, 0x73, 0x69, 0x61, 0x2e,
	0x69, 0x6f, 0x2f, 0x74, 0x68, 0x75, 0x79, 0x6e, 0x67, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x3b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_media_mobile_playlist_proto_rawDescOnce sync.Once
	file_media_mobile_playlist_proto_rawDescData = file_media_mobile_playlist_proto_rawDesc
)

func file_media_mobile_playlist_proto_rawDescGZIP() []byte {
	file_media_mobile_playlist_proto_rawDescOnce.Do(func() {
		file_media_mobile_playlist_proto_rawDescData = protoimpl.X.CompressGZIP(file_media_mobile_playlist_proto_rawDescData)
	})
	return file_media_mobile_playlist_proto_rawDescData
}

var file_media_mobile_playlist_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_media_mobile_playlist_proto_goTypes = []interface{}{
	(*PlaylistInfo)(nil),                 // 0: media.mobile.PlaylistInfo
	(*PublicMixInfo)(nil),                // 1: media.mobile.PublicMixInfo
	(*HomepagePlaylistInfo)(nil),         // 2: media.mobile.HomepagePlaylistInfo
	(*PublicRetrievePlaylistReq)(nil),    // 3: media.mobile.PublicRetrievePlaylistReq
	(*PublicHomepagePlaylistReq)(nil),    // 4: media.mobile.PublicHomepagePlaylistReq
	(*PublicListPlaylistReq)(nil),        // 5: media.mobile.PublicListPlaylistReq
	(*PublicSearchMixReq)(nil),           // 6: media.mobile.PublicSearchMixReq
	(*PublicListMediaByPlaylistReq)(nil), // 7: media.mobile.PublicListMediaByPlaylistReq
	(*PublicListPlaylistRes)(nil),        // 8: media.mobile.PublicListPlaylistRes
	(*PublicListMediaByPlaylistRes)(nil), // 9: media.mobile.PublicListMediaByPlaylistRes
	(*PublicSearchMixRes)(nil),           // 10: media.mobile.PublicSearchMixRes
	(*PublicHomepagePlaylistRes)(nil),    // 11: media.mobile.PublicHomepagePlaylistRes
	(*PublicRetrievePlaylistRes)(nil),    // 12: media.mobile.PublicRetrievePlaylistRes
	(*PublicMediaInfo)(nil),              // 13: media.mobile.PublicMediaInfo
	(*PaginationReq)(nil),                // 14: media.mobile.PaginationReq
	(*media.OrderByItem)(nil),            // 15: media.OrderByItem
	(*PaginationRes)(nil),                // 16: media.mobile.PaginationRes
}
var file_media_mobile_playlist_proto_depIdxs = []int32{
	13, // 0: media.mobile.HomepagePlaylistInfo.medias:type_name -> media.mobile.PublicMediaInfo
	14, // 1: media.mobile.PublicListPlaylistReq.pagination:type_name -> media.mobile.PaginationReq
	15, // 2: media.mobile.PublicListPlaylistReq.order_by:type_name -> media.OrderByItem
	14, // 3: media.mobile.PublicSearchMixReq.pagination:type_name -> media.mobile.PaginationReq
	15, // 4: media.mobile.PublicSearchMixReq.order_by:type_name -> media.OrderByItem
	14, // 5: media.mobile.PublicListMediaByPlaylistReq.pagination:type_name -> media.mobile.PaginationReq
	0,  // 6: media.mobile.PublicListPlaylistRes.info:type_name -> media.mobile.PlaylistInfo
	16, // 7: media.mobile.PublicListPlaylistRes.pagination:type_name -> media.mobile.PaginationRes
	13, // 8: media.mobile.PublicListMediaByPlaylistRes.info:type_name -> media.mobile.PublicMediaInfo
	16, // 9: media.mobile.PublicListMediaByPlaylistRes.pagination:type_name -> media.mobile.PaginationRes
	1,  // 10: media.mobile.PublicSearchMixRes.info:type_name -> media.mobile.PublicMixInfo
	16, // 11: media.mobile.PublicSearchMixRes.pagination:type_name -> media.mobile.PaginationRes
	2,  // 12: media.mobile.PublicHomepagePlaylistRes.playlists:type_name -> media.mobile.HomepagePlaylistInfo
	13, // 13: media.mobile.PublicRetrievePlaylistRes.medias:type_name -> media.mobile.PublicMediaInfo
	3,  // 14: media.mobile.PlaylistService.PublicRetrievePlaylist:input_type -> media.mobile.PublicRetrievePlaylistReq
	5,  // 15: media.mobile.PlaylistService.PublicListPlaylist:input_type -> media.mobile.PublicListPlaylistReq
	7,  // 16: media.mobile.PlaylistService.PublicListMediaByPlaylist:input_type -> media.mobile.PublicListMediaByPlaylistReq
	6,  // 17: media.mobile.PlaylistService.PublicSearchMix:input_type -> media.mobile.PublicSearchMixReq
	4,  // 18: media.mobile.PlaylistService.PublicHomepage:input_type -> media.mobile.PublicHomepagePlaylistReq
	12, // 19: media.mobile.PlaylistService.PublicRetrievePlaylist:output_type -> media.mobile.PublicRetrievePlaylistRes
	8,  // 20: media.mobile.PlaylistService.PublicListPlaylist:output_type -> media.mobile.PublicListPlaylistRes
	9,  // 21: media.mobile.PlaylistService.PublicListMediaByPlaylist:output_type -> media.mobile.PublicListMediaByPlaylistRes
	10, // 22: media.mobile.PlaylistService.PublicSearchMix:output_type -> media.mobile.PublicSearchMixRes
	11, // 23: media.mobile.PlaylistService.PublicHomepage:output_type -> media.mobile.PublicHomepagePlaylistRes
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_media_mobile_playlist_proto_init() }
func file_media_mobile_playlist_proto_init() {
	if File_media_mobile_playlist_proto != nil {
		return
	}
	file_media_mobile_base_proto_init()
	file_media_mobile_media_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_media_mobile_playlist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicMixInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomepagePlaylistInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicRetrievePlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicHomepagePlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicListPlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicSearchMixReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicListMediaByPlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicListPlaylistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicListMediaByPlaylistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicSearchMixRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicHomepagePlaylistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_mobile_playlist_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicRetrievePlaylistRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_media_mobile_playlist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_mobile_playlist_proto_goTypes,
		DependencyIndexes: file_media_mobile_playlist_proto_depIdxs,
		MessageInfos:      file_media_mobile_playlist_proto_msgTypes,
	}.Build()
	File_media_mobile_playlist_proto = out.File
	file_media_mobile_playlist_proto_rawDesc = nil
	file_media_mobile_playlist_proto_goTypes = nil
	file_media_mobile_playlist_proto_depIdxs = nil
}
