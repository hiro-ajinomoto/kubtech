// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: proto/search/mobile/event.proto

package mobile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchEventStatus int32

const (
	SearchEventStatus_EVENT_FILTER_STATUS_INVALID           SearchEventStatus = 0
	SearchEventStatus_EVENT_FILTER_STATUS_HOT               SearchEventStatus = 1
	SearchEventStatus_EVENT_FILTER_STATUS_PUBLISHED         SearchEventStatus = 2
	SearchEventStatus_EVENT_FILTER_STATUS_UNPUBLISHED       SearchEventStatus = 3
	SearchEventStatus_EVENT_FILTER_STATUS_GOING_ON          SearchEventStatus = 4
	SearchEventStatus_EVENT_FILTER_STATUS_UPCOMING          SearchEventStatus = 5
	SearchEventStatus_EVENT_FILTER_STATUS_SOLD_OUT          SearchEventStatus = 6
	SearchEventStatus_EVENT_FILTER_STATUS_ENDED             SearchEventStatus = 7
	SearchEventStatus_EVENT_FILTER_STATUS_ON_SALE           SearchEventStatus = 8  // đang mở bán
	SearchEventStatus_EVENT_FILTER_STATUS_SALE_COMMING_SOON SearchEventStatus = 9  // sắp mở bán
	SearchEventStatus_EVENT_FILTER_STATUS_STOP_SALE         SearchEventStatus = 10 // hết bán
)

// Enum value maps for SearchEventStatus.
var (
	SearchEventStatus_name = map[int32]string{
		0:  "EVENT_FILTER_STATUS_INVALID",
		1:  "EVENT_FILTER_STATUS_HOT",
		2:  "EVENT_FILTER_STATUS_PUBLISHED",
		3:  "EVENT_FILTER_STATUS_UNPUBLISHED",
		4:  "EVENT_FILTER_STATUS_GOING_ON",
		5:  "EVENT_FILTER_STATUS_UPCOMING",
		6:  "EVENT_FILTER_STATUS_SOLD_OUT",
		7:  "EVENT_FILTER_STATUS_ENDED",
		8:  "EVENT_FILTER_STATUS_ON_SALE",
		9:  "EVENT_FILTER_STATUS_SALE_COMMING_SOON",
		10: "EVENT_FILTER_STATUS_STOP_SALE",
	}
	SearchEventStatus_value = map[string]int32{
		"EVENT_FILTER_STATUS_INVALID":           0,
		"EVENT_FILTER_STATUS_HOT":               1,
		"EVENT_FILTER_STATUS_PUBLISHED":         2,
		"EVENT_FILTER_STATUS_UNPUBLISHED":       3,
		"EVENT_FILTER_STATUS_GOING_ON":          4,
		"EVENT_FILTER_STATUS_UPCOMING":          5,
		"EVENT_FILTER_STATUS_SOLD_OUT":          6,
		"EVENT_FILTER_STATUS_ENDED":             7,
		"EVENT_FILTER_STATUS_ON_SALE":           8,
		"EVENT_FILTER_STATUS_SALE_COMMING_SOON": 9,
		"EVENT_FILTER_STATUS_STOP_SALE":         10,
	}
)

func (x SearchEventStatus) Enum() *SearchEventStatus {
	p := new(SearchEventStatus)
	*p = x
	return p
}

func (x SearchEventStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchEventStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_search_mobile_event_proto_enumTypes[0].Descriptor()
}

func (SearchEventStatus) Type() protoreflect.EnumType {
	return &file_proto_search_mobile_event_proto_enumTypes[0]
}

func (x SearchEventStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchEventStatus.Descriptor instead.
func (SearchEventStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{0}
}

type EventDetailPageDisplayStatus int32

const (
	EventDetailPageDisplayStatus_EVENT_DETAIL_DISPLAY_STATUS_INVALID           EventDetailPageDisplayStatus = 0
	EventDetailPageDisplayStatus_EVENT_DETAIL_DISPLAY_STATUS_BOOKING_GOING_ON  EventDetailPageDisplayStatus = 1 // sắp mở bán (ignore các status khác)
	EventDetailPageDisplayStatus_EVENT_DETAIL_DISPLAY_STATUS_BOOKING_AVAILABLE EventDetailPageDisplayStatus = 2 // đang mở bán except hot
	EventDetailPageDisplayStatus_EVENT_FILTER_DISPLAY_STATUS_HOT               EventDetailPageDisplayStatus = 3 // đang mở bán + hot = hot
	EventDetailPageDisplayStatus_EVENT_FILTER_DISPLAY_STATUS_GOING_ON          EventDetailPageDisplayStatus = 4 // đã ngừng bán + sắp diễn ra -> sắp diễn ra
	EventDetailPageDisplayStatus_EVENT_FILTER_DISPLAY_STATUS_LIVE              EventDetailPageDisplayStatus = 5 // đã ngừng bán + đang diễn ra -> đang diễn ra
	EventDetailPageDisplayStatus_EVENT_FILTER_DISPLAY_STATUS_SOLD_OUT          EventDetailPageDisplayStatus = 6 // hết vé (except kết thúc)
	EventDetailPageDisplayStatus_EVENT_FILTER_DISPLAY_STATUS_ENDED             EventDetailPageDisplayStatus = 7 // kết thúc (ignore các status khác)
)

// Enum value maps for EventDetailPageDisplayStatus.
var (
	EventDetailPageDisplayStatus_name = map[int32]string{
		0: "EVENT_DETAIL_DISPLAY_STATUS_INVALID",
		1: "EVENT_DETAIL_DISPLAY_STATUS_BOOKING_GOING_ON",
		2: "EVENT_DETAIL_DISPLAY_STATUS_BOOKING_AVAILABLE",
		3: "EVENT_FILTER_DISPLAY_STATUS_HOT",
		4: "EVENT_FILTER_DISPLAY_STATUS_GOING_ON",
		5: "EVENT_FILTER_DISPLAY_STATUS_LIVE",
		6: "EVENT_FILTER_DISPLAY_STATUS_SOLD_OUT",
		7: "EVENT_FILTER_DISPLAY_STATUS_ENDED",
	}
	EventDetailPageDisplayStatus_value = map[string]int32{
		"EVENT_DETAIL_DISPLAY_STATUS_INVALID":           0,
		"EVENT_DETAIL_DISPLAY_STATUS_BOOKING_GOING_ON":  1,
		"EVENT_DETAIL_DISPLAY_STATUS_BOOKING_AVAILABLE": 2,
		"EVENT_FILTER_DISPLAY_STATUS_HOT":               3,
		"EVENT_FILTER_DISPLAY_STATUS_GOING_ON":          4,
		"EVENT_FILTER_DISPLAY_STATUS_LIVE":              5,
		"EVENT_FILTER_DISPLAY_STATUS_SOLD_OUT":          6,
		"EVENT_FILTER_DISPLAY_STATUS_ENDED":             7,
	}
)

func (x EventDetailPageDisplayStatus) Enum() *EventDetailPageDisplayStatus {
	p := new(EventDetailPageDisplayStatus)
	*p = x
	return p
}

func (x EventDetailPageDisplayStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventDetailPageDisplayStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_search_mobile_event_proto_enumTypes[1].Descriptor()
}

func (EventDetailPageDisplayStatus) Type() protoreflect.EnumType {
	return &file_proto_search_mobile_event_proto_enumTypes[1]
}

func (x EventDetailPageDisplayStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventDetailPageDisplayStatus.Descriptor instead.
func (EventDetailPageDisplayStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{1}
}

type EventDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId         string                       `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Name            string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status          EventDetailPageDisplayStatus `protobuf:"varint,3,opt,name=status,proto3,enum=search.mobile.EventDetailPageDisplayStatus" json:"status,omitempty"`
	Medias          []*Media                     `protobuf:"bytes,4,rep,name=medias,proto3" json:"medias,omitempty"`
	Programs        []*Media                     `protobuf:"bytes,5,rep,name=programs,proto3" json:"programs,omitempty"`
	Artists         []*EventArtistInfo           `protobuf:"bytes,6,rep,name=artists,proto3" json:"artists,omitempty"`
	Description     string                       `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Schedules       []*EventScheduleInfo         `protobuf:"bytes,8,rep,name=schedules,proto3" json:"schedules,omitempty"`
	Duration        int64                        `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	NumberOfTickets int64                        `protobuf:"varint,10,opt,name=number_of_tickets,json=numberOfTickets,proto3" json:"number_of_tickets,omitempty"`
	MinTicketPrice  float64                      `protobuf:"fixed64,11,opt,name=min_ticket_price,json=minTicketPrice,proto3" json:"min_ticket_price,omitempty"`
	MaxTicketPrice  float64                      `protobuf:"fixed64,12,opt,name=max_ticket_price,json=maxTicketPrice,proto3" json:"max_ticket_price,omitempty"`
	Currency        *EventCurrencyInfo           `protobuf:"bytes,13,opt,name=currency,proto3" json:"currency,omitempty"`
	HashTags        []string                     `protobuf:"bytes,14,rep,name=hash_tags,json=hashTags,proto3" json:"hash_tags,omitempty"`
	CreatedAt       int64                        `protobuf:"varint,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       int64                        `protobuf:"varint,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy       string                       `protobuf:"bytes,17,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy       string                       `protobuf:"bytes,18,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *EventDetailInfo) Reset() {
	*x = EventDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDetailInfo) ProtoMessage() {}

func (x *EventDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDetailInfo.ProtoReflect.Descriptor instead.
func (*EventDetailInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventDetailInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventDetailInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventDetailInfo) GetStatus() EventDetailPageDisplayStatus {
	if x != nil {
		return x.Status
	}
	return EventDetailPageDisplayStatus_EVENT_DETAIL_DISPLAY_STATUS_INVALID
}

func (x *EventDetailInfo) GetMedias() []*Media {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *EventDetailInfo) GetPrograms() []*Media {
	if x != nil {
		return x.Programs
	}
	return nil
}

func (x *EventDetailInfo) GetArtists() []*EventArtistInfo {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *EventDetailInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventDetailInfo) GetSchedules() []*EventScheduleInfo {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *EventDetailInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *EventDetailInfo) GetNumberOfTickets() int64 {
	if x != nil {
		return x.NumberOfTickets
	}
	return 0
}

func (x *EventDetailInfo) GetMinTicketPrice() float64 {
	if x != nil {
		return x.MinTicketPrice
	}
	return 0
}

func (x *EventDetailInfo) GetMaxTicketPrice() float64 {
	if x != nil {
		return x.MaxTicketPrice
	}
	return 0
}

func (x *EventDetailInfo) GetCurrency() *EventCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *EventDetailInfo) GetHashTags() []string {
	if x != nil {
		return x.HashTags
	}
	return nil
}

func (x *EventDetailInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *EventDetailInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *EventDetailInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *EventDetailInfo) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type EventCurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *EventCurrencyInfo) Reset() {
	*x = EventCurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCurrencyInfo) ProtoMessage() {}

func (x *EventCurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCurrencyInfo.ProtoReflect.Descriptor instead.
func (*EventCurrencyInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventCurrencyInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventCurrencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventCurrencyInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EventCurrencyInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type EventSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EsId              string             `protobuf:"bytes,1,opt,name=es_id,json=esId,proto3" json:"es_id,omitempty"`
	EventId           string             `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	PartnershipId     string             `protobuf:"bytes,3,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Name              string             `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Medias            []*Media           `protobuf:"bytes,5,rep,name=medias,proto3" json:"medias,omitempty"`
	HightlightDateStr string             `protobuf:"bytes,6,opt,name=hightlight_date_str,json=hightlightDateStr,proto3" json:"hightlight_date_str,omitempty"`
	HightlightAddress string             `protobuf:"bytes,7,opt,name=hightlight_address,json=hightlightAddress,proto3" json:"hightlight_address,omitempty"`
	Currency          *EventCurrencyInfo `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	PrefixSecretCode  string             `protobuf:"bytes,9,opt,name=prefix_secret_code,json=prefixSecretCode,proto3" json:"prefix_secret_code,omitempty"`
	NumberOfTickets   int64              `protobuf:"varint,10,opt,name=number_of_tickets,json=numberOfTickets,proto3" json:"number_of_tickets,omitempty"`
}

func (x *EventSimpleInfo) Reset() {
	*x = EventSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimpleInfo) ProtoMessage() {}

func (x *EventSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimpleInfo.ProtoReflect.Descriptor instead.
func (*EventSimpleInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventSimpleInfo) GetEsId() string {
	if x != nil {
		return x.EsId
	}
	return ""
}

func (x *EventSimpleInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventSimpleInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *EventSimpleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSimpleInfo) GetMedias() []*Media {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *EventSimpleInfo) GetHightlightDateStr() string {
	if x != nil {
		return x.HightlightDateStr
	}
	return ""
}

func (x *EventSimpleInfo) GetHightlightAddress() string {
	if x != nil {
		return x.HightlightAddress
	}
	return ""
}

func (x *EventSimpleInfo) GetCurrency() *EventCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *EventSimpleInfo) GetPrefixSecretCode() string {
	if x != nil {
		return x.PrefixSecretCode
	}
	return ""
}

func (x *EventSimpleInfo) GetNumberOfTickets() int64 {
	if x != nil {
		return x.NumberOfTickets
	}
	return 0
}

type EventListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EsId                string               `protobuf:"bytes,1,opt,name=es_id,json=esId,proto3" json:"es_id,omitempty"`
	EventId             string               `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	PartnershipId       string               `protobuf:"bytes,3,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Name                string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Medias              []*Media             `protobuf:"bytes,5,rep,name=medias,proto3" json:"medias,omitempty"`
	MinDateStart        int64                `protobuf:"varint,6,opt,name=min_date_start,json=minDateStart,proto3" json:"min_date_start,omitempty"`
	MaxDateEnd          int64                `protobuf:"varint,7,opt,name=max_date_end,json=maxDateEnd,proto3" json:"max_date_end,omitempty"`
	MinBookingDateStart int64                `protobuf:"varint,8,opt,name=min_booking_date_start,json=minBookingDateStart,proto3" json:"min_booking_date_start,omitempty"`
	MaxBookingDateEnd   int64                `protobuf:"varint,9,opt,name=max_booking_date_end,json=maxBookingDateEnd,proto3" json:"max_booking_date_end,omitempty"`
	IsHot               bool                 `protobuf:"varint,10,opt,name=is_hot,json=isHot,proto3" json:"is_hot"`
	HightlightDateStr   string               `protobuf:"bytes,11,opt,name=hightlight_date_str,json=hightlightDateStr,proto3" json:"hightlight_date_str,omitempty"`
	HightlightAddress   string               `protobuf:"bytes,12,opt,name=hightlight_address,json=hightlightAddress,proto3" json:"hightlight_address,omitempty"`
	IsSoldOut           bool                 `protobuf:"varint,13,opt,name=is_sold_out,json=isSoldOut,proto3" json:"is_sold_out"`
	IsPublic            bool                 `protobuf:"varint,14,opt,name=is_public,json=isPublic,proto3" json:"is_public"`
	MinTicketPrice      float64              `protobuf:"fixed64,15,opt,name=min_ticket_price,json=minTicketPrice,proto3" json:"min_ticket_price,omitempty"`
	Currency            *EventCurrencyInfo   `protobuf:"bytes,16,opt,name=currency,proto3" json:"currency,omitempty"`
	IsBookingAvailable  bool                 `protobuf:"varint,17,opt,name=is_booking_available,json=isBookingAvailable,proto3" json:"is_booking_available"`
	Schedules           []*EventScheduleInfo `protobuf:"bytes,18,rep,name=schedules,proto3" json:"schedules,omitempty"`
	HashTags            []string             `protobuf:"bytes,19,rep,name=hash_tags,json=hashTags,proto3" json:"hash_tags,omitempty"`
}

func (x *EventListInfo) Reset() {
	*x = EventListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventListInfo) ProtoMessage() {}

func (x *EventListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventListInfo.ProtoReflect.Descriptor instead.
func (*EventListInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{3}
}

func (x *EventListInfo) GetEsId() string {
	if x != nil {
		return x.EsId
	}
	return ""
}

func (x *EventListInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventListInfo) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *EventListInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventListInfo) GetMedias() []*Media {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *EventListInfo) GetMinDateStart() int64 {
	if x != nil {
		return x.MinDateStart
	}
	return 0
}

func (x *EventListInfo) GetMaxDateEnd() int64 {
	if x != nil {
		return x.MaxDateEnd
	}
	return 0
}

func (x *EventListInfo) GetMinBookingDateStart() int64 {
	if x != nil {
		return x.MinBookingDateStart
	}
	return 0
}

func (x *EventListInfo) GetMaxBookingDateEnd() int64 {
	if x != nil {
		return x.MaxBookingDateEnd
	}
	return 0
}

func (x *EventListInfo) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *EventListInfo) GetHightlightDateStr() string {
	if x != nil {
		return x.HightlightDateStr
	}
	return ""
}

func (x *EventListInfo) GetHightlightAddress() string {
	if x != nil {
		return x.HightlightAddress
	}
	return ""
}

func (x *EventListInfo) GetIsSoldOut() bool {
	if x != nil {
		return x.IsSoldOut
	}
	return false
}

func (x *EventListInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *EventListInfo) GetMinTicketPrice() float64 {
	if x != nil {
		return x.MinTicketPrice
	}
	return 0
}

func (x *EventListInfo) GetCurrency() *EventCurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *EventListInfo) GetIsBookingAvailable() bool {
	if x != nil {
		return x.IsBookingAvailable
	}
	return false
}

func (x *EventListInfo) GetSchedules() []*EventScheduleInfo {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *EventListInfo) GetHashTags() []string {
	if x != nil {
		return x.HashTags
	}
	return nil
}

type EventArtistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Type   []*EventArtistTypeInfo `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	Intro  string                 `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
}

func (x *EventArtistInfo) Reset() {
	*x = EventArtistInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventArtistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventArtistInfo) ProtoMessage() {}

func (x *EventArtistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventArtistInfo.ProtoReflect.Descriptor instead.
func (*EventArtistInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{4}
}

func (x *EventArtistInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventArtistInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventArtistInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *EventArtistInfo) GetType() []*EventArtistTypeInfo {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *EventArtistInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

type EventArtistTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *EventArtistTypeInfo) Reset() {
	*x = EventArtistTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventArtistTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventArtistTypeInfo) ProtoMessage() {}

func (x *EventArtistTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventArtistTypeInfo.ProtoReflect.Descriptor instead.
func (*EventArtistTypeInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{5}
}

func (x *EventArtistTypeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventArtistTypeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventArtistTypeInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type EventScheduleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location  *EventLocationInfo  `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Times     []*EventTime        `protobuf:"bytes,2,rep,name=times,proto3" json:"times,omitempty"`
	Sponsors  []*EventSponsors    `protobuf:"bytes,3,rep,name=sponsors,proto3" json:"sponsors,omitempty"`
	Vouchers  []*EventVoucherInfo `protobuf:"bytes,4,rep,name=vouchers,proto3" json:"vouchers,omitempty"`
	IsSoldOut bool                `protobuf:"varint,5,opt,name=is_sold_out,json=isSoldOut,proto3" json:"is_sold_out"`
	IsPublic  bool                `protobuf:"varint,6,opt,name=is_public,json=isPublic,proto3" json:"is_public"`
}

func (x *EventScheduleInfo) Reset() {
	*x = EventScheduleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventScheduleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventScheduleInfo) ProtoMessage() {}

func (x *EventScheduleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventScheduleInfo.ProtoReflect.Descriptor instead.
func (*EventScheduleInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{6}
}

func (x *EventScheduleInfo) GetLocation() *EventLocationInfo {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EventScheduleInfo) GetTimes() []*EventTime {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *EventScheduleInfo) GetSponsors() []*EventSponsors {
	if x != nil {
		return x.Sponsors
	}
	return nil
}

func (x *EventScheduleInfo) GetVouchers() []*EventVoucherInfo {
	if x != nil {
		return x.Vouchers
	}
	return nil
}

func (x *EventScheduleInfo) GetIsSoldOut() bool {
	if x != nil {
		return x.IsSoldOut
	}
	return false
}

func (x *EventScheduleInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type EventSeatMaps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MapPicture string `protobuf:"bytes,3,opt,name=map_picture,json=mapPicture,proto3" json:"map_picture,omitempty"`
}

func (x *EventSeatMaps) Reset() {
	*x = EventSeatMaps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSeatMaps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSeatMaps) ProtoMessage() {}

func (x *EventSeatMaps) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSeatMaps.ProtoReflect.Descriptor instead.
func (*EventSeatMaps) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{7}
}

func (x *EventSeatMaps) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSeatMaps) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSeatMaps) GetMapPicture() string {
	if x != nil {
		return x.MapPicture
	}
	return ""
}

type EventTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralSeatMaps  []*EventSeatMaps `protobuf:"bytes,1,rep,name=general_seat_maps,json=generalSeatMaps,proto3" json:"general_seat_maps,omitempty"`
	StartTime        int64                   `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          int64                   `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	BookingStartTime int64                   `protobuf:"varint,4,opt,name=booking_start_time,json=bookingStartTime,proto3" json:"booking_start_time,omitempty"`
	BookingEndTime   int64                   `protobuf:"varint,5,opt,name=booking_end_time,json=bookingEndTime,proto3" json:"booking_end_time,omitempty"`
	CheckinStartTime int64                   `protobuf:"varint,6,opt,name=checkin_start_time,json=checkinStartTime,proto3" json:"checkin_start_time,omitempty"`
	CheckinEndTime   int64                   `protobuf:"varint,7,opt,name=checkin_end_time,json=checkinEndTime,proto3" json:"checkin_end_time,omitempty"`
	Timezone         string                  `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
	IsSoldout        bool                    `protobuf:"varint,9,opt,name=is_soldout,json=isSoldout,proto3" json:"is_soldout"`
}

func (x *EventTime) Reset() {
	*x = EventTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTime) ProtoMessage() {}

func (x *EventTime) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTime.ProtoReflect.Descriptor instead.
func (*EventTime) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{8}
}

func (x *EventTime) GetGeneralSeatMaps() []*EventSeatMaps {
	if x != nil {
		return x.GeneralSeatMaps
	}
	return nil
}

func (x *EventTime) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *EventTime) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *EventTime) GetBookingStartTime() int64 {
	if x != nil {
		return x.BookingStartTime
	}
	return 0
}

func (x *EventTime) GetBookingEndTime() int64 {
	if x != nil {
		return x.BookingEndTime
	}
	return 0
}

func (x *EventTime) GetCheckinStartTime() int64 {
	if x != nil {
		return x.CheckinStartTime
	}
	return 0
}

func (x *EventTime) GetCheckinEndTime() int64 {
	if x != nil {
		return x.CheckinEndTime
	}
	return 0
}

func (x *EventTime) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *EventTime) GetIsSoldout() bool {
	if x != nil {
		return x.IsSoldout
	}
	return false
}

type EventSponsors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Level  *EventSponsorLevelInfo `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *EventSponsors) Reset() {
	*x = EventSponsors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSponsors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSponsors) ProtoMessage() {}

func (x *EventSponsors) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSponsors.ProtoReflect.Descriptor instead.
func (*EventSponsors) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{9}
}

func (x *EventSponsors) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSponsors) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSponsors) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *EventSponsors) GetLevel() *EventSponsorLevelInfo {
	if x != nil {
		return x.Level
	}
	return nil
}

type EventSponsorLevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *EventSponsorLevelInfo) Reset() {
	*x = EventSponsorLevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSponsorLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSponsorLevelInfo) ProtoMessage() {}

func (x *EventSponsorLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSponsorLevelInfo.ProtoReflect.Descriptor instead.
func (*EventSponsorLevelInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{10}
}

func (x *EventSponsorLevelInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSponsorLevelInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSponsorLevelInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type EventVoucherInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Thumbnail string `protobuf:"bytes,2,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	SponsorId string `protobuf:"bytes,3,opt,name=sponsor_id,json=sponsorId,proto3" json:"sponsor_id,omitempty"`
	ExpiredAt int64  `protobuf:"varint,4,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`
	EventId   string `protobuf:"bytes,5,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Detail    string `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *EventVoucherInfo) Reset() {
	*x = EventVoucherInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventVoucherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventVoucherInfo) ProtoMessage() {}

func (x *EventVoucherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventVoucherInfo.ProtoReflect.Descriptor instead.
func (*EventVoucherInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{11}
}

func (x *EventVoucherInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventVoucherInfo) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *EventVoucherInfo) GetSponsorId() string {
	if x != nil {
		return x.SponsorId
	}
	return ""
}

func (x *EventVoucherInfo) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

func (x *EventVoucherInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventVoucherInfo) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type EventLocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Ward     string `protobuf:"bytes,3,opt,name=ward,proto3" json:"ward,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Name     string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EventLocationInfo) Reset() {
	*x = EventLocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventLocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLocationInfo) ProtoMessage() {}

func (x *EventLocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLocationInfo.ProtoReflect.Descriptor instead.
func (*EventLocationInfo) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{12}
}

func (x *EventLocationInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventLocationInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EventLocationInfo) GetWard() string {
	if x != nil {
		return x.Ward
	}
	return ""
}

func (x *EventLocationInfo) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *EventLocationInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *EventLocationInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *EventLocationInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetEventDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartnershipId string `protobuf:"bytes,2,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
}

func (x *GetEventDetailReq) Reset() {
	*x = GetEventDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventDetailReq) ProtoMessage() {}

func (x *GetEventDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventDetailReq.ProtoReflect.Descriptor instead.
func (*GetEventDetailReq) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{13}
}

func (x *GetEventDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetEventDetailReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

type SearchTopEventsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string         `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Pagination    *PaginationReq `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchTopEventsReq) Reset() {
	*x = SearchTopEventsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopEventsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopEventsReq) ProtoMessage() {}

func (x *SearchTopEventsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopEventsReq.ProtoReflect.Descriptor instead.
func (*SearchTopEventsReq) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{14}
}

func (x *SearchTopEventsReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *SearchTopEventsReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchListEventsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnershipId string            `protobuf:"bytes,1,opt,name=partnership_id,json=partnershipId,proto3" json:"partnership_id,omitempty"`
	Status        SearchEventStatus `protobuf:"varint,2,opt,name=status,proto3,enum=search.mobile.SearchEventStatus" json:"status,omitempty"`
	Pagination    *PaginationReq    `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OrderBy       []*OrderByItem    `protobuf:"bytes,4,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *SearchListEventsReq) Reset() {
	*x = SearchListEventsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchListEventsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchListEventsReq) ProtoMessage() {}

func (x *SearchListEventsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchListEventsReq.ProtoReflect.Descriptor instead.
func (*SearchListEventsReq) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{15}
}

func (x *SearchListEventsReq) GetPartnershipId() string {
	if x != nil {
		return x.PartnershipId
	}
	return ""
}

func (x *SearchListEventsReq) GetStatus() SearchEventStatus {
	if x != nil {
		return x.Status
	}
	return SearchEventStatus_EVENT_FILTER_STATUS_INVALID
}

func (x *SearchListEventsReq) GetPagination() *PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchListEventsReq) GetOrderBy() []*OrderByItem {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

type GetEventDetailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *EventDetailInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetEventDetailRes) Reset() {
	*x = GetEventDetailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventDetailRes) ProtoMessage() {}

func (x *GetEventDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventDetailRes.ProtoReflect.Descriptor instead.
func (*GetEventDetailRes) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{16}
}

func (x *GetEventDetailRes) GetInfo() *EventDetailInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SearchTopEventsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*EventListInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchTopEventsRes) Reset() {
	*x = SearchTopEventsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopEventsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopEventsRes) ProtoMessage() {}

func (x *SearchTopEventsRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopEventsRes.ProtoReflect.Descriptor instead.
func (*SearchTopEventsRes) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{17}
}

func (x *SearchTopEventsRes) GetInfo() []*EventListInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SearchTopEventsRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchListEventsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       []*EventListInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Pagination *PaginationRes   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchListEventsRes) Reset() {
	*x = SearchListEventsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_search_mobile_event_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchListEventsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchListEventsRes) ProtoMessage() {}

func (x *SearchListEventsRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_mobile_event_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchListEventsRes.ProtoReflect.Descriptor instead.
func (*SearchListEventsRes) Descriptor() ([]byte, []int) {
	return file_proto_search_mobile_event_proto_rawDescGZIP(), []int{18}
}

func (x *SearchListEventsRes) GetInfo() []*EventListInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SearchListEventsRes) GetPagination() *PaginationRes {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_proto_search_mobile_event_proto protoreflect.FileDescriptor

var file_proto_search_mobile_event_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x1a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf4, 0x05, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x06,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x3c, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x5f, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xa1, 0x03, 0x0a, 0x0f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x05,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x06, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x80, 0x06, 0x0a,
	0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13,
	0x0a, 0x05, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65,
	0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a,
	0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x33, 0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x13, 0x6d, 0x69, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x68, 0x69, 0x67, 0x68, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x69, 0x67, 0x68, 0x74,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x12, 0x2d, 0x0a, 0x12,
	0x68, 0x69, 0x67, 0x68, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x53, 0x6f, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x61, 0x67, 0x73, 0x22,
	0x9b, 0x01, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x22, 0x4d, 0x0a,
	0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xb5, 0x02, 0x0a,
	0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x38, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73,
	0x52, 0x08, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x76, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x76,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x6f,
	0x6c, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x53, 0x6f, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x22, 0x5b, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x81, 0x03, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x4f, 0x0a, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f,
	0x6d, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x73, 0x52,
	0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x6f, 0x6c,
	0x64, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x6f,
	0x6c, 0x64, 0x6f, 0x75, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x3a, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x4f, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x22, 0xb5, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x6f, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22,
	0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x85, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x8d, 0x03, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x1b, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x4f, 0x54, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x23,
	0x0a, 0x1f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c,
	0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x47, 0x4f, 0x49, 0x4e, 0x47,
	0x5f, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x50, 0x43,
	0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x4f, 0x4c, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x29, 0x0a, 0x25, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x53, 0x41, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4f,
	0x4f, 0x4e, 0x10, 0x09, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49,
	0x4c, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x50,
	0x5f, 0x53, 0x41, 0x4c, 0x45, 0x10, 0x0a, 0x2a, 0xf2, 0x02, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x23, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x30, 0x0a, 0x2c, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49,
	0x4c, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x5f, 0x4f,
	0x4e, 0x10, 0x01, 0x12, 0x31, 0x0a, 0x2d, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x54,
	0x41, 0x49, 0x4c, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x4f, 0x54, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x50,
	0x4c, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x47, 0x4f, 0x49, 0x4e, 0x47,
	0x5f, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x05, 0x12, 0x28, 0x0a, 0x24, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x50,
	0x4c, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x5f,
	0x4f, 0x55, 0x54, 0x10, 0x06, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x07, 0x32, 0x9f, 0x02, 0x0a,
	0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x0f, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x5a, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x42, 0x11,
	0x5a, 0x0f, 0x2e, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x3b, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_search_mobile_event_proto_rawDescOnce sync.Once
	file_proto_search_mobile_event_proto_rawDescData = file_proto_search_mobile_event_proto_rawDesc
)

func file_proto_search_mobile_event_proto_rawDescGZIP() []byte {
	file_proto_search_mobile_event_proto_rawDescOnce.Do(func() {
		file_proto_search_mobile_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_search_mobile_event_proto_rawDescData)
	})
	return file_proto_search_mobile_event_proto_rawDescData
}

var file_proto_search_mobile_event_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_search_mobile_event_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_search_mobile_event_proto_goTypes = []interface{}{
	(SearchEventStatus)(0),            // 0: search.mobile.SearchEventStatus
	(EventDetailPageDisplayStatus)(0), // 1: search.mobile.EventDetailPageDisplayStatus
	(*EventDetailInfo)(nil),           // 2: search.mobile.EventDetailInfo
	(*EventCurrencyInfo)(nil),         // 3: search.mobile.EventCurrencyInfo
	(*EventSimpleInfo)(nil),           // 4: search.mobile.EventSimpleInfo
	(*EventListInfo)(nil),             // 5: search.mobile.EventListInfo
	(*EventArtistInfo)(nil),           // 6: search.mobile.EventArtistInfo
	(*EventArtistTypeInfo)(nil),       // 7: search.mobile.EventArtistTypeInfo
	(*EventScheduleInfo)(nil),         // 8: search.mobile.EventScheduleInfo
	(*EventSeatMaps)(nil),      // 9: search.mobile.EventSeatMaps
	(*EventTime)(nil),                 // 10: search.mobile.EventTime
	(*EventSponsors)(nil),             // 11: search.mobile.EventSponsors
	(*EventSponsorLevelInfo)(nil),     // 12: search.mobile.EventSponsorLevelInfo
	(*EventVoucherInfo)(nil),          // 13: search.mobile.EventVoucherInfo
	(*EventLocationInfo)(nil),         // 14: search.mobile.EventLocationInfo
	(*GetEventDetailReq)(nil),         // 15: search.mobile.GetEventDetailReq
	(*SearchTopEventsReq)(nil),        // 16: search.mobile.SearchTopEventsReq
	(*SearchListEventsReq)(nil),       // 17: search.mobile.SearchListEventsReq
	(*GetEventDetailRes)(nil),         // 18: search.mobile.GetEventDetailRes
	(*SearchTopEventsRes)(nil),        // 19: search.mobile.SearchTopEventsRes
	(*SearchListEventsRes)(nil),       // 20: search.mobile.SearchListEventsRes
	(*Media)(nil),                     // 21: search.mobile.Media
	(*PaginationReq)(nil),             // 22: search.mobile.PaginationReq
	(*OrderByItem)(nil),               // 23: search.mobile.OrderByItem
	(*PaginationRes)(nil),             // 24: search.mobile.PaginationRes
}
var file_proto_search_mobile_event_proto_depIdxs = []int32{
	1,  // 0: search.mobile.EventDetailInfo.status:type_name -> search.mobile.EventDetailPageDisplayStatus
	21, // 1: search.mobile.EventDetailInfo.medias:type_name -> search.mobile.Media
	21, // 2: search.mobile.EventDetailInfo.programs:type_name -> search.mobile.Media
	6,  // 3: search.mobile.EventDetailInfo.artists:type_name -> search.mobile.EventArtistInfo
	8,  // 4: search.mobile.EventDetailInfo.schedules:type_name -> search.mobile.EventScheduleInfo
	3,  // 5: search.mobile.EventDetailInfo.currency:type_name -> search.mobile.EventCurrencyInfo
	21, // 6: search.mobile.EventSimpleInfo.medias:type_name -> search.mobile.Media
	3,  // 7: search.mobile.EventSimpleInfo.currency:type_name -> search.mobile.EventCurrencyInfo
	21, // 8: search.mobile.EventListInfo.medias:type_name -> search.mobile.Media
	3,  // 9: search.mobile.EventListInfo.currency:type_name -> search.mobile.EventCurrencyInfo
	8,  // 10: search.mobile.EventListInfo.schedules:type_name -> search.mobile.EventScheduleInfo
	7,  // 11: search.mobile.EventArtistInfo.type:type_name -> search.mobile.EventArtistTypeInfo
	14, // 12: search.mobile.EventScheduleInfo.location:type_name -> search.mobile.EventLocationInfo
	10, // 13: search.mobile.EventScheduleInfo.times:type_name -> search.mobile.EventTime
	11, // 14: search.mobile.EventScheduleInfo.sponsors:type_name -> search.mobile.EventSponsors
	13, // 15: search.mobile.EventScheduleInfo.vouchers:type_name -> search.mobile.EventVoucherInfo
	9,  // 16: search.mobile.EventTime.general_seat_maps:type_name -> search.mobile.EventSeatMaps
	12, // 17: search.mobile.EventSponsors.level:type_name -> search.mobile.EventSponsorLevelInfo
	22, // 18: search.mobile.SearchTopEventsReq.pagination:type_name -> search.mobile.PaginationReq
	0,  // 19: search.mobile.SearchListEventsReq.status:type_name -> search.mobile.SearchEventStatus
	22, // 20: search.mobile.SearchListEventsReq.pagination:type_name -> search.mobile.PaginationReq
	23, // 21: search.mobile.SearchListEventsReq.order_by:type_name -> search.mobile.OrderByItem
	2,  // 22: search.mobile.GetEventDetailRes.info:type_name -> search.mobile.EventDetailInfo
	5,  // 23: search.mobile.SearchTopEventsRes.info:type_name -> search.mobile.EventListInfo
	24, // 24: search.mobile.SearchTopEventsRes.pagination:type_name -> search.mobile.PaginationRes
	5,  // 25: search.mobile.SearchListEventsRes.info:type_name -> search.mobile.EventListInfo
	24, // 26: search.mobile.SearchListEventsRes.pagination:type_name -> search.mobile.PaginationRes
	15, // 27: search.mobile.SearchEventService.GetEventDetail:input_type -> search.mobile.GetEventDetailReq
	16, // 28: search.mobile.SearchEventService.SearchTopEvents:input_type -> search.mobile.SearchTopEventsReq
	17, // 29: search.mobile.SearchEventService.SearchListEvents:input_type -> search.mobile.SearchListEventsReq
	18, // 30: search.mobile.SearchEventService.GetEventDetail:output_type -> search.mobile.GetEventDetailRes
	19, // 31: search.mobile.SearchEventService.SearchTopEvents:output_type -> search.mobile.SearchTopEventsRes
	20, // 32: search.mobile.SearchEventService.SearchListEvents:output_type -> search.mobile.SearchListEventsRes
	30, // [30:33] is the sub-list for method output_type
	27, // [27:30] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_proto_search_mobile_event_proto_init() }
func file_proto_search_mobile_event_proto_init() {
	if File_proto_search_mobile_event_proto != nil {
		return
	}
	file_proto_search_mobile_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_search_mobile_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventArtistInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventArtistTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventScheduleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSeatMaps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSponsors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSponsorLevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventVoucherInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventLocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopEventsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchListEventsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventDetailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopEventsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_search_mobile_event_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchListEventsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_search_mobile_event_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_search_mobile_event_proto_goTypes,
		DependencyIndexes: file_proto_search_mobile_event_proto_depIdxs,
		EnumInfos:         file_proto_search_mobile_event_proto_enumTypes,
		MessageInfos:      file_proto_search_mobile_event_proto_msgTypes,
	}.Build()
	File_proto_search_mobile_event_proto = out.File
	file_proto_search_mobile_event_proto_rawDesc = nil
	file_proto_search_mobile_event_proto_goTypes = nil
	file_proto_search_mobile_event_proto_depIdxs = nil
}
