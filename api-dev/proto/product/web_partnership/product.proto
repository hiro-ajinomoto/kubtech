syntax = "proto3";

package product.web_partnership;
option  go_package = "gitlab.bcasia.io/thuynga/apps/api/gen/go/product/web_partnership;web_partnership";

import "base/base.proto";

service ProductService {
  rpc CreateProduct(CreateProductReq) returns (CreateProductRes);
  rpc UpdateProduct(UpdateProductReq) returns (base.Empty);
  rpc SoftDeleteProduct(SoftDeleteProductReq) returns (base.Empty);
  rpc HardDeleteProduct(HardDeleteProductReq) returns (base.Empty);

  rpc RetrieveProduct(RetrieveProductReq) returns (RetrieveProductRes);
  rpc ListProduct(ListProductReq) returns (ListProductRes);

  rpc PublicRetrieveProduct(PublicRetrieveProductReq) returns (PublicRetrieveProductRes);
  rpc PublicListProduct(PublicListProductReq) returns (PublicListProductRes);
  rpc ListProductBySeats(ListProductBySeatsReq) returns (ListProductRes);
}

//=================================== TYPES ====================================

enum ValueType {
  VALUE_TYPE_INVALID = 0;
  VALUE_TYPE_STRING  = 1;
  VALUE_TYPE_INTEGER = 2;
  VALUE_TYPE_FLOAT   = 3;
  VALUE_TYPE_BOOLEAN = 4;
}

enum PurchaseType {
  PURCHASE_TYPE_INVALID      = 0;
  PURCHASE_TYPE_RENT_OR_SELL = 1;
  PURCHASE_TYPE_RENT_ONLY    = 2;
  PURCHASE_TYPE_SELL_ONLY    = 3;
}

enum ProductStatus {
  PRODUCT_STATUS_INVALID     = 0;
  PRODUCT_STATUS_PUBLISHED   = 1;
  PRODUCT_STATUS_UNPUBLISHED = 2;
  PRODUCT_STATUS_DRAFT       = 3;
  PRODUCT_STATUS_DELETED     = 4;
}

message ProductInfo {
  string id             = 1;
  int64  created_at     = 2;
  int64  updated_at     = 3;
  string created_by     = 4;
  string updated_by     = 5;
  string partnership_id = 6;

  string                          name                 = 7;
  repeated string                 medias               = 8;
  repeated string                 tags                 = 9;
  int64                           available_start_time = 10;
  int64                           available_end_time   = 11;
  int64                           quantity             = 12;
  string                          sku                  = 13;
  double                          listed_price         = 14;
  double                          discount_percent     = 15;
  double                          price                = 16;
  string                          barcode              = 17;
  string                          uom                  = 18; // unit of measurement
  ProductCurrencyInfo             currency             = 19;
  string                          brand                = 20;
  string                          description          = 21;
  base.Boolean                    unlimited            = 22;
  string                          country              = 23;
  repeated DetailProductAttribute attributes           = 24;
  PurchaseType                    purchase_type        = 25;
  ProductStatus                   status               = 26;
  string                          language             = 27;
  bool                            in_booking           = 28;
  map<string, string>             additional_data      = 29;
  string                          partner_shop_id      = 30;
}

message ProductCurrencyInfo {
  string id   = 1;
  string name = 2;
  string code = 3;
  string icon = 4;
}

message BasicProductAttribute {
  string master_data_id = 1;
  string input_value    = 2;
}

message DetailProductAttribute {
  string              master_data_id  = 1;
  string              name            = 2;
  string              value           = 3;
  map<string, string> additional_data = 4;
  string              type            = 5;
}

//================================= REQUESTS ===================================

message CreateProductReq {
  string                         name                 = 1;
  repeated string                medias               = 2;
  repeated string                tags                 = 3;
  int64                          available_start_time = 4;
  int64                          available_end_time   = 5;
  int64                          quantity             = 6;
  string                         sku                  = 7;
  double                         listed_price         = 8;
  double                         discount_percent     = 9;
  string                         uom                  = 10; // unit of measurement
  ProductCurrencyInfo            currency             = 11;
  string                         brand                = 12;
  string                         description          = 13;
  base.Boolean                   unlimited            = 14;
  string                         country              = 15;
  string                         language             = 16;
  repeated BasicProductAttribute attributes           = 17;
  PurchaseType                   purchase_type        = 18;
  ProductStatus                  status               = 19;
  map<string, string>            additional_data      = 20;
  string                         partner_shop_id      = 21;
}

message UpdateProductReq {
  string                         id                   = 1;
  string                         name                 = 2;
  repeated string                medias               = 3;
  repeated string                tags                 = 4;
  int64                          available_start_time = 5;
  int64                          available_end_time   = 6;
  int64                          quantity             = 7;
  string                         sku                  = 8;
  double                         listed_price         = 9;
  double                         discount_percent     = 10;
  string                         uom                  = 11; // unit of measurement
  ProductCurrencyInfo            currency             = 12;
  string                         brand                = 13;
  string                         description          = 14;
  base.Boolean                   unlimited            = 15;
  string                         country              = 16;
  string                         language             = 17;
  repeated BasicProductAttribute attributes           = 18;
  PurchaseType                   purchase_type        = 19;
  ProductStatus                  status               = 20;
  map<string, string>            additional_data      = 21;
  string                         partner_shop_id      = 22;
}

message SoftDeleteProductReq { repeated string ids = 1; }

message HardDeleteProductReq { repeated string ids = 1; }

message PublicListProductReq {
  string             search                = 1;
  base.PaginationReq pagination            = 2;
  repeated base.OrderByItem order_by       = 3;
  string                    partnership_id = 4;
}

message RetrieveProductReq { string id = 1; }

message ListProductReq {
  string                 name           = 1;
  map<string, string>    attributes     = 2;
  double                 price_from     = 3; // skip if price_from < 0
  double                 price_to       = 4; // skip if price_to < 0
  repeated ProductStatus status         = 5;
  base.PaginationReq     pagination     = 6;
  repeated base.OrderByItem order_by    = 7;
  string                    search_text = 8;
}

message PublicRetrieveProductReq {
  string id             = 1;
  string partnership_id = 2;
}

//================================= RESPONSES ==================================

message CreateProductRes { string id = 1; }

message RetrieveProductRes {
  ProductInfo info           = 1;
  bool        bought         = 2;
  bool        rent           = 3;
  int64       remaining_time = 4;
}

message ListProductRes {
  repeated ProductInfo info       = 1;
  base.PaginationRes   pagination = 2;
}

message PublicRetrieveProductRes {
  ProductInfo info           = 1;
  bool        bought         = 2;
  bool        rent           = 3;
  int64       remaining_time = 4;
}

message PublicListProductRes {
  repeated ProductInfo info       = 1;
  base.PaginationRes   pagination = 2;
}

message ListProductBySeatsReq {
  string             event_id       = 1;
  repeated string    seat_block_ids = 2;
  repeated string    seat_ids       = 3;
  base.PaginationReq pagination     = 4;
}
